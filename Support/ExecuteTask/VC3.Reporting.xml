<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VC3.Reporting</name>
    </assembly>
    <members>
        <member name="T:VC3.Reporting.Design.ReportTypeList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportType"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor">
            <summary>
            Creates an empty list of ReportType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.Add(VC3.Reporting.Design.ReportType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportType"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.Contains(VC3.Reporting.Design.ReportType)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportType"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.IndexOf(VC3.Reporting.Design.ReportType)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportType"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.Insert(System.Int32,VC3.Reporting.Design.ReportType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportType"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.Remove(VC3.Reporting.Design.ReportType)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportType"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportType"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportType"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSelectColumn">
            <summary>
            ReportSelectColumn
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumn">
            <summary>
            ReportColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.#ctor">
            <summary>
            Creates a new ReportColumn.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn,VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Creates a new ReportColumn.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportColumn that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumn.InSameTable(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Returns true if both columns are in the same table.  The two columns
            must have the <see cref="P:VC3.Reporting.Design.ReportColumn.Table"/> as well
            as the <see cref="P:VC3.Reporting.Design.ReportColumn.ParameterValues"/> to be considered in the same table.
            </summary>
            <param name="otherColumn"></param>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Name">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.FullName">
            <summary>
            Gets the full name of the column including the table column prefix.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.QualifiedName">
            <summary>
            Gets the qualified name of the column including the full name
            and value of all column parameters.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.ParameterValues">
            <summary>
            Gets the list of parameter values used to parameterize the
            column's <see cref="P:VC3.Reporting.Design.ReportColumn.Table"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.AllowedValuesExpression">
            <summary>
            Gets the SQL used to fetch the allowed values
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.AllowedValueGroups">
            <summary>
            Gets the groups of allowed values for the column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.AllowedValues">
            <summary>
            Gets the allowed values for the column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.AllowedValueIdField">
            <summary>
            Gets the name of the field for the <see cref="P:VC3.Reporting.Design.ReportColumn.AllowedValuesExpression"/>
            that represents the id of the allowed value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.AllowedValueNameField">
            <summary>
            Gets the name of the field for the <see cref="P:VC3.Reporting.Design.ReportColumn.AllowedValuesExpression"/>
            that represents the display name of the allowed value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Report">
            <summary>
            Gets or sets the Report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Type">
            <summary>
            Gets or sets the Type.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Table">
            <summary>
            Gets or sets the table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Column">
            <summary>
            Gets or sets the Column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.#ctor">
            <summary>
            A new ReportSelectColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportSelectColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportSelectColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSelectColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumn.Label">
            <summary>
            Gets or sets the Label.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumn.SummaryFunction">
            <summary>
            Gets or sets the SummaryFunction.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumn.SummaryFunctions">
            <summary>
            Gets or sets the SummaryFunctions.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumn.AllowableSummaryFunctions">
            <summary>
            Gets the set of allowable summary functions that may be used
            to aggregate the current column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaSummaryFunction">
            <summary>
            ReportSchemaSummaryFunction
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.ToSql(System.String)">
            <summary>
            Creates a sql expression that can be included in a select clause.
            </summary>
            <param name="expressionToSummarize">The expression to summarize</param>
            <returns>The sql summary expression</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.ToString">
            <summary>
            Returns the name of the summary function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.#ctor">
            <summary>
            Creates a new ReportSchemaSummaryFunction.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.#ctor(System.Char)">
            <summary>
            An existing ReportSchemaSummaryFunction that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaSummaryFunction objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunction.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunction.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunction.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunction.FunctionExpression">
            <summary>
            Gets or sets the FunctionExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunction.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunction.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.Report"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.Sort(System.String,System.Boolean)">
            <summary>
            Sorts the list by the specified property
            </summary>
            <param name="property">Property to sort by</param>
            <param name="ascending">If true, the list will be sorted in ascending order</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor">
            <summary>
            Creates an empty list of Report objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of Report objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of Report objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of Report objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of Report objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of Report objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.Add(VC3.Reporting.Design.Report)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.Report"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.Contains(VC3.Reporting.Design.Report)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.Report"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.IndexOf(VC3.Reporting.Design.Report)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.Report"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.Insert(System.Int32,VC3.Reporting.Design.Report)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.Report"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.Remove(VC3.Reporting.Design.Report)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.Report"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.Report"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.Report"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.Report"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFormatList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportFormat"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor">
            <summary>
            Creates an empty list of ReportFormat objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportFormat objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportFormat objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportFormat objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFormat objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFormat objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.Add(VC3.Reporting.Design.ReportFormat)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFormat"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.Contains(VC3.Reporting.Design.ReportFormat)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportFormat"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.IndexOf(VC3.Reporting.Design.ReportFormat)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportFormat"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.Insert(System.Int32,VC3.Reporting.Design.ReportFormat)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFormat"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.Remove(VC3.Reporting.Design.ReportFormat)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFormat"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormatList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFormat"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormatList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportFormat"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormatList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFormat">
            <summary>
            ReportFormat
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.#ctor">
            <summary>
            A new ReportFormat
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.#ctor(System.Char)">
            <summary>
            An existing ReportFormat that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.GetBuilder">
            <summary>
            Gets an <see cref="T:VC3.Reporting.IReportBuilder"/> for the current report format.
            </summary>
            <returns>An <see cref="T:VC3.Reporting.IReportBuilder"/> implementation</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFormat"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFormat"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportFormat objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFormat.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Builder">
            <summary>
            Gets or sets the Builder.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Template">
            <summary>
            Gets or sets the Template.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Datasource">
            <summary>
            Gets or sets the Datasource.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFormat.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFilterColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> objects.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportParameterColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> objects.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.GetAvailableColumns(VC3.Reporting.Design.ReportTypeColumnList,VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Determine the list of available columns recursively
            </summary>
            <param name="table">Table to start with</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Override in subclasses to filter the list of <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/>
            </summary>
            <param name="column">The column to test</param>
            <returns>True if column should be in list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor">
            <summary>
            Creates an empty list of ReportColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Add(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Add(System.String)">
            <summary>
            Adds a report column with the specified full name.
            </summary>
            <param name="name">The full name of the report column to add</param>
            <returns>The new report column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Contains(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.IndexOf(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.Remove(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnList.Report">
            <summary>
            Gets the <see cref="P:VC3.Reporting.Design.ReportColumnList.Report"/> that the columns belong to.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns">
            <summary>
            Gets the allowable <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> instances
            for the current <see cref="T:VC3.Reporting.Design.ReportTypeColumnList"/> subclass.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumn"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsParameterColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsParameterColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor">
            <summary>
            Creates an empty list of ReportParameterColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportParameterColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportParameterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportParameterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportParameterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportParameterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.Add(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.Contains(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.IndexOf(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.Remove(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportParameterColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsFilterColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsFilterColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor">
            <summary>
            Creates an empty list of ReportFilterColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportFilterColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportFilterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportFilterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFilterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFilterColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.Add(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.Contains(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.IndexOf(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.Remove(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008">
            <summary>
            ReportingServiceAdapter2008 provides access to SSRS 2008 web services
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter">
            <summary>
            ReportingServiceAdapter serves as the basis for performing web service based operations on
            a SQL Server Reporting Services (SSRS) server. This class should be subclassed to expose the 
            specific implementation provided by the web services of a given version of SSRS. It is 
            intended that the Create() method will determine via configuration, the appropriate type 
            to instantiate.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Create">
            <summary>
            Creates a web service adapter based on the current configuration
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Create(System.String,System.Net.ICredentials,System.String,System.String,System.Int32)">
            <summary>
            Creates a web service adapter without the need for a configuration file. This method
            is intended for deployment scenarios where dynamic configuration file reading is not
            possible.
            </summary>
            <param name="version">The Sql Server Reporting Services version</param>
            <param name="credentials">The ICredentials used to execute the service</param>
            <param name="serviceUrl">The web service url</param>
            <param name="executionServiceUrl">The web execution service url (not applicable for Sql 2005 and lower)</param>
            <param name="serviceTimeout">The timeout for request to the web service</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Create(System.Boolean)">
            <summary>
            Creates a web service adapter based on the current configuration
            </summary>
            <param name="transacted">True to create a transacted web service that will hold all activities until Commit() or Rollback() is called.</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Create(System.String,System.Net.ICredentials,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates a web service adapter without the need for a configuration file. This method
            is intended for deployment scenarios where dynamic configuration file reading is not
            possible.
            </summary>
            <param name="version">The Sql Server Reporting Services version</param>
            <param name="credentials">The ICredentials used to execute the service</param>
            <param name="serviceUrl">The web service url</param>
            <param name="executionServiceUrl">The web execution service url (not applicable for Sql 2005 and lower)</param>
            <param name="serviceTimeout">The timeout for request to the web service</param>
            <param name="transacted">True to create a transacted web service that will hold all activities until Commit() or Rollback() is called.</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Create(System.String)">
            <summary>
            Creates a web service adapter based on the current configuration
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.GetServiceVersion(System.String)">
            <summary>
            Parses version response from report service.
            </summary>
            <param name="reportServerVersionNumber">Ex: "Microsoft SQL Server Reporting Services Version 9.00.2047.00"</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.CreateReport(System.String,System.String)">
            <summary>
            Publishes a report to the report server
            </summary>
            <param name="path">Path to the report</param>
            <param name="rdl">RDL definition of the report</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.NewParameterValueList">
            <summary>
            Create a list to hold values created by CreateParameterValue that can be passed to Render methods
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.NewParameterValue(System.String,System.Object)">
            <summary>
            Create a parameter that can be passed to RenderReport
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.RenderResource(System.String,System.Collections.IList,VC3.Reporting.SqlServerReportingServices.SqlOutputFormat,System.String,System.String@,System.Byte[]@)">
            <summary>
            Renders a report resource
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.GetProperties(System.String)">
            <summary>
            Gets the properties of a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.SetProperties(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the properties of a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.DeleteItem(System.String)">
            <summary>
            Deletes a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.GetReportParameters(VC3.Reporting.SqlServerReportingServices.SqlReport,VC3.Reporting.ReportParameterList)">
            <summary>
            Gets parameters for a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.EnsureFolder(System.String)">
            <summary>
            Ensures the specified folder exists and create it if not
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
            <param name="folderPath">Absolute path to folder</param>
            <returns>A generic string list of messages describing the folder creation</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.CreateDataSource(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new datasource based on the specified parameters
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
            <param name="name">The datasource name</param>
            <param name="path">The path of the datasource</param>
            <param name="userName">The username associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="password">The password associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="extension"></param>
            <param name="connectionString">The connection string associated with the datasource</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.CreateReport(System.String,System.String,System.Boolean,System.Byte[])">
            <summary>
            Creates a report on the report server according to the specified parameters
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
            <param name="title">The title of the report</param>
            <param name="path">The folder path of the report</param>
            <param name="overWrite">true to overwrite an existing report of the same name and location</param>
            <param name="reportDefinition">a byte array representing the report rdl file</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.DownloadReport(System.String)">
            <summary>
            Uses the specified path to search the report server for Report items
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
            <param name="path">The path of the report rdl file</param>
            <returns>A generic list of <see cref="T:VC3.Reporting.SqlServerReportingServices.DownloadedReport"/> objects</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.CreateTransaction">
            <summary>
            Creates a transacted version of the web service that will be used by various deployment methods if available.
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Rollback">
            <summary>
            Rolls back changes if there is an open transaction
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter.Commit">
            <summary>
            Commits changes if there is an open transaction.
            <para>
            Override this method in subclasses with the implementation 
            specific to the web service being abstracted.
            </para>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.GetReportingService">
            <summary>
            Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService"/>.
            </summary>
            <returns>Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService"/></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.GetReportExecutionService">
            <summary>
            Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService"/>.
            </summary>
            <returns>Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService"/></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.CreateReport(System.String,System.String)">
            <summary>
            Publishes a report to the report server
            </summary>
            <param name="path">Path to the report</param>
            <param name="rdl">RDL definition of the report</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.RenderResource(System.String,System.Collections.IList,VC3.Reporting.SqlServerReportingServices.SqlOutputFormat,System.String,System.String@,System.Byte[]@)">
            <summary>
            Loads a report resource
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.EnsureFolder(System.String)">
            <summary>
            Ensures the specified folder exists and create it if not
            </summary>
            <param name="folderPath">Absolute path to folder</param>
            <returns>A generic string list of messages describing the folder creation</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.CreateDataSource(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new datasource based on the specified parameters
            </summary>
            <param name="name">The datasource name</param>
            <param name="path">The path of the datasource</param>
            <param name="userName">The username associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="password">The password associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="extension"></param>
            <param name="connectionString">The connection string associated with the datasource</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.CreateReport(System.String,System.String,System.Boolean,System.Byte[])">
            <summary>
            Creates a report on the report server according to the specified parameters
            </summary>
            <param name="title">The title of the report</param>
            <param name="path">The folder path of the report</param>
            <param name="overWrite">true to overwrite an existing report of the same name and location</param>
            <param name="reportDefinition">a byte array representing the report rdl file</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.DownloadReport(System.String)">
            <summary>
            Uses the specified path to search the report server for Report items
            </summary>
            <param name="path">The path of the report rdl file</param>
            <returns>A generic list of <see cref="T:VC3.Reporting.SqlServerReportingServices.DownloadedReport"/> objects</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.CreateTransaction">
            <summary>
            Creates a transacted version of the web service that will be used by various deployment methods if available.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.Rollback">
            <summary>
            Rolls back changes if there is an open transaction
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2008.Commit">
            <summary>
            Commits changes if there is an open transaction.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportType">
            <summary>
            ReportType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.ToString">
            <summary>
            Returns the name of the report type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.#ctor">
            <summary>
            A new ReportType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.#ctor(System.Char)">
            <summary>
            An existing ReportType that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.GetColumn(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Gets a column within the report type based the specified schema column.
            If the column is included in the report more than once, only the first
            occurance is returned.
            </summary>
            <param name="schemaColumn">Schema column to search based on</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.GetColumn(VC3.Reporting.Design.ReportTypeTable,VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Recursively searches for the specified column
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportType"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportType"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportType objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportType.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.IsEditable">
            <summary>
            Gets or sets the IsEditable.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Reports">
            <summary>
            Gets or sets the Reports.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Formats">
            <summary>
            Gets or sets the Formats.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.PrimaryTable">
            <summary>
            Gets the primary table of this report table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Tables">
            <summary>
            Gets all tables associated with this report type starting
            with the primary table.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.All">
            <summary>
            Gets all report types that are in the system.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportType.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.#ctor">
            <summary>
            Creates a new ReportSchemaColumnAllowedValue
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportSchemaColumnAllowedValue that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaColumnAllowedValue objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.IsDynamic">
            <summary>
            Gets or sets the IsDynamic.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.SchemaColumn">
            <summary>
            Gets or sets the SchemaColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValue.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportingServiceUtil">
            <summary>
            Utility class
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceUtil.ResolvePath(System.String)">
            <summary>
            Resolves relative a report path based on the current 
            <see cref="P:VC3.Reporting.SqlServerReportingServices.Settings.AppRoot"/>.  '~' is replaced with the current
            AppRoot.
            </summary>
            <returns>A valid path that can be passed to the Report Server.</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceUtil.ToAppRelativePath(System.String)">
            <summary>
            Makes a path into an app-root-relative path
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaTableParameter">
            <summary>
            ReportSchemaTableParameter
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.#ctor">
            <summary>
            Creates a new ReportSchemaTableParameter.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportSchemaTableParameter that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaTableParameter objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameter.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.IsRequired">
            <summary>
            Gets or sets the IsRequired.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Column">
            <summary>
            Gets or sets the Column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Table">
            <summary>
            Gets or sets the Table.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Operator">
            <summary>
            Gets or sets the Operator.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameter.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaColumnAllowedValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaColumnAllowedValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaColumnAllowedValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaColumnAllowedValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaColumnAllowedValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaColumnAllowedValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Add(VC3.Reporting.Design.ReportSchemaColumnAllowedValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Contains(VC3.Reporting.Design.ReportSchemaColumnAllowedValue)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.IndexOf(VC3.Reporting.Design.ReportSchemaColumnAllowedValue)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaColumnAllowedValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Remove(VC3.Reporting.Design.ReportSchemaColumnAllowedValue)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaColumnAllowedValue"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnAllowedValueList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnParameterValueList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor">
            <summary>
            Creates an empty list of ReportColumnParameterValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportColumnParameterValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportColumnParameterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportColumnParameterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnParameterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnParameterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.Add(VC3.Reporting.Design.ReportColumnParameterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.Contains(VC3.Reporting.Design.ReportColumnParameterValue)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.IndexOf(VC3.Reporting.Design.ReportColumnParameterValue)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.Insert(System.Int32,VC3.Reporting.Design.ReportColumnParameterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.Remove(VC3.Reporting.Design.ReportColumnParameterValue)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValueList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValueList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> from the list
            based on its parameter's name
            </summary>
            <param name="name">Name property of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValueList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValueList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValueList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.Settings">
            <summary>
            Class used to access settings for the reporting service.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.Current">
            <summary>
            Gets the current web service settings
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.Url">
            <summary>
            The url to the web service
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.ExcecutionUrl">
            <summary>
            The url to the execution web service. This setting has no effect for
            Sql Reporting Service versions 2005 and earlier.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.Credentials">
            <summary>
            The credentials used to authenticate with the web service
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.AppRoot">
            <summary>
            Gets the root report folder for this application.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.LogDirectory">
            <summary>
            Gets the directory to save generated RDL files to.  Optional.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.ProxyExe">
            <summary>
            Gets the path and filename for the report proxy executable.  Optional.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.Timeout">
            <summary>
            Gets the timeout for the reporting service
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.SessionExpires">
            <summary>
            Number of seconds to cache the report id. The default
            is 600 (10 minutes).
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.Settings.Version">
            <summary>
            Gets the version of the SQL Server Reporting Service(e.g. 2000, 2008, etc.).  
            Optional, the default value is 2000.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryNamespace">
            <summary>
            Utility class for managing names when building queries.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.Add(System.String)">
            <summary>
            Adds the specified name to the namespace.
            Converts it <see cref="M:VC3.Reporting.Design.QueryNamespace.ToVarName(System.String)"/> and
            <see cref="M:VC3.Reporting.Design.QueryNamespace.ToUniqueName(System.String)"/>.  
            </summary>
            <param name="name"></param>
            <returns>The converted name.  May be the same as the name passed in.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.Contains(System.String)">
            <summary>
            Returns true if the namespace contains this name
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.ToUniqueName(System.String)">
            <summary>
            Ensures that names are unique within this namespace and don't conflict with reserved words.
            </summary>
            <param name="name">Name to make unique</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.GetNames">
            <summary>
            Gets a list of all non-reserved names that
            have been added to to the namespace
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.ToShortName(System.String)">
            <summary>
            Creates a shortened version of a name
            </summary>
            <param name="longerName">Name to create a shorter name for</param>
            <returns>A shorter version of the longer name</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryNamespace.ToVarName(System.String)">
            <summary>
            Remove's special characters from the specified name so
            that is is a valid variable name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.Design.QueryColumn">
            <summary>
            Tracks information about a <see cref="T:VC3.Reporting.Design.ReportColumn"/>
            usage in a generated query.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryColumn.#ctor(VC3.Reporting.Design.QueryTable,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.Design.QueryColumn"/> for the specified
            <see cref="T:VC3.Reporting.Design.QueryTable"/> and expression template.
            </summary>
            <param name="table">The <see cref="T:VC3.Reporting.Design.QueryTable"/> the column is a member of</param>
            <param name="expression">The expression template to use to build the <see cref="P:VC3.Reporting.Design.QueryColumn.SqlExpression"/></param>
            <param name="groupingExpression">The expression to use if this column appears in the GROUP BY clause</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryColumn.SetAlias(VC3.Reporting.Design.QueryNamespace,System.String)">
            <summary>
            Assigns an alias to this table that is unique to the
            specified namespace.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.Table">
            <summary>
            Gets the table that the column belongs to.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.Expression">
            <summary>
            Gets the SQL template.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.GroupBySqlExpression">
            <summary>
            The SQL to include if the group by clause if the query is aggregated
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.SqlExpression">
            <summary>
            Gets the SQL to use for the column
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.Alias">
            <summary>
            Gets or sets the table alias used in to reference the table in a query.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumn.IsAggregated">
            <summary>
            Indicates if this column includes an aggregate function
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryOrdering">
            <summary>
            One element of an order by clause
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryOrdering.GetColumn(VC3.Reporting.Design.QueryColumnList)">
            <summary>
            Finds the column, if any, that is associated with this ordering
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryOrdering.ToSql(VC3.Reporting.Design.QueryColumnList)">
            <summary>
            Gets the sql expression for this element
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryOrdering.Table">
            <summary>
            The table, if any, this ordering depends upon
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryOrdering.Expression">
            <summary>
            The expression to sort by. Does not include the direction
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryOrdering.GroupBySqlExpression">
            <summary>
            The expression to group by. Does not include the direction
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryOrdering.IsAscending">
            <summary>
            The direction of the sorting
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryColumnList">
            <summary>
            Utility class used when building queries. 
            Tracks columns used in a query.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryColumnList.Add(VC3.Reporting.Design.QueryColumn)">
            <summary>
            Adds the column to the list of columns
            </summary>
            <param name="column"></param>
        </member>
        <member name="P:VC3.Reporting.Design.QueryColumnList.Item(System.String)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.Design.QueryColumn"/> in the list with the
            specified expression.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryTable">
            <summary>
            Tracks information about a table used in a query.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTable.#ctor(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Creates a new query table based on a <see cref="T:VC3.Reporting.Design.ReportColumn"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTable.#ctor(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Creates a new query table based on a parameterless table
            </summary>
            <param name="table">The table to include in the query</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTable.#ctor(VC3.Reporting.Design.ReportTypeTable,VC3.Reporting.Design.ReportColumnParameterValueList)">
            <summary>
            Creates a new query table based on a table and its parameters
            </summary>
            <param name="table">The table to include in the query</param>
            <param name="parameters">Parameters to use to instanciate the table in the query</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTable.SetAlias(VC3.Reporting.Design.QueryNamespace,System.String)">
            <summary>
            Assigns an alias to this table that is unique to the
            specified namespace
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTable.ToSql(System.String)">
            <summary>
            Converts an expression template to a valid SQL expression.
            </summary>
            <param name="expression">The expression to convert</param>
            <returns>The corresponding aliased SQL expression</returns>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.Join">
            <summary>
            Gets information about how the table is joined into the query
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.Table">
            <summary>
            Information about the table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.HasOrderColumns">
            <summary>
            The order by expressions associated with this table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.Columns">
            <summary>
            Gets the list of columns associated with this table in the query
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.WhereFilters">
            <summary>
            Gets the list of <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> objects
            associated with this table in the query
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.HavingFilters">
            <summary>
            Gets the list of <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> objects
            associated with this table in the query
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.DefaultAlias">
            <summary>
            Gets the default <see cref="P:VC3.Reporting.Design.QueryTable.Alias"/> based on the
            the table name and parameters.
            Format: "shortname_p1_p2_pn"
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.Alias">
            <summary>
            Gets or sets the table alias used in to reference the table in a query.
            Defaults to <see cref="P:VC3.Reporting.Design.QueryTable.DefaultAlias"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTable.Parameters">
            <summary>
            Gets the parameter values used for the instance of this table.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryTableList">
            <summary>
            Utility class used when building queries. 
            Tracks tables used in a query and their aliases.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryTableList.Insert(System.Int32,VC3.Reporting.Design.QueryTable)">
            <summary>
            Adds the <see cref="T:VC3.Reporting.Design.QueryTable"/> to the list at the specified index.
            </summary>
            <param name="index">The index to add the table at</param>
            <param name="t">The table to add</param>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTableList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.Design.QueryTable"/> located at the specified index.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTableList.Item(VC3.Reporting.Design.ReportTable)">
            <summary>
            Locates a QueryTable in the list based on a table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTableList.Item(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Locates the QueryTable in the list based on a non-parameterized table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTableList.Item(VC3.Reporting.Design.ReportTypeTable,VC3.Reporting.Design.ReportColumnParameterValueList)">
            <summary>
            Locates the QueryTable in the list based on a parameterized table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryTableList.Item(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Locates a QueryTable based on a column within the table
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryOperator">
            <summary>
            And / Or
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryBuilder">
            <summary>
            Class for building queries for tabular report data.
            </summary>
            <remarks>
            The generated query will look similar to this:
            <code>
            select 
            	t0.Column0 c0, t1.Column0 c1, ..., t1.ColumnN cN
            from
            	Table0 t0 join
            	Table1 t1 on t0.Column = t1.Column
            where
            	t0.Column0 = value and 
            	t1.Column0 = value
            order by
            	t0.Column0 asc,
            	t1.Column0 asc
            </code>
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetTable(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.Design.QueryTable"/> that corresponds to
            the specified <see cref="T:VC3.Reporting.Design.ReportColumn"/>.
            </summary>
            <param name="column">The <see cref="T:VC3.Reporting.Design.ReportColumn"/> to get the <see cref="T:VC3.Reporting.Design.QueryTable"/> for</param>
            <returns>The corresponding <see cref="T:VC3.Reporting.Design.QueryTable"/></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetTable(VC3.Reporting.Design.ReportTable)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.Design.QueryTable"/> that corresponds to
            the specified <see cref="T:VC3.Reporting.Design.ReportColumn"/>.
            </summary>
            <param name="table">The <see cref="T:VC3.Reporting.Design.ReportTable"/> to get the <see cref="T:VC3.Reporting.Design.QueryTable"/> for</param>
            <returns>The corresponding <see cref="T:VC3.Reporting.Design.QueryTable"/></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddTable(VC3.Reporting.Design.QueryTable)">
            <summary>
            Adds the <see cref="T:VC3.Reporting.Design.QueryTable"/> to the query.
            </summary>
            <param name="t">The table to add</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetColumnAliases">
            <summary>
            Gets the names of all aliases used in the query
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetColumnAlias(VC3.Reporting.Design.ReportColumn,System.String)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetDisplayColumnAlias(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetDisplayColumnAlias(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetDisplayColumnAlias(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaSummaryFunction,VC3.Reporting.Design.ReportGrouping)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetValueColumnAlias(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetLinkColumnAlias(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Gets the alias that can be used to read the value of the specified
            column from the results of the query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.
            </summary>
            <param name="column">The column to get the alias for</param>
            <returns>The alias for the column</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetParameterName(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Gets the name used to reference the parameter in the 
            query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.  The name
            returned does not include an "@".
            </summary>
            <param name="column">The parameter to get the name for</param>
            <returns>The name of the parameter</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetParameterName(System.String)">
            <summary>
            Gets the name used to reference the pre processor expression in the 
            query returned by <see cref="M:VC3.Reporting.Design.QueryBuilder.ToSql"/>.  The name
            returned does not include an "@".
            </summary>
            <param name="contextualExpression">The expresion to get the name for</param>
            <returns>The name of the parameter</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.GetParameterNames">
            <summary>
            Gets the names of all parameters (including ReportParameterColumns,
            ContextualExpressions, etc) used in the query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.IsSubQuery(System.String)">
            <summary>
            Determines if an expression is a sub query
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.IsUnqualifiedColumn(System.String)">
            <summary>
            Determines if the expression is a column name that has no
            table qualifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.ToQualifiedColumn(System.String)">
            <summary>
            Ensures that the column reference includes the table qualifier, "{this}."
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddConstant(System.String,System.String,System.String)">
            <summary>
            Adds a variable to the query
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.ExecuteReader">
            <summary>
            Returns an <see cref="T:System.Data.IDataReader"/> this
            builder 
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.EstimateRecordCount">
            <summary>
            Estimates the number of records that will be returned by this query
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddColumn(VC3.Reporting.Design.ReportColumn,System.String)">
            <summary>
            Adds a new <see cref="T:VC3.Reporting.Design.QueryColumn"/> to the query.
            </summary>
            <param name="column">The column to add</param>
            <param name="expression">The SQL expression for the column</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddColumn(VC3.Reporting.Design.ReportColumn,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:VC3.Reporting.Design.QueryColumn"/> to the query.
            </summary>
            <param name="column">The column to add</param>
            <param name="aliasSuffix">Optional text to include in the column alias to make the query more readable</param>
            <param name="expression">The SQL expression for the column</param>
            <param name="aggregatedColumn">Indicates that the expression includes an aggregate function</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddDisplayColumn(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression"/>
            in the select clause.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddDisplayColumn(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression"/> aggregated with the
            specified summary function in the select clause.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddDisplayColumns(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaSummaryFunction,VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression"/> that will aggregated with the
            specified summary function and then split into multiple columns. Can be used to create a pivot table.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddDisplayColumn(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaSummaryFunction,VC3.Reporting.Design.ReportGrouping)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression"/> that will aggregated with the
            specified summary function and then split into multiple columns. Can be used to create a pivot table.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddDisplayColumns(VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Includes each <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression"/>
            in the select clause.
            </summary>
            <param name="columns">The columns to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddLinkColumn(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.LinkExpression"/>
            in the select clause.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddValueColumn(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Includes the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.ValueExpression"/>
            in the select clause.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddValueColumns(VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Includes each <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.ValueExpression"/>
            in the select clause.
            </summary>
            <param name="columns">The columns to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.DeclareParameter(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Assigns a name to a parameter that is being used within the query.
            </summary>
            <param name="parameter"></param>
            <returns>The name assigned to the parameter within the query</returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddParameterColumn(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Includes the parameter in the where (or having) clause.
            </summary>
            <param name="parameter">The parameter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddParameterColumns(VC3.Reporting.Design.ReportParameterColumnList)">
            <summary>
            Includes each parameter in the where clause.
            </summary>
            <param name="parameters">The parameters to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddFilterColumn(VC3.Reporting.Design.ReportParameterColumn,VC3.Reporting.IReportParameter)">
            <summary>
            Includes the filter in the where (or having) clause based on <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/>
            and <see cref="T:VC3.Reporting.IReportParameter"/> values
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddFilterColumn(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Includes the filter in the where (or having) clause.
            </summary>
            <param name="filter">The filter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddFilterColumn(System.String,VC3.Reporting.Design.ReportColumn)">
            <summary>
            Includes the filter in the where clause.
            </summary>
            <param name="conditionalExpression">The filter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddFilterColumn(System.String,VC3.Reporting.Design.QueryTable)">
            <summary>
            Includes the filter in the where clause.
            </summary>
            <param name="conditionalExpression">The filter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddFilterColumns(VC3.Reporting.Design.ReportFilterColumnList)">
            <summary>
            Includes each filter in the where clause.
            </summary>
            <param name="filters">The filters to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.BeforeNextFilter">
            <summary>
            Prepares the whereBuilder for the next filter term
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.BeforeNextGroupedFilter">
            <summary>
            Prepares the havingBuilder for the next filter term
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.NewFilterSet">
            <summary>
            Gets a <see cref="T:VC3.Reporting.Design.WhereClauseBuilder"/> that can be for advanced query building.
            Prepares the QueryBuilder for a new set of filters to be added.  The new set of
            filters will be ANDed against the existing filters. Ex: (existing_filters) AND (new_filters)
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddOrderColumn(VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Includes the column in the order by clause.
            </summary>
            <param name="column">The column to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddOrderColumn(System.String)">
            <summary>
            Includes the expression in the order by clause.
            </summary>
            <param name="expression">The expression to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddOrderColumn(System.String,VC3.Reporting.Design.ReportColumn)">
            <summary>
            Includes the expression in the order by clause.
            </summary>
            <param name="expression">The expression to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddOrderColumn(System.String,System.String,VC3.Reporting.Design.QueryTable)">
            <summary>
            Includes the expression in the order by clause.
            </summary>
            <param name="expression">The expression to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.AddOrderColumns(VC3.Reporting.Design.ReportOrderColumnList)">
            <summary>
            Includes each column in the order by clause.
            </summary>
            <param name="columns">The columns to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.ToSql">
            <summary>
            Gets the SQL query that has been built.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryBuilder.ContextualExprToVariable(System.Text.RegularExpressions.Match)">
            <summary>
            Replaces PP expressions with variable names
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.Tables">
            <summary>
            Gets the list of <see cref="T:VC3.Reporting.Design.QueryTable"/>s used in this query.
            This list grows automatically when columns are added to the query.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.IsAggregated">
            <summary>
            Indicates that this query should include a group by clause
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.IsDistinct">
            <summary>
            Indicates that this query should be distinct
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.IncludeTotalsRow">
            <summary>
            If true, one row in the result set will include aggregate totals
            for all records.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.TotalsRowAlias">
            <summary>
            Gets a column alias that can used to determine if a row is the totals
            row in the results.  Only relevant when <see cref="P:VC3.Reporting.Design.QueryBuilder.IncludeTotalsRow"/>
            is true.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.QueryBuilder.ContextualExpressions">
            <summary>
            Gets the list of pre processor expressions
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.QueryPartitioning.#ctor(VC3.Reporting.Design.QueryTableList)">
            <summary>
            Partitions tables into 1 or more sets.  The
            first partition contains tables that should joined 
            into the query as usual.  Each subsequent partition can
            appear solely in the where clause b/c they only serve to
            restrict which records appear in the results.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.QueryPartitioning.FindPartition(VC3.Reporting.Design.QueryTable)">
            <summary>
            Locates the partition that this table belongs to
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.Design.QueryPartition">
            <summary>
            Internal utility class
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.QueryPartition.Join">
            <summary>
            How the partition is joined into the main part of the query
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.QueryTableJoin">
            <summary>
            Information about how a <see cref="T:VC3.Reporting.Design.QueryTable"/> is joined into a query
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.WhereClauseTermGroup">
            <summary>
            A special kind of <see cref="T:VC3.Reporting.Design.WhereClauseTerm"/> that ANDs or ORs together
            a set of other terms.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.WhereClauseTerm">
            <summary>
            Interface for any term within a where clause
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.WhereClauseBuilder">
            <summary>
            Provides low-level access to the where clause of a query.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.OpenParens">
            <summary>
            Starts a new sub-expression
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.CloseParens">
            <summary>
            Closes the current sub-expression
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(VC3.Reporting.Design.WhereClauseTerm)">
            <summary>
            Appends a term to the current expression
            </summary>
            <param name="term"></param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(VC3.Reporting.Design.ReportParameterColumn)">
            <summary>
            Appends a term to the current expression.
            </summary>
            <param name="parameter">The filter to add</param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(VC3.Reporting.Design.ReportParameterColumn,VC3.Reporting.IReportParameter)">
            <summary>
            Includes the filter in the where clause based on <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/>
            and <see cref="T:VC3.Reporting.IReportParameter"/> values
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Appends a term to the current expression.
            </summary>
            <param name="filter">The filter to add</param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(System.String,VC3.Reporting.Design.ReportColumn)">
            <summary>
            Appends a term to the current expression.
            </summary>
            <param name="conditionalExpression">The filter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Term(System.String,VC3.Reporting.Design.QueryTable)">
            <summary>
            Appends a term to the current expression.
            </summary>
            <param name="conditionalExpression">The filter to include</param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.And">
            <summary>
            Appends an AND operator to the current expression
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Or">
            <summary>
            Appends an OR operator to the current expression
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.Operator(VC3.Reporting.Design.QueryOperator)">
            <summary>
            Appends an operator to the current expression
            </summary>
            <param name="op"></param>
        </member>
        <member name="M:VC3.Reporting.Design.WhereClauseBuilder.ToSql(VC3.Reporting.Design.QueryPartitioning,System.String)">
            <summary>
            Generates SQL based for the where clause
            </summary>
            <param name="partitioning"></param>
            <param name="indent"></param>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.Design.WhereClauseBuilder.Current">
            <summary>
            The current sub expression
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.WhereClauseBuilder.Root">
            <summary>
            The top-most expression
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.WhereClauseBuilder.IsOperatorAllowed">
            <summary>
            Indicates if an <see cref="M:VC3.Reporting.Design.WhereClauseBuilder.And"/> or <see cref="M:VC3.Reporting.Design.WhereClauseBuilder.Or"/> <see cref="M:VC3.Reporting.Design.WhereClauseBuilder.Operator(VC3.Reporting.Design.QueryOperator)"/>
            can be added based on the current state of the builder.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.WhereClauseJoinTest">
            <summary>
            A term in a where clause that tests if a join condition was met.
            Because certain queries may be transformed, use this term instead
            of the explicit SQL to test for joins being met.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.WhereClauseTableFilter">
            <summary>
            A term in a where clause that filters based on a table in the query
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Settings.Current">
            <summary>
            Gets the current web service settings
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.Report">
            <summary>
            Can be used to modify and execute a report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.SetPath(System.String)">
            <summary>
            Provides protected access to the <see cref="P:VC3.Reporting.Design.Report.Path"/> property.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:VC3.Reporting.Design.Report.Publish">
            <summary>
            Publishes the current report using the appropriate
            <see cref="T:VC3.Reporting.IReportBuilder"/> implementation.
            </summary>
            <remarks>
            This method can be overridden in subclasses to control 
            where reports are published to.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.Report.Publish(System.String)">
            <summary>
            Publishes the current report using the appropriate
            <see cref="T:VC3.Reporting.IReportBuilder"/> implementation.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.Preview">
            <summary>
            Publishes a preview version of the current report
            using the appropriate <see cref="T:VC3.Reporting.IReportBuilder"/>
            implementation to a temporary location.
            </summary>
            <remarks>
            This method can be overridden in subclasses to control 
            where reports are published to.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.Report.Preview(System.String)">
            <summary>
            Publishes a preview version of the current report
            using the appropriate <see cref="T:VC3.Reporting.IReportBuilder"/>
            implementation to a temporary location.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.IsUniqueTitle(System.String)">
            <summary>
            Determines whether a report already exists with the
            specified title.
            </summary>
            <param name="title">The title to check</param>
            <returns>True if the report title is unique, otherwise false</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Report.GetReports">
            <summary>
            Gets all reports.
            </summary>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Report.GetPublishedReports">
            <summary>
            Gets all published reports.
            </summary>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Report.ToString">
            <summary>
            Overriden.  Returns the <see cref="P:VC3.Reporting.Design.Report.Title"/> of the report.
            </summary>
            <returns>Returns the <see cref="P:VC3.Reporting.Design.Report.Title"/> of the report.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Report.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.Report.#ctor">
            <summary>
            Creates a new Report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.#ctor(System.Guid)">
            <summary>
            Creates an existing Report that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.Report"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.Report"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Report.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of Report objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.Report.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Report.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.Report.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Path">
            <summary>
            Gets the path to the report within the report server.
            Uniquely identifies the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.PublishedReport">
            <summary>
            Gets the published report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.PreviewReport">
            <summary>
            Gets the preview version of the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.HasUniqueTitle">
            <summary>
            Determines if the current title of the report is unique.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Description">
            <summary>
            Gets the path to the report within the report server.
            Uniquely identifies the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Tables">
            <summary>
            Gets the list of tables in the report based on report's <see cref="P:VC3.Reporting.Design.Report.SelectColumns"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Title">
            <summary>
            Gets or sets the Title.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Query">
            <summary>
            Gets or sets the Query.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Type">
            <summary>
            Gets or sets the Type.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Format">
            <summary>
            Gets or sets the Format.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.SelectColumns">
            <summary>
            Gets or sets the Select Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.FilterColumns">
            <summary>
            Gets the Filter Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.ParameterColumns">
            <summary>
            Gets the Parameter Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.GroupColumns">
            <summary>
            Gets the Group Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.ColumnGroupColumns">
            <summary>
            Gets the Column Group Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.OrderColumns">
            <summary>
            Gets the Order Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Report.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTable">
            <summary>
            A table used by a report instance. Provides a table-oriented view
            of the columns in a <see cref="P:VC3.Reporting.Design.ReportTable.Report"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTable.BuildAvailableList(VC3.Reporting.Design.ReportTypeColumnList,VC3.Reporting.Design.ReportTypeColumnList)">
            <summary>
            Propulates the available list for this table
            </summary>
            <param name="list"></param>
            <param name="availableList"></param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTable.IsInTable(VC3.Reporting.Design.ReportColumn)">
            <summary>
            True if this column is from the same <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> and has
            the same ParameterValues as this table.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTable.ReportTableParameterValue_BeforePropertySet(System.Object,VC3.ComponentModel.PropertySetEventArgs)">
            <summary>
            Updates all ReportColumn in this ReportTable when ReportColumnParameterValue
            is updated. Be careful not to set the ReportColumnParameterValue on the object that
            raised the event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTable.CopyParameterValues(VC3.Reporting.Design.ReportColumnList,VC3.Reporting.Design.ReportColumnParameterValue,System.String)">
            <summary>
            Copies parameter values from one <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/>
            to all the column in a <see cref="T:VC3.Reporting.Design.ReportColumnList"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.Report">
            <summary>
            The report the table belongs to.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.QualifiedName">
            <summary>
            Gets the qualified name of the table including the full name
            and value of all parameters.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.Table">
            <summary>
            Gets the table type of this table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.ParameterValues">
            <summary>
            Gets the table type of this table
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.SelectColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.FilterColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.ParameterColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.GroupColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.ColumnGroupColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTable.OrderColumns">
            <summary>
            The columns in this table that are in the report
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTableBuilder">
            <summary>
            Builds and synchonizes the <see cref="T:VC3.Reporting.Design.ReportTable"/> objects
            for a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.#ctor(VC3.Reporting.Design.Report,System.Boolean)">
            <summary>
            Constructs a builder for managing the <see cref="T:VC3.Reporting.Design.ReportTable"/>s
            and begins monitoring column changed events for this report column lists
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.BuildTables">
            <summary>
            Builds all tables for this <see cref="T:VC3.Reporting.Design.Report"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.BuildTables(VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Builds the report tables and hooks into the
            change event for the columns
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.RegisterForEventsNow(VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Register this builder to watch for events on the
            <see cref="T:VC3.Reporting.Design.Report"/> instance
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.OnColumnListChanged(System.Object,VC3.ComponentModel.BusinessObjectListChangedEventArgs)">
            <summary>
            Called when a column is being added or removed from the report
            NOTE: Public so delegate can be serialized, dont call this method directly.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.AddColumn(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumn"/> to the 
            appropiate <see cref="T:VC3.Reporting.Design.ReportTable"/>
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.RemoveColumn(VC3.Reporting.Design.ReportColumn)">
            <summary>
            Removes a <see cref="T:VC3.Reporting.Design.ReportColumn"/> from the 
            appropiate <see cref="T:VC3.Reporting.Design.ReportTable"/>
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.OnColumnParameterChanged(System.Object,VC3.ComponentModel.PropertySetEventArgs)">
            <summary>
            NOTE: Public so delegate can be serialized, dont call this method directly.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.report_AfterInit(System.Object,VC3.ComponentModel.BusinessObjectEventArgs)">
            <summary>
            NOTE: Public so delegate can be serialized, dont call this method directly.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableBuilder.columns_AfterLoad(System.Object,System.EventArgs)">
            <summary>
            NOTE: Public so delegate can be serialized, dont call this method directly.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTableList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportTable"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.Add(VC3.Reporting.Design.ReportTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTable"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.Contains(VC3.Reporting.Design.ReportTable)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportTable"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.IndexOf(VC3.Reporting.Design.ReportTable)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportTable"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.Insert(System.Int32,VC3.Reporting.Design.ReportTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTable"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.Remove(VC3.Reporting.Design.ReportTable)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTable"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTableList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTable"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTableList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportTable"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaOperatorData">
            <summary>
            <summary>
            Provides access to ReportSchemaOperator-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaOperatorData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.UpdateRecord(System.Guid,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Updates a record in the ReportSchemaOperator table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="expression">Value to assign to the Expression field of the record</param>
            <param name="concatExpression">Value to assign to the ConcatExpression field of the record</param>
            <param name="findRegex">Value to assign to the FindRegex field of the record</param>
            <param name="replaceRegex">Value to assign to the ReplaceRegex field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="allowMultipleValues">Value to assign to the AllowMultipleValues field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.InsertRecord(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Inserts a new record into the ReportSchemaOperator table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="expression">Value to assign to the Expression field of the record</param>
            <param name="concatExpression">Value to assign to the ConcatExpression field of the record</param>
            <param name="findRegex">Value to assign to the FindRegex field of the record</param>
            <param name="replaceRegex">Value to assign to the ReplaceRegex field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="allowMultipleValues">Value to assign to the AllowMultipleValues field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaOperator table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaOperator table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSchemaOperator record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.GetRecordsForReportSchemaDataTypeOperatorAssociation(System.String[])">
            <summary>
            Gets records from the ReportSchemaOperator table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaDataType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.GetRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaOperator table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaDataType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.InsertRecordsForReportSchemaDataTypeOperatorAssociation(System.Char,System.Guid[])">
            <summary>
            Insert records in the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaOperator's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.InsertRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Insert records in the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaOperator's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.DeleteRecordsForReportSchemaDataTypeOperatorAssociation(System.Char,System.Guid[])">
            <summary>
            Deletes records from the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="schemaDataType">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaOperator's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaOperatorData.DeleteRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Deletes records from the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaOperator's to insert</param>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaOperatorData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.#ctor">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSecureMethods">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSecureMethods(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSecureMethods(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSecureMethodsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSecureMethodsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCancelBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCancelBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ExecuteBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginExecuteBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndExecuteBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ExecuteBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ExecuteBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteItem(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDeleteItem(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDeleteItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteItemAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteItemAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.MoveItem(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginMoveItem(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndMoveItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.MoveItemAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.MoveItemAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListChildren(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListChildren(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListChildren(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListChildrenAsync(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListChildrenAsync(System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetItemType(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetItemType(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetItemType(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetItemTypeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetItemTypeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateFolder(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateFolder(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateFolder(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateFolderAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateFolderAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReport(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateReport(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDefinition(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportDefinition(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDefinitionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDefinitionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDefinition(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportDefinition(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateResource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetResourceContents(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetResourceContents(System.String,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetResourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetResourceContents(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetResourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetResourceContents(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetResourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetResourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportParameters(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportParameters(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportParameters(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportParameters(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportParametersAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportParametersAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateLinkedReport(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateLinkedReport(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateLinkedReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportLink(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportLink(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportLinkAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportLinkAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportLink(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportLink(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportLinkAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportLinkAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListLinkedReports(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListLinkedReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListLinkedReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListLinkedReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListLinkedReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.Render(System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.String,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[]@,VC3.Reporting.SqlServerReportingServices.ReportService.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginRender(System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndRender(System.IAsyncResult,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[]@,VC3.Reporting.SqlServerReportingServices.ReportService.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderStream(System.String,System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginRenderStream(System.String,System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndRenderStream(System.IAsyncResult,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRenderResource(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetRenderResource(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetRenderResource(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRenderResourceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRenderResourceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetExecutionOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetExecutionOptionsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetExecutionOptionsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetExecutionOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetExecutionOptions(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExecutionOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExecutionOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetCacheOptions(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetCacheOptions(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetCacheOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetCacheOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetCacheOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetCacheOptions(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetCacheOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetCacheOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.UpdateReportExecutionSnapshot(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginUpdateReportExecutionSnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndUpdateReportExecutionSnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.UpdateReportExecutionSnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.UpdateReportExecutionSnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FlushCache(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginFlushCache(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndFlushCache(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FlushCacheAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FlushCacheAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListJobs">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListJobs(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListJobs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListJobsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListJobsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelJob(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCancelJob(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCancelJob(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelJobAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelJobAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataSource(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateDataSource(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataSourceContents(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetDataSourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataSourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataSourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataSourceContents(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetDataSourceContents(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataSourceContentsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataSourceContentsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EnableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginEnableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndEnableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EnableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EnableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DisableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDisableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDisableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DisableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DisableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListReportsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListReportsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDataSources(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSource[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportDataSources(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSource[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDataSourcesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSource[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDataSourcesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.DataSource[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSources(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportDataSources(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcePrompts(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportDataSourcePrompts(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportDataSourcePrompts(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcePromptsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcePromptsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportHistorySnapshot(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateReportHistorySnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateReportHistorySnapshot(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportHistorySnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportHistorySnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryOptions(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportHistoryOptions(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportHistoryOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryOptions(System.String,System.Boolean@,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportHistoryOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportHistoryOptions(System.IAsyncResult,System.Boolean@,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryLimit(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetReportHistoryLimit(System.String,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetReportHistoryLimit(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryLimit(System.String,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetReportHistoryLimit(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetReportHistoryLimit(System.IAsyncResult,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryLimitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryLimitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportHistory(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListReportHistory(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListReportHistory(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportHistoryAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportHistoryAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteReportHistorySnapshot(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDeleteReportHistorySnapshot(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDeleteReportHistorySnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FindItems(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginFindItems(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndFindItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FindItemsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FindItemsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateSchedule(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateSchedule(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateScheduleAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateScheduleAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDeleteSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDeleteSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetScheduleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetScheduleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetScheduleProperties(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetScheduleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSchedulePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSchedulePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListScheduledReports(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListScheduledReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListScheduledReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListScheduledReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListScheduledReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSchedules">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSchedules(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSchedules(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSchedulesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSchedulesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PauseSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginPauseSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndPauseSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PauseScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PauseScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ResumeSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginResumeSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndResumeSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ResumeScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ResumeScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataDrivenSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateDataDrivenSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateDataDrivenSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetDataDrivenSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetSubscriptionProperties(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings@,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetDataDrivenSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetDataDrivenSubscriptionProperties(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings@,VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteSubscription(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDeleteSubscription(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDeleteSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteSubscriptionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteSubscriptionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PrepareQuery(VC3.Reporting.SqlServerReportingServices.ReportService.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginPrepareQuery(VC3.Reporting.SqlServerReportingServices.ReportService.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndPrepareQuery(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PrepareQueryAsync(VC3.Reporting.SqlServerReportingServices.ReportService.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PrepareQueryAsync(VC3.Reporting.SqlServerReportingServices.ReportService.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExtensionSettings(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetExtensionSettings(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExtensionSettingsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExtensionSettingsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ValidateExtensionSettings(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginValidateExtensionSettings(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndValidateExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ValidateExtensionSettingsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ValidateExtensionSettingsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptions(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSubscriptionsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSubscriptionsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListExtensions(VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListExtensions(VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListExtensions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListExtensionsAsync(VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListExtensionsAsync(VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListEvents">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListEvents(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListEvents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListEventsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListEventsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FireEvent(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginFireEvent(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndFireEvent(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FireEventAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FireEventAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemTasks">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSystemTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSystemTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemTasksAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListTasks">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListTasksAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemRoles">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListSystemRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListSystemRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemRolesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListRoles">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginListRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndListRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListRolesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateRole(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginCreateRole(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndCreateRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateRoleAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateRoleAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteRole(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginDeleteRole(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndDeleteRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteRoleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteRoleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRoleProperties(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetRoleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetRoleProperties(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRolePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRolePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetRoleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetRoleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetRoleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetRolePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetRolePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPolicies">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetSystemPolicies(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPoliciesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPoliciesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPolicies(VC3.Reporting.SqlServerReportingServices.ReportService.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetSystemPolicies(VC3.Reporting.SqlServerReportingServices.ReportService.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPoliciesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPoliciesAsync(VC3.Reporting.SqlServerReportingServices.ReportService.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPolicies(System.String,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetPolicies(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetPolicies(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPoliciesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPoliciesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPolicies(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginSetPolicies(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndSetPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPoliciesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPoliciesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.InheritParentSecurity(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginInheritParentSecurity(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndInheritParentSecurity(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.InheritParentSecurityAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.InheritParentSecurityAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPermissions">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetSystemPermissions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetSystemPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPermissionsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPermissionsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPermissions(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginGetPermissions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndGetPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPermissionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPermissionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogonUser(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginLogonUser(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndLogonUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogonUserAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogonUserAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.Logoff">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.BeginLogoff(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EndLogoff(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogoffAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogoffAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSecureMethodsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ExecuteBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteItemCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.MoveItemCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListChildrenCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetItemTypeCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateResourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateLinkedReportCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListLinkedReportsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.RenderStreamCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRenderResourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.UpdateReportExecutionSnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FlushCacheCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListJobsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CancelJobCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.EnableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DisableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportDataSourcePromptsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListReportHistoryCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FindItemsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListScheduledReportsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSchedulesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PauseScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ResumeScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateDataDrivenSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.PrepareQueryCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ValidateExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSubscriptionsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListExtensionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListEventsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.FireEventCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemTasksCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListTasksCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListSystemRolesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.ListRolesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.CreateRoleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.DeleteRoleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.SetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.InheritParentSecurityCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetSystemPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.GetPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogonUserCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService.LogoffCompleted">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ServerInfoHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ServerInfoHeader.ReportServerVersionNumber">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ServerInfoHeader.ReportServerEdition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Policy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Policy.GroupUserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Policy.Roles">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Role">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Role.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Role.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Task">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Task.TaskID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Task.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Task.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Event">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Event.Type">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Extension.ExtensionType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Extension.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Extension.LocalizedName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Extension.Visible">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum.Delivery">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum.Render">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum.Data">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionTypeEnum.All">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.SubscriptionID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Owner">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.VirtualPath">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Report">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.DeliverySettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.LastExecuted">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.LastExecutedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Subscription.IsDataDriven">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionSettings.ParameterValues">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterFieldReference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValueOrFieldReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterFieldReference.ParameterName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterFieldReference.FieldAlias">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue.Value">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterValue.Label">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.DeliveryExtensionRemoved">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.DeliveryExtensionRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.SharedDataSourceRemoved">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.SharedDataSourceRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.MissingParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.MissingParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.InvalidParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.InvalidParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.UnknownReportParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ActiveState.UnknownReportParameterSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.DisplayName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.Required">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.ReadOnly">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.Value">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.Error">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.Encrypted">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.IsPassword">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ExtensionParameter.ValidValues">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ValidValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ValidValue.Label">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ValidValue.Value">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.QueryDefinition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.QueryDefinition.CommandType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.QueryDefinition.CommandText">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.QueryDefinition.Timeout">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.QueryDefinition.TimeoutSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Field">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Field.Alias">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Field.Name">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.Fields">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.Query">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.CaseSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.CaseSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.Collation">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.AccentSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.AccentSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.KanatypeSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.KanatypeSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.WidthSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.WidthSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSetDefinition.Name">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SensitivityEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.SensitivityEnum.True">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.SensitivityEnum.False">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.SensitivityEnum.Auto">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan.Item">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataRetrievalPlan.DataSet">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.ConnectString">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.CredentialRetrieval">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.WindowsCredentials">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.ImpersonateUser">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.ImpersonateUserSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.Prompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.Password">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.Enabled">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceDefinition.EnabledSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CredentialRetrievalEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.CredentialRetrievalEnum.Prompt">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.CredentialRetrievalEnum.Store">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.CredentialRetrievalEnum.Integrated">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.CredentialRetrievalEnum.None">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceReference.Reference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.InvalidDataSourceReference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.ScheduleID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.Definition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.Creator">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.NextRunTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.NextRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.LastRunTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.LastRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.ReferencesPresent">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Schedule.State">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition.StartDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition.EndDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition.EndDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleDefinition.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DailyRecurrence">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.RecurrencePattern">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DailyRecurrence.DaysInterval">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.WeeklyRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.WeeklyRecurrence.WeeksInterval">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.WeeklyRecurrence.WeeksIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.WeeklyRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Sunday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Monday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Tuesday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Wednesday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Thursday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Friday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DaysOfWeekSelector.Saturday">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.MinuteRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MinuteRecurrence.MinutesInterval">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyRecurrence.Days">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.January">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.February">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.March">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.April">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.May">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.June">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.July">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.August">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.September">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.October">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.November">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthsOfYearSelector.December">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyDOWRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyDOWRecurrence.WhichWeek">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyDOWRecurrence.WhichWeekSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyDOWRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.MonthlyDOWRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum.FirstWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum.SecondWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum.ThirdWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum.FourthWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.WeekNumberEnum.LastWeek">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleReference.ScheduleID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleReference.Definition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.NoSchedule">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum.Ready">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum.Running">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum.Paused">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum.Expired">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleStateEnum.Failing">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportHistorySnapshot">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportHistorySnapshot.HistoryID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportHistorySnapshot.CreationDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportHistorySnapshot.Size">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourcePrompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourcePrompt.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourcePrompt.DataSourceID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourcePrompt.Prompt">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSource">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSource.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSource.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Job">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.JobID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Machine">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.User">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.StartDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Action">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Job.Status">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.JobActionEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobActionEnum.Render">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobActionEnum.SnapshotCreation">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobActionEnum.ReportHistoryCreation">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.JobTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobTypeEnum.User">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobTypeEnum.System">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.JobStatusEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobStatusEnum.New">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobStatusEnum.Running">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.JobStatusEnum.CancelRequested">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExpirationDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.TimeExpiration">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.TimeExpiration.Minutes">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleExpiration">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ScheduleExpiration.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.TypeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.Nullable">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.NullableSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.AllowBlank">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.AllowBlankSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.MultiValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.MultiValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.QueryParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.QueryParameterSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.Prompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.PromptUser">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.PromptUserSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.Dependencies">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.ValidValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.ValidValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.ValidValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.DefaultValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.DefaultValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.DefaultValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.State">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.StateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter.ErrorMessage">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum.Boolean">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum.DateTime">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum.Integer">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum.Float">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterTypeEnum.String">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterStateEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterStateEnum.HasValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterStateEnum.MissingValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterStateEnum.HasOutstandingDependencies">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ParameterStateEnum.DynamicValuesUnavailable">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials.DataSourceName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.DataSourceCredentials.Password">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Warning">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Warning.Code">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Warning.Severity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Warning.ObjectName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Warning.ObjectType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Warning.Message">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.VirtualPath">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Size">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.SizeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.Hidden">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.HiddenSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.CreationDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.CreationDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ModifiedDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.CreatedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.MimeType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ExecutionDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CatalogItem.ExecutionDateSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.Unknown">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.Folder">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.Report">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.Resource">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.LinkedReport">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemTypeEnum.DataSource">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.Property">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Property.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.Property.Value">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition.Condition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SearchCondition.ConditionSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ConditionEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ConditionEnum.Contains">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ConditionEnum.Equals">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SessionHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SessionHeader.SessionId">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SessionHeader.IsNewExecution">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SessionHeader.ExecutionDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SessionHeader.ExpirationDateTime">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ItemNamespaceHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ItemNamespaceHeader.ItemNamespace">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ItemNamespaceEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemNamespaceEnum.PathBased">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ItemNamespaceEnum.GUIDBased">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.BatchHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.BatchHeader.BatchID">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum.Live">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.ExecutionSettingEnum.Snapshot">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum.And">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService.BooleanOperatorEnum.Or">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSecureMethodsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSecureMethodsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSecureMethodsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateBatchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateBatchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CancelBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ExecuteBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DeleteItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.MoveItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListChildrenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListChildrenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListChildrenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetItemTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetItemTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetItemTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetResourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetResourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetResourceContentsCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportParametersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportParametersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateLinkedReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListLinkedReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListLinkedReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListLinkedReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.ParametersUsed">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderCompletedEventArgs.StreamIds">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.RenderStreamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.RenderStreamCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderStreamCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderStreamCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.RenderStreamCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetRenderResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetRenderResourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetRenderResourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetRenderResourceCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetExecutionOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetExecutionOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetExecutionOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetCacheOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetCacheOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetCacheOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.UpdateReportExecutionSnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.FlushCacheCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListJobsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListJobsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListJobsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CancelJobCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CancelJobCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CancelJobCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataSourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataSourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.EnableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DisableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcePromptsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcePromptsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportDataSourcePromptsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportHistorySnapshotCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportHistorySnapshotCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateReportHistorySnapshotCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryOptionsCompletedEventArgs.KeepExecutionSnapshots">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryLimitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryLimitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryLimitCompletedEventArgs.IsSystem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetReportHistoryLimitCompletedEventArgs.SystemLimit">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportHistoryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportHistoryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListReportHistoryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DeleteReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.FindItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.FindItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.FindItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateScheduleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateScheduleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DeleteScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSchedulePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSchedulePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListScheduledReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListScheduledReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListScheduledReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSchedulesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSchedulesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSchedulesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.PauseScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ResumeScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateDataDrivenSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateDataDrivenSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.CreateDataDrivenSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DeleteSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.PrepareQueryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.PrepareQueryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.PrepareQueryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.PrepareQueryCompletedEventArgs.Changed">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ValidateExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ValidateExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ValidateExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSubscriptionsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListExtensionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListExtensionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListExtensionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListEventsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListEventsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListEventsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.FireEventCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListSystemRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.ListRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.ListRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.CreateRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.DeleteRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetRolePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetRolePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetRolePropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetPoliciesCompletedEventArgs.InheritParent">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.SetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.InheritParentSecurityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetSystemPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.GetPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService.GetPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.LogonUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService.LogoffCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.#ctor">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSecureMethods">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListSecureMethods(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListSecureMethods(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSecureMethodsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSecureMethodsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCancelBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCancelBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ExecuteBatch">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginExecuteBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndExecuteBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ExecuteBatchAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ExecuteBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetSystemProperties(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPropertiesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteItem(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDeleteItem(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDeleteItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteItemAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteItemAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.MoveItem(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginMoveItem(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndMoveItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.MoveItemAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.MoveItemAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListChildren(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListChildren(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListChildren(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListChildrenAsync(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListChildrenAsync(System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListDependentItems(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListDependentItems(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListDependentItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListDependentItemsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListDependentItemsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemType(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetItemType(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetItemType(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemTypeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemTypeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateFolder(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateFolder(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateFolder(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateFolderAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateFolderAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReport(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateReport(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportDefinition(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetReportDefinition(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportDefinitionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportDefinitionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportDefinition(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetReportDefinition(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateResource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetResourceContents(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetResourceContents(System.String,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetResourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetResourceContents(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetResourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetResourceContents(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetResourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetResourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportParameters(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetReportParameters(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportParameters(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetReportParameters(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportParametersAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportParametersAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateLinkedReport(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateLinkedReport(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateLinkedReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportLink(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetReportLink(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportLinkAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportLinkAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportLink(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetReportLink(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportLinkAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportLinkAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRenderResource(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetRenderResource(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetRenderResource(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRenderResourceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRenderResourceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetExecutionOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetExecutionOptionsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetExecutionOptionsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExecutionOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetExecutionOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetExecutionOptions(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExecutionOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExecutionOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetCacheOptions(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetCacheOptions(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetCacheOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetCacheOptions(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetCacheOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetCacheOptions(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetCacheOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetCacheOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.UpdateReportExecutionSnapshot(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginUpdateReportExecutionSnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndUpdateReportExecutionSnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.UpdateReportExecutionSnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.UpdateReportExecutionSnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FlushCache(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginFlushCache(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndFlushCache(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FlushCacheAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FlushCacheAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListJobs">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListJobs(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListJobs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListJobsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListJobsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelJob(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCancelJob(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCancelJob(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelJobAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelJobAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataSource(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateDataSource(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataSourceContents(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetDataSourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataSourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataSourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataSourceContents(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetDataSourceContents(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataSourceContentsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataSourceContentsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EnableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginEnableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndEnableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EnableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EnableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DisableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDisableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDisableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DisableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DisableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetItemDataSources(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetItemDataSources(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetItemDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetItemDataSourcesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetItemDataSourcesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSources(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetItemDataSources(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetItemDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcePrompts(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetItemDataSourcePrompts(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetItemDataSourcePrompts(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcePromptsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcePromptsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportHistorySnapshot(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateReportHistorySnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateReportHistorySnapshot(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportHistorySnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportHistorySnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryOptions(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetReportHistoryOptions(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetReportHistoryOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryOptions(System.String,System.Boolean@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetReportHistoryOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetReportHistoryOptions(System.IAsyncResult,System.Boolean@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryLimit(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetReportHistoryLimit(System.String,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetReportHistoryLimit(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryLimit(System.String,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetReportHistoryLimit(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetReportHistoryLimit(System.IAsyncResult,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryLimitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryLimitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListReportHistory(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListReportHistory(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListReportHistory(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListReportHistoryAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListReportHistoryAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteReportHistorySnapshot(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDeleteReportHistorySnapshot(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDeleteReportHistorySnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FindItems(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginFindItems(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndFindItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FindItemsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FindItemsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum,VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateSchedule(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateSchedule(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateScheduleAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateScheduleAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDeleteSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDeleteSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetScheduleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetScheduleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetScheduleProperties(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetScheduleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSchedulePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSchedulePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListScheduledReports(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListScheduledReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListScheduledReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListScheduledReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListScheduledReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSchedules">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListSchedules(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListSchedules(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSchedulesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSchedulesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PauseSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginPauseSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndPauseSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PauseScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PauseScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ResumeSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginResumeSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndResumeSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ResumeScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ResumeScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataDrivenSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateDataDrivenSubscription(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateDataDrivenSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetDataDrivenSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan,System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetSubscriptionProperties(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataDrivenSubscriptionProperties(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings@,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetDataDrivenSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetDataDrivenSubscriptionProperties(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings@,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState@,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteSubscription(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDeleteSubscription(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDeleteSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteSubscriptionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteSubscriptionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PrepareQuery(VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition,System.Boolean@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginPrepareQuery(VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndPrepareQuery(System.IAsyncResult,System.Boolean@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PrepareQueryAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PrepareQueryAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource,VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExtensionSettings(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetExtensionSettings(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExtensionSettingsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExtensionSettingsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ValidateExtensionSettings(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginValidateExtensionSettings(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndValidateExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ValidateExtensionSettingsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ValidateExtensionSettingsAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptions(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListSubscriptionsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListSubscriptionsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListExtensions(VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListExtensions(VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListExtensions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListExtensionsAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListExtensionsAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListEvents">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListEvents(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListEvents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListEventsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListEventsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FireEvent(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginFireEvent(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndFireEvent(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FireEventAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FireEventAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListTasks(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListTasks(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListTasksAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListTasksAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListRoles(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListRoles(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListRolesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListRolesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateRole(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateRole(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateRoleAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateRoleAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteRole(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginDeleteRole(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndDeleteRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteRoleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteRoleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRoleProperties(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetRoleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetRoleProperties(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRolePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRolePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetRoleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetRoleProperties(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetRoleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetRolePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetRolePropertiesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPolicies">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetSystemPolicies(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPoliciesAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPoliciesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPolicies(VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetSystemPolicies(VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPoliciesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPoliciesAsync(VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPolicies(System.String,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetPolicies(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetPolicies(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPoliciesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPoliciesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPolicies(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetPolicies(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPoliciesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPoliciesAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritParentSecurity(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginInheritParentSecurity(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndInheritParentSecurity(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritParentSecurityAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritParentSecurityAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPermissions">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetSystemPermissions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetSystemPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPermissionsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPermissionsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPermissions(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetPermissions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPermissionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPermissionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogonUser(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginLogonUser(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndLogonUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogonUserAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogonUserAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.Logoff">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginLogoff(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndLogoff(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogoffAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogoffAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateModel(System.String,System.String,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginCreateModel(System.String,System.String,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndCreateModel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateModelAsync(System.String,System.String,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateModelAsync(System.String,System.String,System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelDefinition(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetModelDefinition(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetModelDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelDefinitionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelDefinitionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDefinition(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetModelDefinition(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetModelDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDefinitionAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDefinitionAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelPerspectives(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListModelPerspectives(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListModelPerspectives(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelPerspectivesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelPerspectivesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetUserModel(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetUserModel(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetUserModel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetUserModelAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetUserModelAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelItemChildren(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListModelItemChildren(System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListModelItemChildren(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelItemChildrenAsync(System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelItemChildrenAsync(System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPermissions(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetModelItemPermissions(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetModelItemPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPermissionsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPermissionsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPolicies(System.String,System.String,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGetModelItemPolicies(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGetModelItemPolicies(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPoliciesAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPoliciesAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelItemPolicies(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetModelItemPolicies(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetModelItemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelItemPoliciesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelItemPoliciesAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritModelItemParentSecurity(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginInheritModelItemParentSecurity(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndInheritModelItemParentSecurity(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritModelItemParentSecurityAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritModelItemParentSecurityAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RemoveAllModelItemPolicies(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginRemoveAllModelItemPolicies(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndRemoveAllModelItemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RemoveAllModelItemPoliciesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RemoveAllModelItemPoliciesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDrillthroughReports(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginSetModelDrillthroughReports(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndSetModelDrillthroughReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDrillthroughReportsAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDrillthroughReportsAsync(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelDrillthroughReports(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginListModelDrillthroughReports(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndListModelDrillthroughReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelDrillthroughReportsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelDrillthroughReportsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GenerateModel(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginGenerateModel(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndGenerateModel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GenerateModelAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GenerateModelAsync(System.String,System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportService2008.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RegenerateModel(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.BeginRegenerateModel(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EndRegenerateModel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RegenerateModelAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RegenerateModelAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSecureMethodsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ExecuteBatchCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteItemCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.MoveItemCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListChildrenCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListDependentItemsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemTypeCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateResourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateLinkedReportCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRenderResourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.UpdateReportExecutionSnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FlushCacheCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListJobsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CancelJobCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.EnableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DisableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetItemDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetItemDataSourcePromptsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListReportHistoryCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FindItemsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListScheduledReportsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSchedulesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PauseScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ResumeScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateDataDrivenSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.PrepareQueryCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ValidateExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListSubscriptionsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListExtensionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListEventsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.FireEventCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListTasksCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListRolesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateRoleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.DeleteRoleCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritParentSecurityCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetSystemPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogonUserCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.LogoffCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.CreateModelCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelPerspectivesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetUserModelCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelItemChildrenCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GetModelItemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelItemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.InheritModelItemParentSecurityCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RemoveAllModelItemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.SetModelDrillthroughReportsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.ListModelDrillthroughReportsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.GenerateModelCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportingService.RegenerateModelCompleted">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader.ReportServerVersionNumber">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader.ReportServerEdition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader.ReportServerVersion">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader.ReportServerDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ServerInfoHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelDrillthroughReport.Type">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DrillthroughType">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.DrillthroughType.Detail">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.DrillthroughType.List">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem.ID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItem.ModelItems">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.Model">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.EntityFolder">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.FieldFolder">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.Entity">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.Attribute">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelItemTypeEnum.Role">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelPerspective">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelPerspective.ID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelPerspective.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelPerspective.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelCatalogItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelCatalogItem.Model">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelCatalogItem.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ModelCatalogItem.Perspectives">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy.GroupUserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Policy.Roles">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Role">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Role.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Role.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Task">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Task.TaskID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Task.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Task.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Event">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Event.Type">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension.ExtensionType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension.LocalizedName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension.Visible">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Extension.IsModelGenerationSupported">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum.Delivery">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum.Render">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum.Data">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionTypeEnum.All">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.SubscriptionID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Owner">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.VirtualPath">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Report">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.DeliverySettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.LastExecuted">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.LastExecutedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Subscription.IsDataDriven">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionSettings.ParameterValues">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterFieldReference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValueOrFieldReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterFieldReference.ParameterName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterFieldReference.FieldAlias">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue.Value">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterValue.Label">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.DeliveryExtensionRemoved">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.DeliveryExtensionRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.SharedDataSourceRemoved">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.SharedDataSourceRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.MissingParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.MissingParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.InvalidParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.InvalidParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.UnknownReportParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ActiveState.UnknownReportParameterSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.DisplayName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.Required">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.ReadOnly">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.Value">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.Error">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.Encrypted">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.IsPassword">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExtensionParameter.ValidValues">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidValue.Label">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidValue.Value">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.QueryDefinition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.QueryDefinition.CommandType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.QueryDefinition.CommandText">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.QueryDefinition.Timeout">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.QueryDefinition.TimeoutSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Field">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Field.Alias">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Field.Name">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.Fields">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.Query">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.CaseSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.CaseSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.Collation">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.AccentSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.AccentSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.KanatypeSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.KanatypeSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.WidthSensitivity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.WidthSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSetDefinition.Name">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SensitivityEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SensitivityEnum.True">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SensitivityEnum.False">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SensitivityEnum.Auto">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan.Item">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataRetrievalPlan.DataSet">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.ConnectString">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.UseOriginalConnectString">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.OriginalConnectStringExpressionBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.CredentialRetrieval">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.WindowsCredentials">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.ImpersonateUser">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.ImpersonateUserSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.Prompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.Password">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.Enabled">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceDefinition.EnabledSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CredentialRetrievalEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.CredentialRetrievalEnum.Prompt">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.CredentialRetrievalEnum.Store">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.CredentialRetrievalEnum.Integrated">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.CredentialRetrievalEnum.None">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.InvalidDataSourceReference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceReference.Reference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.ScheduleID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.Definition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.Creator">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.NextRunTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.NextRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.LastRunTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.LastRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.ReferencesPresent">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Schedule.State">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition.StartDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition.EndDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition.EndDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleDefinition.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DailyRecurrence">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.RecurrencePattern">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DailyRecurrence.DaysInterval">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyDOWRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyDOWRecurrence.WhichWeek">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyDOWRecurrence.WhichWeekSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyDOWRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyDOWRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum.FirstWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum.SecondWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum.ThirdWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum.FourthWeek">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeekNumberEnum.LastWeek">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Sunday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Monday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Tuesday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Wednesday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Thursday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Friday">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DaysOfWeekSelector.Saturday">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.January">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.February">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.March">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.April">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.May">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.June">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.July">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.August">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.September">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.October">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.November">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthsOfYearSelector.December">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyRecurrence.Days">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MonthlyRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeeklyRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeeklyRecurrence.WeeksInterval">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeeklyRecurrence.WeeksIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.WeeklyRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.MinuteRecurrence">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.MinuteRecurrence.MinutesInterval">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.NoSchedule">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleReference">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleReference.ScheduleID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleReference.Definition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum.Ready">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum.Running">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum.Paused">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum.Expired">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleStateEnum.Failing">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportHistorySnapshot">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportHistorySnapshot.HistoryID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportHistorySnapshot.CreationDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportHistorySnapshot.Size">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourcePrompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourcePrompt.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourcePrompt.DataSourceID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourcePrompt.Prompt">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSource.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.JobID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Machine">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.User">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.StartDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Action">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Job.Status">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobActionEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobActionEnum.Render">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobActionEnum.SnapshotCreation">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobActionEnum.ReportHistoryCreation">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobActionEnum.ExecuteQuery">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobTypeEnum.User">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobTypeEnum.System">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobStatusEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobStatusEnum.New">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobStatusEnum.Running">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.JobStatusEnum.CancelRequested">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExpirationDefinition">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.TimeExpiration">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.TimeExpiration.Minutes">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleExpiration">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ScheduleExpiration.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.TypeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.Nullable">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.NullableSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.AllowBlank">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.AllowBlankSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.MultiValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.MultiValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.QueryParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.QueryParameterSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.Prompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.PromptUser">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.PromptUserSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.Dependencies">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.ValidValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.ValidValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.ValidValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.DefaultValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.DefaultValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.DefaultValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.State">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.StateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ReportParameter.ErrorMessage">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum.Boolean">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum.DateTime">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum.Integer">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum.Float">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterTypeEnum.String">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterStateEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterStateEnum.HasValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterStateEnum.MissingValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterStateEnum.HasOutstandingDependencies">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ParameterStateEnum.DynamicValuesUnavailable">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials.DataSourceName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.DataSourceCredentials.Password">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning.Code">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning.Severity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning.ObjectName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning.ObjectType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Warning.Message">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Path">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.VirtualPath">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Size">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.SizeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.Hidden">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.HiddenSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.CreationDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.CreationDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ModifiedDateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.CreatedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.MimeType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ExecutionDate">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CatalogItem.ExecutionDateSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.Unknown">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.Folder">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.Report">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.Resource">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.LinkedReport">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.DataSource">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemTypeEnum.Model">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.Property">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Property.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.Property.Value">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition.Condition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.SearchCondition.ConditionSpecified">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ConditionEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ConditionEnum.Contains">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ConditionEnum.Equals">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.BatchHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.BatchHeader.BatchID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.BatchHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceHeader.ItemNamespace">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceEnum.PathBased">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ItemNamespaceEnum.GUIDBased">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum.Live">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecutionSettingEnum.Snapshot">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum.And">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.BooleanOperatorEnum.Or">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum.System">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum.Catalog">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum.Model">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportService2008.SecurityScopeEnum.All">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSecureMethodsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSecureMethodsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSecureMethodsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateBatchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateBatchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CancelBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ExecuteBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DeleteItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.MoveItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListChildrenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListChildrenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListChildrenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListDependentItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListDependentItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListDependentItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetResourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetResourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetResourceContentsCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportParametersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportParametersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateLinkedReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRenderResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRenderResourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRenderResourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRenderResourceCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExecutionOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExecutionOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExecutionOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetCacheOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetCacheOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetCacheOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.UpdateReportExecutionSnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.FlushCacheCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListJobsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListJobsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListJobsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CancelJobCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CancelJobCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CancelJobCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataSourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataSourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.EnableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DisableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetItemDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcePromptsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcePromptsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetItemDataSourcePromptsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportHistorySnapshotCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportHistorySnapshotCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateReportHistorySnapshotCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryOptionsCompletedEventArgs.KeepExecutionSnapshots">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryLimitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryLimitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryLimitCompletedEventArgs.IsSystem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetReportHistoryLimitCompletedEventArgs.SystemLimit">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListReportHistoryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListReportHistoryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListReportHistoryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DeleteReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.FindItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.FindItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.FindItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateScheduleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateScheduleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DeleteScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSchedulePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSchedulePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListScheduledReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListScheduledReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListScheduledReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSchedulesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSchedulesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSchedulesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.PauseScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ResumeScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateDataDrivenSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateDataDrivenSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateDataDrivenSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DeleteSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.PrepareQueryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.PrepareQueryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.PrepareQueryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.PrepareQueryCompletedEventArgs.Changed">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.PrepareQueryCompletedEventArgs.ParameterNames">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidateExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidateExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ValidateExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListSubscriptionsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListExtensionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListExtensionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListExtensionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListEventsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListEventsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListEventsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.FireEventCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.DeleteRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRolePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRolePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetRolePropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPoliciesCompletedEventArgs.InheritParent">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.InheritParentSecurityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetSystemPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.LogonUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.LogoffCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateModelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateModelCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.CreateModelCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetModelDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetModelDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetModelDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelPerspectivesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelPerspectivesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelPerspectivesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetUserModelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetUserModelCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetUserModelCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelItemChildrenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelItemChildrenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelItemChildrenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GetModelItemPoliciesCompletedEventArgs.InheritParent">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetModelItemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.InheritModelItemParentSecurityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.RemoveAllModelItemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.SetModelDrillthroughReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelDrillthroughReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelDrillthroughReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.ListModelDrillthroughReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GenerateModelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.GenerateModelCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.GenerateModelCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.RegenerateModelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportService2008.RegenerateModelCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportService2008.RegenerateModelCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaOperatorList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaOperator objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaOperator objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaOperator objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaOperator objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaOperator objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaOperator objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.Add(VC3.Reporting.Design.ReportSchemaOperator)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.Contains(VC3.Reporting.Design.ReportSchemaOperator)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.IndexOf(VC3.Reporting.Design.ReportSchemaOperator)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaOperator)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.Remove(VC3.Reporting.Design.ReportSchemaOperator)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperatorList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperatorList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> from the list based on position in the list
            </summary>
            <param name="name">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperatorList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperatorList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperatorList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportOrderColumn">
            <summary>
            ReportOrderColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.#ctor">
            <summary>
            Creates a new ReportOrderColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn,VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Creates a new ReportOrderColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Creates a new ReportOrderColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportOrderColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportOrderColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportOrderColumn.IsAscending">
            <summary>
            Gets or sets the IsAscending.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportOrderColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportGroupColumn">
            <summary>
            ReportGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumn.#ctor">
            <summary>
            A new ReportGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportGroupColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportGroupColumn.Groupings">
            <summary>
            Gets the list of possible groups
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportGrouping">
            <summary>
            Represents a split within a split column
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportGrouping.Column">
            <summary>
            The column this grouping applies to
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportGrouping.ValueExpression">
            <summary>
            Gets the value used to identify values that belong in this bucket
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportGrouping.Label">
            <summary>
            The label used to identify this bucket
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportGroupingList">
            <summary>
            A list of <see cref="T:VC3.Reporting.Design.ReportGrouping"/> objects
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnTypeList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportColumnType"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor">
            <summary>
            Creates an empty list of ReportColumnType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportColumnType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportColumnType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportColumnType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.Add(VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnType"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.Contains(VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportColumnType"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.IndexOf(VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportColumnType"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.Insert(System.Int32,VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnType"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.Remove(VC3.Reporting.Design.ReportColumnType)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnType"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnTypeList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnType"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnTypeList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumnType"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnTypeList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnGroupColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> objects.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportOrderColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsOrderColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsOrderColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor">
            <summary>
            Creates an empty list of ReportOrderColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportOrderColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportOrderColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportOrderColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportOrderColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportOrderColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.Add(VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.Contains(VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.IndexOf(VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.Remove(VC3.Reporting.Design.ReportOrderColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportOrderColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportOrderColumnList.AvailableColumns">
            <summary>
            Overriden to force the available columns to refresh when select columns
            are added or removed from the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportOrderColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportOrderColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsGroupColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsGroupColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor">
            <summary>
            Creates an empty list of ReportColumnGroupColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportColumnGroupColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportColumnGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportColumnGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportColumnGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.Add(VC3.Reporting.Design.ReportColumnGroupColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.Contains(VC3.Reporting.Design.ReportColumnGroupColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.IndexOf(VC3.Reporting.Design.ReportColumnGroupColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportColumnGroupColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.Remove(VC3.Reporting.Design.ReportColumnGroupColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnGroupColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportColumnGroupColumnData">
            <summary>
            <summary>
            Provides access to ReportColumnGroupColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportColumnGroupColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnGroupColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnGroupColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnGroupColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportColumnGroupColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.#ctor">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListSecureMethods">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginListSecureMethods(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndListSecureMethods(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListSecureMethodsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListSecureMethodsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReport(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadReport(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReport2(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadReport2(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadReport2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReport2Async(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReport2Async(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinition(System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadReportDefinition(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadReportDefinition(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinitionAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinitionAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinition2(System.Byte[],VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadReportDefinition2(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadReportDefinition2(System.IAsyncResult,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinition2Async(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinition2Async(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentials(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSetExecutionCredentials(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSetExecutionCredentials(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentialsAsync(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentialsAsync(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentials2(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSetExecutionCredentials2(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSetExecutionCredentials2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentials2Async(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentials2Async(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParameters(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSetExecutionParameters(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSetExecutionParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParametersAsync(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParametersAsync(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParameters2(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSetExecutionParameters2(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSetExecutionParameters2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParameters2Async(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParameters2Async(VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecution">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginResetExecution(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndResetExecution(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecutionAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecutionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecution2">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginResetExecution2(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndResetExecution2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecution2Async">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecution2Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Render(System.String,System.String,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginRender(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndRender(System.IAsyncResult,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Render2(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginRender2(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndRender2(System.IAsyncResult,System.String@,System.String@,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Render2Async(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Render2Async(System.String,System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderStream(System.String,System.String,System.String,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginRenderStream(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndRenderStream(System.IAsyncResult,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderStreamAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderStreamAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfo">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginGetExecutionInfo(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndGetExecutionInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfoAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfoAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfo2">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginGetExecutionInfo2(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndGetExecutionInfo2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfo2Async">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfo2Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetDocumentMap">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginGetDocumentMap(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndGetDocumentMap(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetDocumentMapAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetDocumentMapAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTarget(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadDrillthroughTarget(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadDrillthroughTarget(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTargetAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTargetAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTarget2(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLoadDrillthroughTarget2(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLoadDrillthroughTarget2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTarget2Async(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTarget2Async(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ToggleItem(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginToggleItem(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndToggleItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ToggleItemAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ToggleItemAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateDocumentMap(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginNavigateDocumentMap(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndNavigateDocumentMap(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateDocumentMapAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateDocumentMapAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateBookmark(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginNavigateBookmark(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndNavigateBookmark(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateBookmarkAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateBookmarkAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.FindString(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginFindString(System.Int32,System.Int32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndFindString(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.FindStringAsync(System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.FindStringAsync(System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Sort(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,System.String@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSort(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSort(System.IAsyncResult,System.String@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SortAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SortAsync(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Sort2(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo2@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginSort2(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndSort2(System.IAsyncResult,System.String@,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo2@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Sort2Async(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Sort2Async(System.String,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum,System.Boolean,VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetRenderResource(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginGetRenderResource(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndGetRenderResource(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetRenderResourceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetRenderResourceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListRenderingExtensions">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginListRenderingExtensions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndListRenderingExtensions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListRenderingExtensionsAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListRenderingExtensionsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogonUser(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLogonUser(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLogonUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogonUserAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogonUserAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Logoff">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.BeginLogoff(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.EndLogoff(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogoffAsync">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogoffAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListSecureMethodsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReport2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadReportDefinition2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentialsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionCredentials2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParametersCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SetExecutionParameters2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecutionCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ResetExecution2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Render2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.RenderStreamCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfoCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetExecutionInfo2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetDocumentMapCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTargetCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LoadDrillthroughTarget2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ToggleItemCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateDocumentMapCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.NavigateBookmarkCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.FindStringCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.SortCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.Sort2Completed">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.GetRenderResourceCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.ListRenderingExtensionsCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogonUserCompleted">
            <remarks/>
        </member>
        <member name="E:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportExecutionService.LogoffCompleted">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader.ReportServerVersionNumber">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader.ReportServerEdition">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader.ReportServerVersion">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader.ReportServerDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ServerInfoHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension.ExtensionType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension.LocalizedName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension.Visible">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Extension.IsModelGenerationSupported">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExtensionTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExtensionTypeEnum.Delivery">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExtensionTypeEnum.Render">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExtensionTypeEnum.Data">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExtensionTypeEnum.All">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DocumentMapNode">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DocumentMapNode.Label">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DocumentMapNode.UniqueName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DocumentMapNode.Children">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValueOrFieldReference">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue.Value">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterValue.Label">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials.DataSourceName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourceCredentials.Password">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning.Code">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning.Severity">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning.ObjectName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning.ObjectType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Warning.Message">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportMargins">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportMargins.Top">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportMargins.Bottom">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportMargins.Left">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportMargins.Right">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportPaperSize">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportPaperSize.Height">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportPaperSize.Width">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageSettings.PaperSize">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageSettings.Margins">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourcePrompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourcePrompt.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourcePrompt.DataSourceID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.DataSourcePrompt.Prompt">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ValidValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ValidValue.Label">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ValidValue.Value">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.Name">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.Type">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.TypeSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.Nullable">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.NullableSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.AllowBlank">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.AllowBlankSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.MultiValue">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.MultiValueSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.QueryParameter">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.QueryParameterSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.Prompt">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.PromptUser">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.PromptUserSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.Dependencies">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.ValidValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.ValidValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.ValidValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.DefaultValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.DefaultValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.DefaultValues">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.State">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.StateSpecified">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ReportParameter.ErrorMessage">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum.Boolean">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum.DateTime">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum.Integer">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum.Float">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterTypeEnum.String">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterStateEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterStateEnum.HasValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterStateEnum.MissingValidValue">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterStateEnum.HasOutstandingDependencies">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ParameterStateEnum.DynamicValuesUnavailable">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.HasSnapshot">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.NeedsProcessing">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.AllowQueryExecution">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.CredentialsRequired">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ParametersRequired">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ExpirationDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ExecutionDateTime">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.NumPages">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.Parameters">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.DataSourcePrompts">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.HasDocumentMap">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ExecutionID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ReportPath">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.HistoryID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.ReportPageSettings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo.AutoRefreshInterval">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo2">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionInfo2.PageCountMode">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode.Actual">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.PageCountMode.Estimate">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionHeader.ExecutionID">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ExecutionHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.TrustedUserHeader">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.TrustedUserHeader.UserName">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.TrustedUserHeader.UserToken">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.TrustedUserHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum.None">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum.Ascending">
            <remarks/>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortDirectionEnum.Descending">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListSecureMethodsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListSecureMethodsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListSecureMethodsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReport2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReport2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReport2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinitionCompletedEventArgs.warnings">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinition2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinition2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinition2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadReportDefinition2CompletedEventArgs.warnings">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentialsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentialsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentialsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentials2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentials2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionCredentials2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParametersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParametersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParameters2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParameters2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SetExecutionParameters2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecutionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecutionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecutionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecution2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecution2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ResetExecution2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderCompletedEventArgs.StreamIds">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.Extension">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Render2CompletedEventArgs.StreamIds">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderStreamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderStreamCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderStreamCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderStreamCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.RenderStreamCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfo2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfo2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetExecutionInfo2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetDocumentMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetDocumentMapCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetDocumentMapCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTargetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTargetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTargetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTarget2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTarget2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LoadDrillthroughTarget2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ToggleItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ToggleItemCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ToggleItemCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateDocumentMapCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateDocumentMapCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateDocumentMapCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateBookmarkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateBookmarkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateBookmarkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.NavigateBookmarkCompletedEventArgs.UniqueName">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.FindStringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.FindStringCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.FindStringCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortCompletedEventArgs.ReportItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.SortCompletedEventArgs.NumPages">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Sort2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Sort2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Sort2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Sort2CompletedEventArgs.ReportItem">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.Sort2CompletedEventArgs.ExecutionInfo">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetRenderResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetRenderResourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetRenderResourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.GetRenderResourceCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListRenderingExtensionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListRenderingExtensionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.ListRenderingExtensionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LogonUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportExecutionService2008.LogoffCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportTypeData">
            <summary>
            <summary>
            Provides access to ReportType-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportTypeData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.UpdateRecord(System.Char,System.String,System.Boolean)">
            <summary>
            Updates a record in the ReportType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="isEditable">Value to assign to the IsEditable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.InsertRecord(System.Char,System.String,System.Boolean)">
            <summary>
            Inserts a new record into the ReportType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="isEditable">Value to assign to the IsEditable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportType record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeData.GetAllRecords">
            <summary>
            Gets all records from the ReportType table
            </summary>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportTypeData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportFilterColumnData">
            <summary>
            <summary>
            Provides access to ReportFilterColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportFilterColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.UpdateRecord(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Updates a record in the ReportFilterColumn table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="schemaOperator">Value to assign to the SchemaOperator field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.InsertRecord(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Inserts a new record into the ReportFilterColumn table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="schemaOperator">Value to assign to the SchemaOperator field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportFilterColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportFilterColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportFilterColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportFilterColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportColumnData">
            <summary>
            <summary>
            Provides access to ReportColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.UpdateRecord(System.Guid,System.Int32,System.Guid,System.Char,System.Guid,System.Guid)">
            <summary>
            Updates a record in the ReportColumn table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="report">Value to assign to the Report field of the record</param>
            <param name="type">Value to assign to the Type field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="reportTypeTable">Value to assign to the ReportTypeTable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.InsertRecord(System.Int32,System.Guid,System.Char,System.Guid,System.Guid)">
            <summary>
            Inserts a new record into the ReportColumn table with the specified values
            </summary>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="report">Value to assign to the Report field of the record</param>
            <param name="type">Value to assign to the Type field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="reportTypeTable">Value to assign to the ReportTypeTable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecordsByColumn(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table with the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaColumn(s) to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnData.GetRecordsByColumn(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table with the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaColumn(s) to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.DownloadedReport">
            <summary>
            DownloadedReport is a lightweight class that represents a report that has been downloaded
            from the reporting service.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.DownloadedReport.#ctor(System.String,System.Byte[])">
            <summary>
            Creates a new DownloadedReport with the specified name and file data
            </summary>
            <param name="name"></param>
            <param name="data"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.DownloadedReport.ToString">
            <summary>
            Returns the name of the report with a suitable file extension
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.DownloadedReport.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.DownloadedReport.Data">
            <summary>
            Gets a byte array representing the rdl file
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSelectColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsSelectColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsSelectColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor">
            <summary>
            Creates an empty list of ReportSelectColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSelectColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSelectColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSelectColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSelectColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSelectColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.Add(VC3.Reporting.Design.ReportSelectColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.Contains(VC3.Reporting.Design.ReportSelectColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.IndexOf(VC3.Reporting.Design.ReportSelectColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportSelectColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.Remove(VC3.Reporting.Design.ReportSelectColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSelectColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSelectColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSelectColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.Add(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.Contains(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.IndexOf(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.Remove(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> from the list based on its DisplayExpression property
            </summary>
            <param name="valueExpression">ValueExpression of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTypeColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor">
            <summary>
            Creates an empty list of ReportTypeColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportTypeColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportTypeColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportTypeColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportTypeColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportTypeColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.Contains(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.IndexOf(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.Remove(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumnList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> from the list based on its <see cref="P:VC3.Reporting.Design.ReportTypeColumn.Name"/> property
            </summary>
            <param name="name">Name property of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumnList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaTable">
            <summary>
            ReportSchemaTable
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.CanSubstituteFor(VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Determines is this table can be used in place of
            another table when building report queries.
            Used to optimize the report fitler clause.
            </summary>
            <param name="anotherTable">A table to test</param>
            <returns>True if this table is derived from or is another table</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.#ctor">
            <summary>
            Creates a new ReportSchemaTable.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportSchemaTable that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.GetTableExpression(VC3.Reporting.Design.Report)">
            <summary>
            Gets the table expression. Override in subclasses to
            customize the table SQL.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaTable objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTable.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.TableExpression">
            <summary>
            Gets or sets the TableExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.IdentityExpression">
            <summary>
            Gets or sets the IdentityExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.Columns">
            <summary>
            Gets or sets the Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.Parameters">
            <summary>
            Gets or sets the Parameters.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTable.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData">
            <summary>
            <summary>
            Provides access to ReportSchemaColumnAllowedValue-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSchemaColumnAllowedValue record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.GetAllRecords">
            <summary>
            Gets all records from the ReportSchemaColumnAllowedValue table
            </summary>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaColumnAllowedValue table
            with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaColumnAllowedValue table
            with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.GetRecordsBySchemaColumn(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaColumnAllowedValue table
            with the specified ids
            </summary>
            <param name="ids">Ids of the SchemaColumn(s) to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.GetRecordsBySchemaColumn(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaColumnAllowedValue table
            with the specified ids
            </summary>
            <param name="ids">Ids of the SchemaColumn(s) to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.InsertRecord(System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Inserts a new record into the ReportSchemaColumnAllowedValue table with the specified values
            </summary>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="value">Value to assign to the Value field of the record</param>
            <param name="isDynamic">Value to assign to the IsDynamic field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.UpdateRecord(System.Guid,System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Updates a record in the ReportSchemaColumnAllowedValue table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="value">Value to assign to the Value field of the record</param>
            <param name="isDynamic">Value to assign to the IsDynamic field of the record</param>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaColumnAllowedValueData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaOperator">
            <summary>
            Represents an operator that takes a column and value as inputs. Examples
            include "less than", "equals" and "starts with" operators.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.ToLiteral(VC3.Reporting.Design.ReportSchemaDataType,System.Object)">
            <summary>
            Applies operator-specific escaping to the value to produce a literal value
            that can be passed to <see cref="M:VC3.Reporting.Design.ReportSchemaOperator.ToSql(System.String[])"/>.
            </summary>
            <param name="val">The value to escape</param>
            <returns>The escaped value</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.ToSql(System.String[])">
            <summary>
            Builds a sql expression that can be used in a query based on
            actual inputs into this operator.
            </summary>
            <returns>An expression that can be used in the query</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.ToString">
            <summary>
            Returns the name of the operator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.#ctor">
            <summary>
            Creates a new ReportSchemaOperator.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportSchemaOperator that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaOperator"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaOperator objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaOperator.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.ArgumentCount">
            <summary>
            Returns the number of arguments this operator takes as input.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.Expression">
            <summary>
            Gets or sets the Expression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.ConcatExpression">
            <summary>
            Gets or sets the ConcatExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.FindRegex">
            <summary>
            Gets or sets the FindRegex.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.ReplaceRegex">
            <summary>
            Gets or sets the ReplaceRegex.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.AllowMultipleValues">
            <summary>
            Gets or sets the AllowMultipleValues.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.Operator">
            <summary>
            Gets or sets the Operator.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaOperator.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaTableParameterData">
            <summary>
            <summary>
            Provides access to ReportSchemaTableParameter-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.UpdateRecord(System.Guid,System.String,System.Boolean,System.Int32,System.Guid,System.Guid,System.Guid)">
            <summary>
            Updates a record in the ReportSchemaTableParameter table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="isRequired">Value to assign to the IsRequired field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="schemaOperator">Value to assign to the SchemaOperator field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.InsertRecord(System.String,System.Boolean,System.Int32,System.Guid,System.Guid,System.Guid)">
            <summary>
            Inserts a new record into the ReportSchemaTableParameter table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="isRequired">Value to assign to the IsRequired field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="schemaOperator">Value to assign to the SchemaOperator field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaTableParameter table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaTableParameter table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSchemaTableParameter record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.GetRecordsBySchemaTable(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaTableParameter table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.GetRecordsBySchemaTable(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaTableParameter table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaTableParameterData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportGroupColumnData">
            <summary>
            <summary>
            Provides access to ReportGroupColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportGroupColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportGroupColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportGroupColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportGroupColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportGroupColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportColumnTypeData">
            <summary>
            <summary>
            Provides access to ReportColumnType-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportColumnTypeData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.UpdateRecord(System.Char,System.String)">
            <summary>
            Updates a record in the ReportColumnType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.InsertRecord(System.Char,System.String)">
            <summary>
            Inserts a new record into the ReportColumnType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportColumnType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumnType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnTypeData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportColumnType record
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportColumnTypeData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000">
            <summary>
            ReportingServiceAdapter2000 provides access to SSRS 2000 and 2005 web
            services
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.GetReportingService">
            <summary>
            Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService"/>.
            </summary>
            <returns>Returns a configured instance of the <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportingService"/></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.CreateReport(System.String,System.String)">
            <summary>
            Publishes a report to the report server
            </summary>
            <param name="path">Path to the report</param>
            <param name="rdl">RDL definition of the report</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.RenderResource(System.String,System.Collections.IList,VC3.Reporting.SqlServerReportingServices.SqlOutputFormat,System.String,System.String@,System.Byte[]@)">
            <summary>
            Loads a report resource
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.EnsureFolder(System.String)">
            <summary>
            Ensures the specified folder exists and create it if not
            </summary>
            <param name="folderPath">Absolute path to folder</param>
            <returns>A generic string list of messages describing the folder creation</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.CreateDataSource(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new datasource based on the specified parameters
            </summary>
            <param name="name">The datasource name</param>
            <param name="path">The path of the datasource</param>
            <param name="userName">The username associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="password">The password associated with the datasource. May be null if included in the connection string parameter</param>
            <param name="extension"></param>
            <param name="connectionString">The connection string associated with the datasource</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.CreateReport(System.String,System.String,System.Boolean,System.Byte[])">
            <summary>
            Creates a report on the report server according to the specified parameters
            </summary>
            <param name="title">The title of the report</param>
            <param name="path">The folder path of the report</param>
            <param name="overWrite">true to overwrite an existing report of the same name and location</param>
            <param name="reportDefinition">a byte array representing the report rdl file</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.DownloadReport(System.String)">
            <summary>
            Uses the specified path to search the report server for Report items
            </summary>
            <param name="path">The path of the report rdl file</param>
            <returns>A generic list of <see cref="T:VC3.Reporting.SqlServerReportingServices.DownloadedReport"/> objects</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.CreateTransaction">
            <summary>
            Creates a transacted version of the web service that will be used by various deployment methods if available.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.Rollback">
            <summary>
            Rolls back changes if there is an open transaction
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.ReportingServiceAdapter2000.Commit">
            <summary>
            Commits changes if there is an open transaction.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity">
            <summary>
            ReportSchemaJoinMultiplicity
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.#ctor">
            <summary>
            A new ReportSchemaJoinMultiplicity
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.#ctor(System.Char)">
            <summary>
            An existing ReportSchemaJoinMultiplicity that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaJoinMultiplicity objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.LowerBound">
            <summary>
            Gets or sets the LowerBound.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.UpperBound">
            <summary>
            Gets or sets the UpperBound.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicity.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.Renderer">
            <summary>
            Supported rendering methods
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlRenderedReport">
            <summary>
            A report rendered by SQL reporting services.  Used to manipulate the report output
            </summary>
        </member>
        <member name="T:VC3.Reporting.RenderedReport">
            <summary>
            The rendered output from a report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.RenderedReport.Write(System.IO.TextWriter)">
            <summary>
            Writes the rendered text <see cref="P:VC3.Reporting.RenderedReport.Contents"/> to the specified writer
            </summary>
        </member>
        <member name="M:VC3.Reporting.RenderedReport.Write(System.IO.BinaryWriter)">
            <summary>
            Writes the rendered binary <see cref="P:VC3.Reporting.RenderedReport.Contents"/> to the specified writer
            </summary>
        </member>
        <member name="P:VC3.Reporting.RenderedReport.MimeType">
            <summary>
            Specifies the type of data in the rendered <see cref="P:VC3.Reporting.RenderedReport.Contents"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.RenderedReport.Contents">
            <summary>
            The contents of the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.RenderedReport.Resources">
            <summary>
            The resources, such as images, associated with the rendered report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlRenderedReport.ContentLength">
            <summary>
            The size of the rendered report, excluding resources, in bytes.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlReport">
            <summary>
            Implementation of <see cref="T:VC3.Reporting.IReport"/> for reports managed
            by SQL Server Reporting Services.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.CatalogItem.#ctor(System.String)">
            <summary>
            An existing catalog item
            </summary>
            <param name="path">Path to a report within the application</param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.CreatedBy">
            <summary>
            The name of the user who originally added the item to the report server database. String. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.CreationDate">
            <summary>
            The date and time the item was added to the report server database. DateTime. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Description">
            <summary>
            The description of the item. String. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.ExecutionDate">
            <summary>
            The date and time at which a report was last executed. DateTime. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Hidden">
            <summary>
            Indicates whether the item is hidden. Boolean. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.MimeType">
            <summary>
            The Multipurpose Internet Mail Extensions (MIME) type of a resource in the report server database. String. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.ModifiedBy">
            <summary>
            The name of the user who last modified the item in the report server database. DateTime. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.ModifiedDate">
            <summary>
            The date and time the user last modified the item. DateTime. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Name">
            <summary>
            The name of an item in the report server database. String. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Path">
            <summary>
            The application relative path of the item. Uniquely identifies this report 
            within an application. String. Read-only. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Size">
            <summary>
            The size, in bytes, of an item in the report server database. Integer. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.CatalogItem.Type">
            <summary>
            The type of an item (ItemTypeEnum object) in the report server database. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.IReport">
            <summary>
            Generalized report interface.
            </summary>
        </member>
        <member name="M:VC3.Reporting.IReport.Render(VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report. Returns a complete description of the rendered report.
            </summary>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.IReport.RenderText(System.IO.TextWriter,VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report.  Does not render resources associated with the report.
            </summary>
            <param name="writer">Writer that the report should be written to</param>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.IReport.RenderBinary(System.IO.BinaryWriter,VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report. Does not render resources associated with the report.
            </summary>
            <param name="writer">Writer that the report should be written to</param>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.IReport.Delete">
            <summary>
            Deletes the report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.IReport.RefreshParameters">
            <summary>
            Updates valid values for report parameters after some dependencies may have been selected.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.Id">
            <summary>
            Gets the id that uniquely identifies the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.Name">
            <summary>
            Gets or sets the title of the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.Description">
            <summary>
            Gets or sets the description of the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.Parameters">
            <summary>
            Gets the list of parameters, if any, that need to
            be specified before running the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.SupportedFormats">
            <summary>
            Gets a list of supported rendering formats for this report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReport.IsRunnable">
            <summary>
            Returns true if report parameters have valid values
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.GetInstance(System.String)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReport"/> specified by the path.
            </summary>
            <param name="path">Path to the SqlReport</param>
            <returns>SqlReport instance</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.Render(VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report in a text format.
            </summary>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.RenderSoap(VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report in a text format.
            </summary>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.RenderExe(VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report using a proxy exe, defaults to RenderSoap if there is an error
            </summary>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.ReadLine(System.IO.Stream)">
            <summary>
            An implementation of ReadLine that does not buffer
            </summary>
            The standard Stream.ReadLine() has a 1k buffer.  This method was written as a workaround to
            dodge the buffer.
            <param name="s">Stream to read from</param>
            <returns>A line of data</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.RenderText(System.IO.TextWriter,VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report.  Does not render resources associated with the report.
            </summary>
            <param name="writer">Writer that the report should be written to</param>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.RenderBinary(System.IO.BinaryWriter,VC3.Reporting.OutputFormat)">
            <summary>
            Renders the report. Does not render resources associated with the report.
            </summary>
            <param name="writer">Writer that the report should be written to</param>
            <param name="format">Formatting options used to control how the report will be rendered.</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReport.EstimateCost">
            <summary>
            Estimates the cost of rendering the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReport.RenderMethod">
            <summary>
            Rendering method to use
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReport.Id">
            <summary>
            The path of the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReport.IsRunnable">
            <summary>
            Returns true if report parameters have valid values
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReport.Parameters">
            <summary>
            Gets the list of parameters, if any, that need to
            be specified before running the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReport.SupportedFormats">
            <summary>
            Gets a list of supported rendering formats for this report.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlReportResource">
            <summary>
            SQL Server version of a report resource
            </summary>
        </member>
        <member name="T:VC3.Reporting.ReportResource">
            <summary>
            A resource returned by a report when it is rendered.
            </summary>
        </member>
        <member name="P:VC3.Reporting.ReportResource.Id">
            <summary>
            Uniquely identifies this resource within the rendered report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.ReportResource.MimeType">
            <summary>
            Specifies the type of data in the rendered <see cref="P:VC3.Reporting.ReportResource.Contents"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.ReportResource.Contents">
            <summary>
            The contents of the resource
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlReportParameter">
            <summary>
            Implementation of <see cref="T:VC3.Reporting.IReportParameter"/> for reports managed
            by SQL Server Reporting Services.
            </summary>
        </member>
        <member name="T:VC3.Reporting.IReportParameter">
            <summary>
            Definition and value of a report paramter.  Can be used to
            get the <see cref="P:VC3.Reporting.IReportParameter.Name"/>, a list of <see cref="P:VC3.Reporting.IReportParameter.ValidValues"/> and 
            specified the <see cref="P:VC3.Reporting.IReportParameter.Value"/> that will be used to render the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Label">
            <summary>
            Gets or sets the label of the parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Name">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Type">
            <summary>
            Gets the Type of each of the parameter <see cref="P:VC3.Reporting.IReportParameter.Values"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.IsRequired">
            <summary>
            If true, at least one value must be specified for the parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.IsMultiValued">
            <summary>
            If true, multiple values can specified for the parmeter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.HasOutstandingDependencies">
            <summary>
            If true, at least one dependency is unsatisfied
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Nullable">
            <summary>
            If true, Null is a valid value
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Value">
            <summary>
            Gets the value(s) of the parameter that will be
            used to run the report.
            </summary>
            <remarks>
            This property should only be used when
            <see cref="P:VC3.Reporting.IReportParameter.IsMultiValued"/> is false.
            </remarks>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Values">
            <summary>
            Gets the value(s) of the parameter that will be
            used to run the report.
            </summary>
            <remarks>
            This property should only be used when
            <see cref="P:VC3.Reporting.IReportParameter.IsMultiValued"/> is true.
            </remarks>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.ValidValues">
            <summary>
            Gets the set of allowable values for this parameter, or null if
            the allowable values are free-form.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IReportParameter.Dependencies">
            <summary>
            Gets a list of parameters that this one depends upon.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportParameter.#ctor(VC3.Reporting.SqlServerReportingServices.SqlReport)">
            <summary>
            Converts a <see cref="T:VC3.Reporting.SqlServerReportingServices.ReportService.ReportParameter"/> to a <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReportParameter"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlReportParameter.Dependencies">
            <summary>
            Gets a list of parameters that this one depends upon.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat">
            <summary>
            Report format specific to SQL Server Reporting Services
            </summary>
        </member>
        <member name="T:VC3.Reporting.OutputFormat">
            <summary>
            Used to specify the format of a report when it is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.OutputFormat.#ctor">
            <summary>
            Creates a new output format.
            </summary>
        </member>
        <member name="M:VC3.Reporting.OutputFormat.ToString">
            <summary>
            Overridden. Returns the format's <see cref="P:VC3.Reporting.OutputFormat.Name"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.OutputFormat.Name">
            <summary>
            Name of the output format.
            </summary>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.CurrentPage">
            <summary>
            Indicates that the current page should be used.
            </summary>
        </member>
        <member name="F:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.DontOverride">
            <summary>
            Indicates that the setting in the report should not be overridden.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.#ctor(System.String,System.String)">
            <summary>
            Creates a new report format
            </summary>
            <param name="name">Value to use for the <paramref name="name"/> property</param>
            <param name="renderingExtension">Value to use for the <see cref="P:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.RenderingExtension"/> property</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.#ctor(System.String)">
            <summary>
            Creates a new report format.  A <see cref="P:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.RenderingExtension"/> must also
            be set before this format can be used.
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.RenderingExtension">
            <summary>
            The format in which to render the report. This argument maps to a rendering extension. 
            Common extensions are HTML3.2, HTML4.0, HTML5, XML, CSV, PDF, and IMAGE.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.DeviceInfo">
            <summary>
            An XML string that contains the device-specific content that is required by the rendering 
            extension specified in the Format parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlOutputFormat.UrlAccessQueryString">
            <summary>
            An XML string that contains the device-specific content that is required by the rendering 
            extension specified in the Format parameter.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat">
            <summary>
            Format options for HTML-oriented SQL Server Reports
            </summary>
        </member>
        <member name="T:VC3.Reporting.IHtmlOutputFormat">
            <summary>
            Used to specify HTML formatting options
            </summary>
        </member>
        <member name="P:VC3.Reporting.IHtmlOutputFormat.ResourceUrl">
            <summary>
            The url used to serve images, scripts and stylesheets generated by a report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.IHtmlOutputFormat.LinkTarget">
            <summary>
            Window that links in the report should target
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.HtmlVersion">
            <summary>
            The version of HTML to target.
            Default is HTML40.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.BookmarkID">
            <summary>
            The bookmark ID to jump to in the report. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.DocMap">
            <summary>
            Indicates whether to show or hide the report document map. 
            The default value of this parameter is true. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.DocMapID">
            <summary>
            The document map ID to scroll to in the report. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.EndFind">
            <summary>
            The number of the last page to use in the search. For example, a value
            of 5 indicates that the last page to be searched is page 5 of the report.
            The default value is the number of the current page. Use this setting 
            in conjunction with the StartFind setting. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.FindString">
            <summary>
            The text to search for in the report. The default value of this parameter is an empty string. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.FallbackPage">
            <summary>
            The number of the page to display if a search or a document map
            selection fails. The default value is the number of the
            current page. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.GetImage">
            <summary>
            Gets a particular icon for the HTML Viewer user interface. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.HtmlFragment">
            <summary>
            Indicates whether an HTML fragment is created in place of a full
            HTML document. An HTML fragment includes the report content in a
            TABLE element and omits the HTML and BODY elements. The default
            value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Icon">
            <summary>
            The icon of a particular rendering extension. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.JavaScript">
            <summary>
            Indicates whether JavaScript is supported in the rendered report. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.LinkTarget">
            <summary>
            The target for hyperlinks in the report. You can target a window or 
            frame by providing the name of the window, like LinkTarget=window_name,
            or you can target a new window using LinkTarget=_blank. Other valid
            target names include _self, _parent, and _top. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Parameters">
            <summary>
            Indicates whether to show or hide the parameters area of the toolbar. 
            If you set this parameter to a value of true, the parameters area of
            the toolbar is displayed. The default value of this parameter is true. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Section">
            <summary>
            The page number of the report to render. A value of 0 indicates that
            all sections of the report are rendered. The default value is 1. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.StartFind">
            <summary>
            The number of the page on which to begin the search. The default value is 
            the number of the current page. Use this setting in conjunction with the 
            EndFind setting. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.StreamRoot">
            <summary>
            The path used for prefixing the value of the src attribute of the 
            IMG element in the HTML report returned by the report server. By 
            default, the report server provides the path. You can use this 
            setting to specify a root path for the images in a report (for 
            example, http://myserver/resources/companyimages). 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.StyleStream">
            <summary>
            Indicates whether styles and scripts are created as a separate stream 
            instead of in the document. The default value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Toolbar">
            <summary>
            Indicates whether to show or hide the toolbar. If the value
            of this parameter is false, all remaining options (except 
            the document map) are ignored. If you omit this parameter, 
            the toolbar is automatically displayed for rendering formats 
            that support it. The default of this parameter is true. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Type">
            <summary>
            The short name of the browser type (for example, "IE5")
            as defined in browscap.ini. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlHtmlOutputFormat.Zoom">
            <summary>
            The report zoom value as an integer percentage or a string constant. 
            Standard string values include Page Width and Whole Page. This parameter 
            is ignored by versions of Microsoft Internet Explorer earlier than Internet 
            Explorer 5.0 and all non-Microsoft browsers. The default value of this parameter is 100. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlExcelOutputFormat">
            <summary>
            Format options for Excel SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlExcelOutputFormat.OmitDocumentMap">
            <summary>
            Indicates whether to omit the document map for reports
            that support it. The default value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlExcelOutputFormat.OmitFormulas">
            <summary>
            Indicates whether to omit formulas from the rendered
            report. The default value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlExcelOutputFormat.RemoveSpace">
            <summary>
            Indicates whether to omit rows or columns that do not
            contain data and are smaller than the given size. Use
            this setting to remove extra rows or columns that do
            not contain report items. You must include an integer
            or decimal value followed by "in" (for example, 0.5in).
            The default value is 0.125in. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlPowerPointOutputFormat">
            <summary>
            Format options for PowerPoint SQL Server Reports
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat">
            <summary>
            Formatting options for CSV SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.Encoding">
            <summary>
            One of the character encoding schemas: ASCII, UTF-7, UTF-8, or
            Unicode. The default value is Unicode. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.Extension">
            <summary>
            The file extension to put on the result. 
            The default value is .CSV. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.FieldDelimiter">
            <summary>
            The delimiter string to put in the result. 
            The default value is a comma (,). 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.NoHeader">
            <summary>
            Indicates whether the header row is excluded from the output. 
            The default value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.Qualifier">
            <summary>
            The qualifier string to put around results that contain 
            the field delimiter or record delimiter. If the results
            contain the qualifier, the qualifier is repeated. The 
            Qualifier setting must be different from the FieldDelimiter
            and RecordDelimiter settings. The default value is a
            quotation mark ("). 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.RecordDelimiter">
            <summary>
            The record delimiter to put at the end of each record.
            The default value is: cr lf. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlCsvOutputFormat.SuppressLineBreaks">
            <summary>
            Indicates whether line breaks are removed from the 
            data included in the output. The default value is
            false. If the value is true, the FieldDelimiter,
            RecordDelimiter, and Qualifier settings cannot be
            a space character 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat">
            <summary>
            Formatting options for image SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.ColorDepth">
            <summary>
            The pixel depth of the color range supported by the image output.
            Valid values are 1, 4, 8, 24, and 32. The default value is 24.
            ColorDepth is only supported for TIFF rendering and is otherwise
            ignored by the report server for other image output formats. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.Columns">
            <summary>
            The number of columns to set for the report. This value overrides
            the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.ColumnSpacing">
            <summary>
            The column spacing to set for the report. This value overrides
            the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.DpiX">
            <summary>
            The resolution of the output device in x-direction. The default value is 96. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.DpiY">
            <summary>
            The resolution of the output device in y-direction. The default value is 96. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.EndPage">
            <summary>
            The last page of the report to render. The default value is the value for StartPage. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.MarginBottom">
            <summary>
            The bottom margin value, in inches, to set for the report. You must 
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.MarginLeft">
            <summary>
            The left margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.MarginRight">
            <summary>
            The right margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.MarginTop">
            <summary>
            The top margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.OutputFormat">
            <summary>
            One of the Graphics Device Interface (GDI) supported output
            formats: BMP, EMF, GIF, JPEG, PNG, or TIFF. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.PageHeight">
            <summary>
            The page height, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 11in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.PageWidth">
            <summary>
            The page width, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 8.5in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlImageOutputFormat.StartPage">
            <summary>
            The first page of the report to render. A value of 0 indicates that all pages are rendered.
            The default value is 1. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat">
            <summary>
            Formatting options for PDF SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.Columns">
            <summary>
            The number of columns to set for the report. This value overrides
            the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.ColumnSpacing">
            <summary>
            The column spacing to set for the report. This value overrides
            the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.DpiX">
            <summary>
            The resolution of the output device in x-direction. The default value is 300. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.DpiY">
            <summary>
            The resolution of the output device in y-direction. The default value is 300. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.EndPage">
            <summary>
            The last page of the report to render. The default value is the value for StartPage. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.MarginBottom">
            <summary>
            The bottom margin value, in inches, to set for the report. You must 
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.MarginLeft">
            <summary>
            The left margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.MarginRight">
            <summary>
            The right margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.MarginTop">
            <summary>
            The top margin value, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 1in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.PageHeight">
            <summary>
            The page height, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 11in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.PageWidth">
            <summary>
            The page width, in inches, to set for the report. You must
            include an integer or decimal value followed by "in" (for example, 8.5in).
            This value overrides the report's original settings. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlPdfOutputFormat.StartPage">
            <summary>
            The first page of the report to render. A value of 0 indicates that all pages are rendered.
            The default value is 1. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat">
            <summary>
            Formatting options for XML SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.XSLT">
            <summary>
            The URL of an XSLT to apply to the XML file. The value of this
            setting is applied after any XSLT that is specified in the report.
            If the XSLT setting is applied, the <see cref="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.OmitSchema"/> setting is ignored. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.MIMEType">
            <summary>
            The Multipurpose Internet Mail Extensions (MIME) type of the XML file. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.UseFormattedValues">
            <summary>
            Indicates whether to render the formatted value of a text 
            box when generating the XML data. A value of false indicates
            that the underlying value of the text box is used. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.Indented">
            <summary>
            Indicates whether to generate indented XML. The default
            value of false generates non-indented, compressed XML. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.OmitSchema">
            <summary>
            Indicates whether to omit the schema name from the XML
            and to omit an XSD. The default value is false. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.Encoding">
            <summary>
            One of the character encoding schemas: ASCII, UTF-8, or Unicode.
            The default value is UTF-8. 
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlXmlOutputFormat.FileExtension">
            <summary>
            The file extension to use for the generated file. 
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlMhtmlOutputFormat">
            <summary>
            Formatting options for MHTML SQL Server Reports
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlMhtmlOutputFormat.JavaScript">
            <summary>
            Indicates whether JavaScript is supported in the rendered report.
            Default is false;
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.SqlMhtmlOutputFormat.MHTMLFragment">
            <summary>
            Fragment Indicates whether an MHTML fragment is created in place of
            a full MHTML document. An MHTML fragment includes the report content
            in a TABLE element and omits the HTML and BODY elements. The default value is false. 
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SessionManager.GetUniqueId(VC3.Reporting.SqlServerReportingServices.SqlReport)">
            <summary>
            Gets a string that uniquely identifies the report and its current parameters
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTypeTableList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor">
            <summary>
            Creates an empty list of ReportTypeTable objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportTypeTable objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportTypeTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportTypeTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportTypeTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportTypeTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.Add(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.Contains(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.IndexOf(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.Insert(System.Int32,VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.Remove(VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTableList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTableList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTableList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTableList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaSummaryFunctionList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaSummaryFunction objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaSummaryFunction objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaSummaryFunction objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaSummaryFunction objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaSummaryFunction objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaSummaryFunction objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Add(VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Contains(VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.IndexOf(VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Remove(VC3.Reporting.Design.ReportSchemaSummaryFunction)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaSummaryFunction"/> from the list based on its name
            </summary>
            <param name="name">Name of the item</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaSummaryFunctionList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaJoinMultiplicity objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaJoinMultiplicity objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaJoinMultiplicity objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaJoinMultiplicity objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaJoinMultiplicity objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaJoinMultiplicity objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Add(VC3.Reporting.Design.ReportSchemaJoinMultiplicity)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Contains(VC3.Reporting.Design.ReportSchemaJoinMultiplicity)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.IndexOf(VC3.Reporting.Design.ReportSchemaJoinMultiplicity)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaJoinMultiplicity)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Remove(VC3.Reporting.Design.ReportSchemaJoinMultiplicity)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaJoinMultiplicity"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaJoinMultiplicityList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData">
            <summary>
            <summary>
            Provides access to ReportSchemaSummaryFunction-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.UpdateRecord(System.Char,System.String,System.Int32,System.String)">
            <summary>
            Updates a record in the ReportSchemaSummaryFunction table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="functionExpression">Value to assign to the FunctionExpression field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.InsertRecord(System.Char,System.String,System.Int32,System.String)">
            <summary>
            Inserts a new record into the ReportSchemaSummaryFunction table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="functionExpression">Value to assign to the FunctionExpression field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportSchemaSummaryFunction table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaSummaryFunction table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportSchemaSummaryFunction record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.GetRecordsForReportSchemaDataTypeSummaryFunctionAssociation(System.String[])">
            <summary>
            Gets records from the ReportSchemaSummaryFunction table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaDataType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.GetRecordsForReportSchemaDataTypeSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaSummaryFunction table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaDataType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.InsertRecordsForReportSchemaDataTypeSummaryFunctionAssociation(System.Char,System.String[])">
            <summary>
            Insert records in the ReportSchemaDataTypeSummaryFunction table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.InsertRecordsForReportSchemaDataTypeSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Insert records in the ReportSchemaDataTypeSummaryFunction table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.DeleteRecordsForReportSchemaDataTypeSummaryFunctionAssociation(System.Char,System.String[])">
            <summary>
            Deletes records from the ReportSchemaDataTypeSummaryFunction table for the specified ids
            </summary>
            <param name="schemaDataType">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.DeleteRecordsForReportSchemaDataTypeSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Deletes records from the ReportSchemaDataTypeSummaryFunction table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaDataType</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.GetRecordsForReportSelectColumnSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaSummaryFunction table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSelectColumn's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.InsertRecordsForReportSelectColumnSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Insert records in the ReportSelectColumnSummaryFunction table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSelectColumn</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.DeleteRecordsForReportSelectColumnSummaryFunctionAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Deletes records from the ReportSelectColumnSummaryFunction table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSelectColumn</param>
            <param name="ids">The ids of the ReportSchemaSummaryFunction's to insert</param>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaSummaryFunctionData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportOrderColumnData">
            <summary>
            <summary>
            Provides access to ReportOrderColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportOrderColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.UpdateRecord(System.Boolean,System.Guid)">
            <summary>
            Updates a record in the ReportOrderColumn table with the specified values
            </summary>
            <param name="isAscending">Value to assign to the IsAscending field of the record</param>
            <param name="id">Value to assign to the Id field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.InsertRecord(System.Boolean,System.Guid)">
            <summary>
            Inserts a new record into the ReportOrderColumn table with the specified values
            </summary>
            <param name="isAscending">Value to assign to the IsAscending field of the record</param>
            <param name="id">Value to assign to the Id field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportOrderColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportOrderColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportOrderColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportOrderColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportOrderColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportFormatData">
            <summary>
            <summary>
            Provides access to ReportFormat-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportFormatData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.UpdateRecord(System.Char,System.String,System.String,System.String,System.String)">
            <summary>
            Updates a record in the ReportFormat table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="builder">Value to assign to the Builder field of the record</param>
            <param name="template">Value to assign to the Template field of the record</param>
            <param name="datasource">Value to assign to the Datasource field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.InsertRecord(System.Char,System.String,System.String,System.String,System.String)">
            <summary>
            Inserts a new record into the ReportFormat table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="builder">Value to assign to the Builder field of the record</param>
            <param name="template">Value to assign to the Template field of the record</param>
            <param name="datasource">Value to assign to the Datasource field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportFormat table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportFormat table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportFormat record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.GetRecordsForReportTypeFormatAssociation(System.String[])">
            <summary>
            Gets records from the ReportType table for the specified association
            </summary>
            <param name="ids">Ids of the Types's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.GetRecordsForReportTypeFormatAssociation(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportType table for the specified association
            </summary>
            <param name="ids">Ids of the Types's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.InsertRecordsForReportTypeFormatAssociation(System.Char,System.String[])">
            <summary>
            Insert records in the ReportTypeFormat table for the specified ids
            </summary>
            <param name="id">The id of the associated Format</param>
            <param name="ids">The ids of the ReportType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.InsertRecordsForReportTypeFormatAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Insert records in the ReportTypeFormat table for the specified ids
            </summary>
            <param name="id">The id of the associated Format</param>
            <param name="ids">The ids of the ReportType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.DeleteRecordsForReportTypeFormatAssociation(System.Char,System.String[])">
            <summary>
            Deletes records from the ReportTypeFormat table for the specified ids
            </summary>
            <param name="reportType">The id of the associated Format</param>
            <param name="ids">The ids of the ReportType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFormatData.DeleteRecordsForReportTypeFormatAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Deletes records from the ReportTypeFormat table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportFormat</param>
            <param name="ids">The ids of the ReportType's to delete</param>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportFormatData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportData">
            <summary>
            <summary>
            Provides access to Report-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.UpdateRecord(System.Guid,System.String,System.String,System.String,System.String,System.Char,System.Char)">
            <summary>
            Updates a record in the Report table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="title">Value to assign to the Title field of the record</param>
            <param name="query">Value to assign to the Query field of the record</param>
            <param name="path">Value to assign to the Path field of the record</param>
            <param name="description">Value to assign to the Description field of the record</param>
            <param name="type">Value to assign to the Type field of the record</param>
            <param name="format">Value to assign to the Format field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.InsertRecord(System.String,System.String,System.String,System.String,System.Char,System.Char)">
            <summary>
            Inserts a new record into the Report table with the specified values
            </summary>
            <param name="title">Value to assign to the Title field of the record</param>
            <param name="query">Value to assign to the Query field of the record</param>
            <param name="path">Value to assign to the Path field of the record</param>
            <param name="description">Value to assign to the Description field of the record</param>
            <param name="type">Value to assign to the Type field of the record</param>
            <param name="format">Value to assign to the Format field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the Report table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the Report table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a Report record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetRecordsByType(System.String[])">
            <summary>
            Gets records from the Report table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetRecordsByType(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the Report table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportType's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetAllRecords">
            <summary>
            Gets all records from the Report table
            </summary>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.IsUniqueTitle(System.String,System.Guid)">
            <summary>
            Ensures that the title is unique and may be used for the specified report.
            </summary>
            <param name="title">The title of the report to check</param>
            <param name="report">The id of the report the title is for</param>
            <returns>True if the report title is unique, otherwise False</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.GetReportData(System.String)">
            <summary>
            Executes raw SQl for a report
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportData.EstimateRecordCount(System.String)">
            <summary>
            Estimates the number of records returned by the specified query
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlElement">
            <summary>
            Base class for for all elements in an RDL document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.#cctor">
            <summary>
            Initializes an <see cref="T:System.Xml.XmlNamespaceManager"/> to support xpath queries.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetTemplate(System.Type,System.String)">
            <summary>
            Gets a template within this element and removes it from
            the document.  If template doesn't exist, then a null value is returned.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetElement(System.Type,System.String)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlElement"/> based on an xpath expression.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetElement(System.Type,System.Xml.XmlElement)">
            <summary>
            Gets the <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlElement"/> based on an xpath expression.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetValue(System.String)">
            <summary>
            Gets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetValue(System.Xml.XmlElement,System.String)">
            <summary>
            Gets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetValue(System.String,System.String)">
            <summary>
            Sets the text value of a child node based on the xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <param name="value">The text value to set the node to</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetInt32(System.String,System.Int32)">
            <summary>
            Gets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetUnit(System.String,System.Web.UI.WebControls.Unit)">
            <summary>
            Sets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetUnit(System.String,System.Web.UI.WebControls.Unit)">
            <summary>
            Gets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetInt32(System.String,System.Int32)">
            <summary>
            Sets the text value child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetElement(System.String)">
            <summary>
            Gets the child element that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetNodes(System.String)">
            <summary>
            Gets the child nodes that matches the specified xpath expression.
            </summary>
            <param name="xpath">The expression to search with</param>
            <returns>The matching nodes</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.AddElement(System.String)">
            <summary>
            Recursively creates and adds a child element with the specified name.
            </summary>
            <param name="name">The name of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.AddElement(System.String,System.String)">
            <summary>
            Creates and adds a child element with the specified name and value.
            </summary>
            <param name="name">The name of the element to add</param>
            <param name="value">The value of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.RemoveElements(System.String)">
            <summary>
            Removes the specified elements from the document
            </summary>
            <param name="xpath">The expression to search with. Matching elements will be deleted</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetValue(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Sets the text value of a child node based on the xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <param name="value">The text value to set the node to</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetEnum(System.String,System.Enum)">
            <summary>
            Reads an enum value from the underlying XML document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetEnum(System.String,System.Enum)">
            <summary>
            Writes an enum value to the underlying XML document
            </summary>
            <param name="xpath"></param>
            <param name="value"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetBoolean(System.String,System.Boolean)">
            <summary>
            Reads a boolean value from the underlying XML document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetBoolean(System.String,System.Boolean)">
            <summary>
            Writes a boolean value to the underlying XML document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetElement(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the child element that matches the specified xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.GetNodes(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the child nodes that matches the specified xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <returns>The matching nodes</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.AddElement(System.Xml.XmlElement,System.String)">
            <summary>
            Recursively creates and adds a child element with the specified name.
            </summary>
            <param name="node">The element to add the child element to</param>
            <param name="name">The name of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.AddElement(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Creates and adds a child element with the specified name and value.
            </summary>
            <param name="node">The element to add the child element to</param>
            <param name="name">The name of the element to add</param>
            <param name="value">The value of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.RemoveElements(System.Xml.XmlNode,System.String)">
            <summary>
            Removes the specified elements from the document
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with. Matching elements will be deleted</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetBinding(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Adds a value that can be accessed using a binding expression
            that is embedded in the RDL.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElement.SetBinding(System.String,System.String)">
            <summary>
            Adds a value that can be accessed using a binding expression
            that is embedded in the RDL.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlElement.Report">
            <summary>
            The report that owns this element
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlElement.XmlElement">
            <summary>
            Gets the XML element this RDL element is bound to
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlElementTemplate">
            <summary>
            An RDL element that serves as a template.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElementTemplate.#ctor(VC3.Reporting.SqlServerReportingServices.RdlReport,System.Xml.XmlElement)">
            <summary>
            Create a new template based on an element
            and removes the element from the document.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlElementTemplate.CreateElement">
            <summary>
            Creates a new element based on the template,
            adds it to the document, and returns it.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlElementWithName">
            <summary>
            Base class for named RDL elements
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlElementWithName.Name">
            <summary>
            The unique name of the element
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlReport">
            <summary>
            A RDL document describes an entire report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.#ctor(System.Xml.XmlDocument)">
            <summary>
            Creates an RDL document from an XML document.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetUniqueName">
            <summary>
            Gets a name that will be unique within this report
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetUniqueName(System.String)">
            <summary>
            Gets a name that will be unique within this report
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetRdlElement(System.Xml.XmlElement)">
            <summary>
            Gets an <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlElement"/> for the associated xml element
            </summary>
            <param name="xmlElement">XML element to get the associated RDL element for</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.SetRdlElement(System.Xml.XmlElement,VC3.Reporting.SqlServerReportingServices.RdlElement)">
            <summary>
            Links an <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlElement"/> to an xml element
            </summary>
            <param name="xmlElement">The XML element</param>
            <param name="rdlElement">RDL element to associate with the xml element</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetDataSource(System.Int32)">
            <summary>
            Gets a datasource used by the report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetParameterValue(VC3.Reporting.Design.ReportParameterColumn,VC3.Reporting.ReportParameterList)">
            <summary>
            Finds the "runable" report parameter that corresponds a design-time one while taking
            into account cascading parameters due to allowed value groups.
            Assumes that the IReport is an RDL <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReport"/> generated by <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlReport"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.AddParameters(VC3.Reporting.Design.ReportParameterColumnList,VC3.Reporting.Design.QueryBuilder,VC3.Reporting.SqlServerReportingServices.RdlDataSource)">
            <summary>
            Adds parameters to the report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.AddParameter(VC3.Reporting.Design.ReportParameterColumn,System.String,VC3.Reporting.SqlServerReportingServices.RdlDataSource)">
            <summary>
            Adds a parameter to the report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.GetParameterQuery(System.String,System.String,System.Collections.Hashtable,System.String)">
            <summary>
            Returns a Parameter Query
            </summary>
            <param name="idField"></param>
            <param name="nameField"></param>
            <param name="parameters"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.AddDataSet">
            <summary>
            Adds a new dataset to the report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReport.ToRdl">
            <summary>
            Gets the RDL for the report
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReport.Report">
            <summary>
            This report
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReport.XmlDocument">
            <summary>
            The XML document this report is bound to
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReport.Width">
            <summary>
            The width of the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReport.PageHeight">
            <summary>
            Specifies the default height of the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReport.PageWidth">
            <summary>
            Specifies the default height of the report.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlReportParameter">
            <summary>
            Describes an individual parameter in the report.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.SetValidValues(VC3.Reporting.SqlServerReportingServices.RdlDataSet,System.String,System.String)">
            <summary>
            Specifies the set of values that can be used for this parameter
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.GetDataType(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Gets the SQL Server Reporting data type name for the
            specified <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
            <param name="dataType">The data type to resolve</param>
            <returns>The name of the SQL Server data type</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.GetDataType(System.Type)">
            <summary>
            Gets the SQL Server Reporting data type name for the
            specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The data type to resolve</param>
            <returns>The name of the SQL Server data type</returns>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.DataType">
            <summary>
            Indicates the data type of the parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.Nullable">
            <summary>
            Indicates whether the value for the parameter can be null.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.AllowBlank">
            <summary>
            Indicates whether the value for the parameter can be null.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.UsedInQuery">
            <summary>
            Indicates whether a report parameter is used in queries within the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.Prompt">
            <summary>
            Designates the text that the user interface displays when prompting the user for parameter values.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlReportParameter.DefaultValue">
            <summary>
            Specifies the default value to use for the parameter.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlAutoBoolean">
            <summary>
            A boolean but with an "Auto" setting.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlDataType">
            <summary>
            Indicates the datatype of report elements
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlStyle">
            <summary>
            Defines the styling for an <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlElement"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlStyle.Format">
            <summary>
            The format specified to use for this item
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlStyle.TextAlign">
            <summary>
            Describes the horizontal alignment of the text of the item.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlSortDirection">
            <summary>
            Indicates whether the items are sorted in ascending or descending order.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlRectangleTemplate">
            <summary>
            A template for a rectangle
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlRectangleTemplate.Create">
            <summary>
            Creates a rectangle
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlRectangle">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTableRow"/>
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableCellTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableCellTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableCell">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTableRow"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.Name">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.Value">
            <summary>
            The value of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.ToolTip">
            <summary>
            The value of the tooltip of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.Style">
            <summary>
            The style of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.ColSpan">
            <summary>
            The number of columns this cell spans
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableCell.HyperLink">
            <summary>
            The hyperlink of this cell
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableRowTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableRowTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableRow">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableRow.AddCell(System.String,VC3.ComponentModel.Formatter,System.String,System.String)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableRow.AddCell">
            <summary>
            adds a cell to the row
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableRow.AddCell(System.String)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableRow.AddCell(System.String,VC3.ComponentModel.Formatter)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableRow.Hidden">
            <summary>
            The expression that controls when this row is hidden
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableRow.SpanningParent">
            <summary>
            The row that may span across cells in this row
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableColumn">
            <summary>
            A column within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableColumn.Width">
            <summary>
            The width of the column
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableColumn.Hidden">
            <summary>
            The expression that controls when this row is hidden
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableColumnTemplate">
            <summary>
            A template for a table column
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableColumnTemplate.Create">
            <summary>
            Creates a new table columns
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTable">
            <summary>
            A table within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlReport"/>
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.IRdlSortableElement">
            <summary>
            Interface for elements that can be sorted
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTable.GetRow(System.String)">
            <summary>
            Gets a row from the table
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTable.GetRowTemplate(System.String)">
            <summary>
            Gets a row template and removes the underlying element from the document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTable.GetColumnTemplate">
            <summary>
            Gets a column template and removes the underlying element from the document
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTable.AddSortBy(System.String,VC3.Reporting.SqlServerReportingServices.RdlSortDirection)">
            <summary>
            Adds a sort order to data in this table
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTable.AddGrouping">
            <summary>
            Adds a grouping to the table
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlTableGroup">
            <summary>
            Defines a group in a table.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlTableGroup.AddGrouping(System.String)">
            <summary>
            The groupings
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlTableGroup.Name">
            <summary>
            The unique name of the group
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlSortBy">
            <summary>
            Indicates whether the items are sorted in ascending or descending order.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlSortBy.Expression">
            <summary>
            Defines an individual expression by which to sort the data.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlSortBy.Direction">
            <summary>
            Defines an individual expression by which to sort the data.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartTemplate">
            <summary>
            Represents a chart
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChartTemplate.Create">
            <summary>
            Creates a chart based on this template
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChart">
            <summary>
            Represents a chart
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddDynamicCategoryGrouping(System.String,System.String[])">
            <summary>
            Adds a category grouping to the chart whose members are determined dynamically
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddStaticCategoryGrouping(System.String)">
            <summary>
            Adds a group to a series
            </summary>
            <param name="grouping"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddDynamicSeriesGrouping(System.String,System.String[])">
            <summary>
            Adds a category grouping to the chart whose members are determined dynamically
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddStaticSeriesGrouping(System.String)">
            <summary>
            Adds a group to a series
            </summary>
            <param name="grouping"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddSeries(System.String)">
            <summary>
            Adds a data point to the chart and configures a single data point for it
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddSeries(System.String,System.String)">
            <summary>
            Adds a data point to the chart and configures a single data point for it
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChart.AddSeries">
            <summary>
            Adds a series to the chart
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlChart.Height">
            <summary>
            The vertical size of the chart
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlChart.Width">
            <summary>
            The horizontal size of the chart
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGroupingTemplate">
            <summary>
            A template for a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping"/>
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping">
            <summary>
            Defines a grouping for a report category or series.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping.AddGroupings(System.String[])">
            <summary>
            The groupings
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping.AddSortBy(System.String,VC3.Reporting.SqlServerReportingServices.RdlSortDirection)">
            <summary>
            The groupings
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping.Name">
            <summary>
            The unique name of the group
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlChartDynamicGrouping.Label">
            <summary>
            The label of the category.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartDataPointTemplate">
            <summary>
            A template for a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlChartDataPoint"/>
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartDataPoint">
            <summary>
            A datapoint on a chart
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChartDataPoint.SetDataValue(System.Int32,System.String)">
            <summary>
            Sets the value of the data point
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlChartDataPoint.AddDataValue(System.String)">
            <summary>
            Adds a new value to this datapoint.  The data values of this data point can be a 
            single value expression (in the case of bar or line charts) or multiple value 
            expressions (in the case of stock and bubble charts).
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlChartDataPoint.Label">
            <summary>
            Defines the data labels to display for data values
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartSeriesTemplate">
            <summary>
            A template for a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlChartSeries"/>
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlChartSeries">
            <summary>
            A datapoint on a chart
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlDataSetTemplate">
            <summary>
            A template for a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlDataSet"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSetTemplate.Create">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlDataSet"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSetTemplate.Create(VC3.Reporting.SqlServerReportingServices.RdlDataSource,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlDataSet"/>
            and populates it based on the specified query.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlDataSource">
            <summary>
            A datasource used by a report
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlDataSet">
            <summary>
            A dataset within a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSet.#ctor(VC3.Reporting.SqlServerReportingServices.RdlReport,System.Xml.XmlElement,VC3.Reporting.SqlServerReportingServices.RdlDataSource,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Create a new dataset configured based on the specified query
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSet.AddParameter(System.String,System.String)">
            <summary>
            Adds a parameter that will be passed to the datasource as part of the query
            </summary>
            <param name="name">Name of the parameter. Required.</param>
            <param name="value">Contains the value to pass to the data source.</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSet.AddField(System.String)">
            <summary>
            Exposes a column within the query to other report elements.
            Uses columnName as the field name within the report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlDataSet.AddField(System.String,System.String)">
            <summary>
            Exposes a column within the query to other report elements
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlDataSet.DataSourceName">
            <summary>
            Contains the name of the data source for the query.
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlDataSet.CommandText">
            <summary>
            Specifies the query that the report server executes to retrieve data for the report.
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumnTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumnTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRowTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRowTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixCellTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixCellTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGroupingTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGroupingTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGroupingTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGroupingTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixCornerTemplate">
            <summary>
            A template for a table cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixCornerTemplate.Create">
            <summary>
            Creates a new table cell
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.Name">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.Value">
            <summary>
            The value of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.ToolTip">
            <summary>
            The value of the tooltip of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.Style">
            <summary>
            The style of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.ColSpan">
            <summary>
            The number of columns this cell spans
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCell.HyperLink">
            <summary>
            The hyperlink of this cell
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.AddGrouping(System.String)">
            <summary>
            The groupings
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.GroupingExpression">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.Name">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.Value">
            <summary>
            The value of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.ToolTip">
            <summary>
            The value of the tooltip of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.Style">
            <summary>
            The style of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.ColSpan">
            <summary>
            The number of columns this cell spans
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicColumn.HyperLink">
            <summary>
            The hyperlink of this cell
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.AddGrouping(System.String)">
            <summary>
            The groupings
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.GroupingExpression">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.Value">
            <summary>
            The value of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.Name">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.ToolTip">
            <summary>
            The value of the tooltip of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.Style">
            <summary>
            The style of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.ColSpan">
            <summary>
            The number of Rows this cell spans
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixDynamicRow.HyperLink">
            <summary>
            The hyperlink of this cell
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.Name">
            <summary>
            The name of the text box within the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.Value">
            <summary>
            The value of the text box within the matrix corner
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.ToolTip">
            <summary>
            The value of the tooltip of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.Style">
            <summary>
            The style of the table cell
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.ColSpan">
            <summary>
            The number of columns this cell spans
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixCorner.HyperLink">
            <summary>
            The hyperlink of this cell
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.AddCell(System.String,VC3.ComponentModel.Formatter,System.String,System.String)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.AddCell">
            <summary>
            adds a cell to the row
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.AddCell(System.String)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.AddCell(System.String,VC3.ComponentModel.Formatter)">
            <summary>
            adds a cell to the row with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.Hidden">
            <summary>
            The expression that controls when this row is hidden
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixRow.SpanningParent">
            <summary>
            The row that may span across cells in this row
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping.AddDynamicColumn(System.String,VC3.ComponentModel.Formatter,System.String,System.String,System.String)">
            <summary>
            adds a dynamicColumn to the ColumnGrouping with the specified value
            </summary>
            <param name="dynamicColumnValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping.AddDynamicColumn(System.String)">
            <summary>
            adds a cell to the ColumnGrouping
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping.AddDynamicColumn(System.String,System.String)">
            <summary>
            adds a cell to the ColumnGrouping with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping.AddDynamicColumn(System.String,VC3.ComponentModel.Formatter,System.String)">
            <summary>
            adds a cell to the ColumnGrouping with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixColumnGrouping.Hidden">
            <summary>
            The expression that controls when this ColumnGrouping is hidden
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping">
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
            <summary>
            A cell within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlTable"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping.AddDynamicRow(System.String,VC3.ComponentModel.Formatter,System.String,System.String,System.String)">
            <summary>
            adds a dynamicRow to the RowGrouping with the specified value
            </summary>
            <param name="dynamicRowValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping.AddDynamicRow(System.String)">
            <summary>
            adds a cell to the RowGrouping
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping.AddDynamicRow(System.String,System.String)">
            <summary>
            adds a cell to the RowGrouping with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping.AddDynamicRow(System.String,VC3.ComponentModel.Formatter,System.String)">
            <summary>
            adds a cell to the RowGrouping with the specified value
            </summary>
            <param name="cellValue"></param>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.RdlMatrixRowGrouping.Hidden">
            <summary>
            The expression that controls when this RowGrouping is hidden
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.RdlMatrix">
            <summary>
            A matrix within a <see cref="T:VC3.Reporting.SqlServerReportingServices.RdlReport"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrix.GetCorner(System.String)">
            <summary>
            Gets a row from the table
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.RdlMatrix.GetMatrixRow(System.String)">
            <summary>
            Gets a row from the table
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder">
            <summary>
            Summary description for ReportBuilder.
            </summary>
        </member>
        <member name="T:VC3.Reporting.IReportBuilder">
            <summary>
            Generalized report builder interface.
            </summary>
        </member>
        <member name="M:VC3.Reporting.IReportBuilder.GetReport(System.String)">
            <summary>
            Gets a published report at the specified path.
            </summary>
            <param name="path">The path of the report to retrieve</param>
            <returns>The published report</returns>
        </member>
        <member name="M:VC3.Reporting.IReportBuilder.PublishReport(VC3.Reporting.Design.Report,System.String)">
            <summary>
            Builds and publishes the report.
            </summary>
            <returns>The path to publish the report to</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.#cctor">
            <summary>
            Initializes an <see cref="T:System.Xml.XmlNamespaceManager"/> to support xpath queries.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.GetTemplate(VC3.Reporting.Design.Report)">
            <summary>
            Gets the report definition template resource from the reporting assembly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.GetReport(System.String)">
            <summary>
            Gets the published report at the specified path.
            </summary>
            <param name="path">The path the report was published to</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.PublishReport(VC3.Reporting.Design.Report,System.String)">
            <summary>
            Creates a report definition based on the report configuration.
            </summary>
            <param name="report">The report to publish</param>
            <returns>The path to the report</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.BuildReport(VC3.Reporting.Design.Report)">
            <summary>
            Builds a report definition for the current report.
            </summary>
            <returns>The XML report definition</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.BuildDataSource(System.Xml.XmlElement,System.String)">
            <summary>
            Configures the datasource for the report definition.
            </summary>
            <param name="dataSourceEl">The datasource element to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.BuildDataSet(System.Xml.XmlElement,System.String,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Configures the dataset portion of the report definition.
            </summary>
            <param name="dataSetEl">The dataset element to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.BuildDataSetField(System.Xml.XmlElement,System.String)">
            <summary>
            Adds a field to a dataset
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.BuildSorting(VC3.Reporting.SqlServerReportingServices.IRdlSortableElement,VC3.Reporting.Design.ReportOrderColumnList,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Adds sorting definitions for each <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/> or
            <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> in the specified <see cref="T:VC3.Reporting.Design.ReportOrderColumnList"/>
            to the report definition.
            </summary>
            <param name="el">The Sorting element to add the sort definition to</param>
            <param name="columns">The list of columns to sort by</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.GetDataType(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Gets the SQL Server Reporting data type name for the
            specified <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
            <param name="dataType">The data type to resolve</param>
            <returns>The name of the SQL Server data type</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.SetValue(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Sets the text value of a child node based on the xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <param name="value">The text value to set the node to</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.GetElement(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the child element that matches the specified xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <returns>The matching element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.GetNodes(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the child nodes that matches the specified xpath expression.
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with</param>
            <returns>The matching nodes</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.AddElement(System.Xml.XmlElement,System.String)">
            <summary>
            Recursively creates and adds a child element with the specified name.
            </summary>
            <param name="node">The element to add the child element to</param>
            <param name="name">The name of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.AddElement(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Creates and adds a child element with the specified name and value.
            </summary>
            <param name="node">The element to add the child element to</param>
            <param name="name">The name of the element to add</param>
            <param name="value">The value of the element to add</param>
            <returns>The new child element</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder.RemoveElements(System.Xml.XmlNode,System.String)">
            <summary>
            Removes the specified elements from the document
            </summary>
            <param name="node">The root element to evaluate the expression on</param>
            <param name="xpath">The expression to search with. Matching elements will be deleted</param>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.StaticReportBuilder">
            <summary>
            Implementation of <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder"/> that supports
            running static reports.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.StaticReportBuilder.BuildReport(VC3.Reporting.Design.Report)">
            <summary>
            Throws an exception to indicate that static reports cannot be created.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder">
            <summary>
            Implementation of <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder"/> that supports
            building tabular reports.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildReport(VC3.Reporting.Design.Report)">
            <summary>
            Builds the report definition for a tabular report.
            </summary>
            <returns>The XML report definition</returns>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildQuery(VC3.Reporting.Design.Report)">
            <summary>
            Builds the query used in the report
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.FormatReport(VC3.Reporting.SqlServerReportingServices.RdlReport,VC3.Reporting.Design.Report)">
            <summary>
            Applies report-level formatting
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildTable(VC3.Reporting.SqlServerReportingServices.RdlTable,VC3.Reporting.Design.Report,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Configures the table portion of the report definition.
            </summary>
            <param name="table">The table element to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.GetTableColumns(VC3.Reporting.Design.Report)">
            <summary>
            Gets the list of visible columns in the report.
            Override in subclasses to change which columns appear in the table.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildCells(VC3.Reporting.SqlServerReportingServices.RdlTable,VC3.Reporting.Design.ReportColumnList,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Builds the details section of the table
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildCells(VC3.Reporting.SqlServerReportingServices.RdlTableRow,VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.CellBuilder,VC3.Reporting.Design.ReportColumnList,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Automates the process of building a templated report definition row
            for a list of <see cref="T:VC3.Reporting.Design.ReportColumn"/> instances.
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildHeaderCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Adds cells to the report that summarize the data for all select columns.
            </summary>
            <param name="column">The select column to create a header for</param>
            <param name="cell">The cell to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.FormatHeaderCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Applies formatting to a header cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.GetHeaderCellValue(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Gets the value to display in a header cell
            </summary>
            <param name="column">The select column to create a header for</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildDetailCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Adds cells to the report that diplay detail information for all select columns.
            </summary>
            <param name="column">The select column to add details for</param>
            <param name="cell">The cell to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.FormatDetailCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Applies formatting to a detail cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.GetDetailCellValue(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Gets the value to display in a detail cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildFooterCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Adds cells to the report that summarize the data for all select columns.
            </summary>
            <param name="column">The select column to summarize</param>
            <param name="cell">The cell to configure</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.FormatFooterCell(VC3.Reporting.SqlServerReportingServices.RdlTableCell,VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Applies formatting to a summary cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.GetFooterCellValue(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.QueryBuilder)">
            <summary>
            Gets the value to display in a detail cell
            </summary>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.BuildColumns(VC3.Reporting.SqlServerReportingServices.RdlTable,VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Adds table columns to the report for all select columns.
            </summary>
            <param name="columns">The select columns to add table columns for</param>
            <param name="table">The table to add the columns to</param>
        </member>
        <member name="M:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.CalculateTableWidth(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportColumnList)">
            <summary>
            Determines the width of the table in inches
            </summary>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.TabularReportBuilder.CellBuilder">
            <summary>
            Configures a cell for the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <remarks>
            Use in conjunction with BuildCells() to configure a row
            in the report for all select columns.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.GroupedReportBuilder">
            <summary>
            Implementation of <see cref="T:VC3.Reporting.SqlServerReportingServices.SqlReportBuilder"/> that supports
            building grouped reports.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportGroupColumnList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.Add(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Adds a column to the report based on the specified <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>.
            </summary>
            <param name="column">The schema column to add</param>
            <returns>The index of the new column in the list</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.IsAvailableColumn(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            Restricts <see cref="P:VC3.Reporting.Design.ReportColumnList.AvailableColumns"/> to the ones that 
            are <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsGroupColumn"/>
            </summary>
            <param name="column">The column to check</param>
            <returns>True when <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.IsGroupColumn"/> is true</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor">
            <summary>
            Creates an empty list of ReportGroupColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportGroupColumn objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportGroupColumn objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.Add(VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.Contains(VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.IndexOf(VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.Insert(System.Int32,VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.Remove(VC3.Reporting.Design.ReportGroupColumn)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportGroupColumnList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportGroupColumnList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportGroupColumn"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportTypeColumnData">
            <summary>
            <summary>
            Provides access to ReportTypeColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportTypeColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.UpdateRecord(System.String,System.Int32,System.Guid,System.Guid)">
            <summary>
            Updates a record in the ReportTypeColumn table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="reportTypeTable">Value to assign to the ReportTypeTable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.InsertRecord(System.String,System.Int32,System.Guid,System.Guid)">
            <summary>
            Inserts a new record into the ReportTypeColumn table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="schemaColumn">Value to assign to the SchemaColumn field of the record</param>
            <param name="reportTypeTable">Value to assign to the ReportTypeTable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.GetRecords(System.Object[][])">
            <summary>
            Gets records from the ReportTypeColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportTypeColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.DeleteRecord(System.Guid,System.Guid)">
            <summary>
            Deletes a ReportTypeColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.GetRecordsByReportTypeTable(System.Guid[])">
            <summary>
            Gets records from the ReportTypeColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportTypeTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeColumnData.GetRecordsByReportTypeTable(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportTypeColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportTypeTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportTypeColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSelectColumnData">
            <summary>
            <summary>
            Provides access to ReportSelectColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSelectColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.UpdateRecord(System.String,System.Guid,System.Char)">
            <summary>
            Updates a record in the ReportSelectColumn table with the specified values
            </summary>
            <param name="label">Value to assign to the Label field of the record</param>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="schemaSummaryFunction">Value to assign to the SchemaSummaryFunction field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.InsertRecord(System.String,System.Guid,System.Char)">
            <summary>
            Inserts a new record into the ReportSelectColumn table with the specified values
            </summary>
            <param name="label">Value to assign to the Label field of the record</param>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="schemaSummaryFunction">Value to assign to the SchemaSummaryFunction field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSelectColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSelectColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSelectColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSelectColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSelectColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaTableData">
            <summary>
            <summary>
            Provides access to ReportSchemaTable-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaTableData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.UpdateRecord(System.Guid,System.String,System.String,System.String)">
            <summary>
            Updates a record in the ReportSchemaTable table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="tableExpression">Value to assign to the TableExpression field of the record</param>
            <param name="identityExpression">Value to assign to the IdentityExpression field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.InsertRecord(System.String,System.String,System.String)">
            <summary>
            Inserts a new record into the ReportSchemaTable table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="tableExpression">Value to assign to the TableExpression field of the record</param>
            <param name="identityExpression">Value to assign to the IdentityExpression field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaTable table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaTable table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaTableData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSchemaTable record
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaTableData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData">
            <summary>
            <summary>
            Provides access to ReportSchemaJoinMultiplicity-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.UpdateRecord(System.Char,System.String,System.Int32,System.Int32)">
            <summary>
            Updates a record in the ReportSchemaJoinMultiplicity table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="lowerBound">Value to assign to the LowerBound field of the record</param>
            <param name="upperBound">Value to assign to the UpperBound field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.InsertRecord(System.Char,System.String,System.Int32,System.Int32)">
            <summary>
            Inserts a new record into the ReportSchemaJoinMultiplicity table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="lowerBound">Value to assign to the LowerBound field of the record</param>
            <param name="upperBound">Value to assign to the UpperBound field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportSchemaJoinMultiplicity table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaJoinMultiplicity table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportSchemaJoinMultiplicity record
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaJoinMultiplicityData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaColumnData">
            <summary>
            <summary>
            Provides access to ReportSchemaColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.GetAllowedValues(System.String)">
            <summary>
            Gets the allowed values based on the allowed values expression.
            </summary>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.UpdateRecord(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Decimal,System.Char,System.Guid)">
            <summary>
            Updates a record in the ReportSchemaColumn table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="displayExpression">Value to assign to the DisplayExpression field of the record</param>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="linkExpression">Value to assign to the LinkExpression field of the record</param>
            <param name="linkFormat">Value to assign to the LinkFormat field of the record</param>
            <param name="isSelectColumn">Value to assign to the IsSelectColumn field of the record</param>
            <param name="isFilterColumn">Value to assign to the IsFilterColumn field of the record</param>
            <param name="isParameterColumn">Value to assign to the IsParameterColumn field of the record</param>
            <param name="isGroupColumn">Value to assign to the IsGroupColumn field of the record</param>
            <param name="isOrderColumn">Value to assign to the IsOrderColumn field of the record</param>
            <param name="isAggregated">Value to assign to the IsAggregated field of the record</param>
            <param name="allowedValuesExpression">Value to assign to the AllowedValuesExpression field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="width">Value to assign to the Width field of the record</param>
            <param name="schemaDataType">Value to assign to the SchemaDataType field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.InsertRecord(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Decimal,System.Char,System.Guid)">
            <summary>
            Inserts a new record into the ReportSchemaColumn table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="displayExpression">Value to assign to the DisplayExpression field of the record</param>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="linkExpression">Value to assign to the LinkExpression field of the record</param>
            <param name="linkFormat">Value to assign to the LinkFormat field of the record</param>
            <param name="isSelectColumn">Value to assign to the IsSelectColumn field of the record</param>
            <param name="isFilterColumn">Value to assign to the IsFilterColumn field of the record</param>
            <param name="isParameterColumn">Value to assign to the IsParameterColumn field of the record</param>
            <param name="isGroupColumn">Value to assign to the IsGroupColumn field of the record</param>
            <param name="isOrderColumn">Value to assign to the IsOrderColumn field of the record</param>
            <param name="isAggregated">Value to assign to the IsAggregated field of the record</param>
            <param name="allowedValuesExpression">Value to assign to the AllowedValuesExpression field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="width">Value to assign to the Width field of the record</param>
            <param name="schemaDataType">Value to assign to the SchemaDataType field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaColumn table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportSchemaColumn record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.GetRecordsBySchemaTable(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaColumnData.GetRecordsBySchemaTable(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportSchemaTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportFilterValueData">
            <summary>
            <summary>
            Provides access to ReportFilterValue-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportFilterValueData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.UpdateRecord(System.Guid,System.String,System.Guid,System.Boolean)">
            <summary>
            Updates a record in the ReportFilterValue table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="filterColumn">Value to assign to the FilterColumn field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.InsertRecord(System.String,System.Guid,System.Boolean)">
            <summary>
            Inserts a new record into the ReportFilterValue table with the specified values
            </summary>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="filterColumn">Value to assign to the FilterColumn field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportFilterValue table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportFilterValue table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportFilterValue record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.GetRecordsByFilterColumn(System.Guid[])">
            <summary>
            Gets records from the ReportFilterValue table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportFilterColumn's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportFilterValueData.GetRecordsByFilterColumn(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportFilterValue table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportFilterColumn's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportFilterValueData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportCriteria.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.Repeater"/>
            to display parameter value editing controls.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportCriteria.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Reporting.WebUI.ReportCriteria.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportCriteria.DataBind">
            <summary>
            Only <see cref="M:VC3.Reporting.WebUI.ReportCriteria.DataBind"/> when the criteria editor is visible.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportCriteria.CreateChildControls">
            <summary>
            Adds <see cref="T:VC3.Web.UI.Field"/> controls for each parameter of the
            report being run.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportCriteria.repeater_ItemCreated(System.Object,System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            Creates and adds a <see cref="T:VC3.Web.UI.Field"/> control to support
            editing parameter values.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportCriteria.Source">
            <summary>
            The property name or source path to data for the report instance.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportCriteria.Parameters">
            <summary>
            Gets the <see cref="T:VC3.Reporting.ReportParameterList"/> currently being edited.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportCriteria.FieldWidth">
            <summary>
            The width of the criteria fields
            </summary>
        </member>
        <member name="E:VC3.Reporting.WebUI.ReportCriteria.Changed">
            <summary>
            Raised when dependent parameter in report criteria changed.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaTableParameterList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaTableParameter objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaTableParameter objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaTableParameter objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaTableParameter objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaTableParameter objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaTableParameter objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.Add(VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.Contains(VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.IndexOf(VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.Remove(VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableParameterList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameterList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameterList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaTableParameter"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableParameterList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportParameterColumn">
            <summary>
            ReportParameterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.#ctor">
            <summary>
            A new ReportParameterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn,VC3.Reporting.Design.ReportColumnType)">
            <summary>
            A new ReportParameterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportParameterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportParameterColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportParameterColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportParameterColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportParameterColumn.Operator">
            <summary>
            Gets or sets the Operator.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportParameterColumn.Nullable">
            <summary>
            Gets or sets Nullable
            </summary>
            <remarks>
            This property only allows values for this parameter to be null, not necessarily allow nullable
            values to be assigned.  For parameters with an AllowedValuesExpression, "null" will have to be
            one of the allowed values.
            </remarks>
        </member>
        <member name="P:VC3.Reporting.Design.ReportParameterColumn.AllowableOperators">
            <summary>
            Gets the set of allowable summary functions that may be used
            to aggregate the current column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportParameterColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnGroupColumn">
            <summary>
            ReportColumnGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumn.#ctor">
            <summary>
            A new ReportColumnGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportColumnGroupColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportColumnGroupColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnGroupColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnGroupColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnGroupColumn.Groupings">
            <summary>
            Gets the list of possible groups
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnGrouping">
            <summary>
            Represents a split within a split column
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnGrouping.Column">
            <summary>
            The column this grouping applies to
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnGrouping.ValueExpression">
            <summary>
            Gets the value used to identify values that belong in this bucket
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnGrouping.Label">
            <summary>
            The label used to identify this bucket
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnGroupingList">
            <summary>
            A list of <see cref="T:VC3.Reporting.Design.ReportColumnGrouping"/> objects
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.ReportColumnEditor">
            <summary>
            Allows users to add, remove, and customize settings for lists
            of <see cref="T:VC3.Reporting.Design.ReportColumn"/> subclasses associated with a <see cref="T:VC3.Reporting.Design.Report"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.SourceManager"/> and initializes a
            <see cref="T:VC3.Web.UI.SourceManager"/> to source source providers and consumers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.OnInit(System.EventArgs)">
            <summary>
            Automatically adds appropriate <see cref="T:System.Web.UI.WebControls.DataGridColumn"/> subclasses to
            the grid based on the type of <see cref="T:VC3.Reporting.Design.ReportColumnList"/> being edited.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.InitializeColumns">
            <summary>
            Creates the appropriate columns necessary to edit data for
            the associated <see cref="T:VC3.Reporting.Design.ReportColumnList"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)">
            <summary>
            Adds a <see cref="T:System.Web.UI.WebControls.DropDownList"/> control to the grid pager row
            to allow users to add report columns to an empty grid.
            </summary>
            <param name="item"></param>
            <param name="columnSpan"></param>
            <param name="pagedDataSource"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.DataBind">
            <summary>
            Shows or hides the header, footer, and pager rows based
            on whether the edit grid has report columns, before
            databind is called.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportColumnEditor.UpdateReport">
            <summary>
            Updates all information for the current report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportColumnEditor.ReportColumns">
            <summary>
            Gets or sets the list of <see cref="T:VC3.Reporting.Design.ReportColumn"/> instances
            being edited by the control.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.AddColumnTemplate">
            <summary>
            Allows users to select report columns to add to the edit grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.AddColumnTemplate.#ctor(VC3.Reporting.WebUI.ReportColumnEditor)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.AddColumnTemplate"/> and binds it
            to the current <see cref="T:VC3.Reporting.WebUI.ReportColumnEditor"/>.
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.AddColumnTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Creates a <see cref="T:System.Web.UI.WebControls.DropDownList"/> of available columns and
            adds it to the target container control.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.AddColumnTemplate.DatabindAvailableColumns">
            <summary>
            Adds the columns of this table to the availableColumns dropdown
            in a hierarchial structure.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.AddColumnTemplate.AddAvailableColumn(System.Int32,System.String,System.String)">
            <summary>
            Adds a column to the list of available columns with the appropriate formatting.
            </summary>
            <param name="depth"></param>
            <param name="text"></param>
            <param name="value"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.AddColumnTemplate.availableColumns_ServerChange(System.Object,System.EventArgs)">
            <summary>
            Adds a new column to the report based on the selected schema column.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.BaseReportColumn">
            <summary>
            Base class for report editor datagrid columns that simplify the
            process of creating editor controls for report columns.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.BaseReportColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.BaseReportColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.BaseReportColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)">
            <summary>
            Binds to the init event of the cell
            to allow for creation of child controls after the cell has been
            added to the control hierarchy.
            </summary>
            <param name="cell"></param>
            <param name="columnIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.BaseReportColumn.container_Init(System.Object,System.EventArgs)">
            <summary>
            Created the parameter editor controls when the repeater
            item container control is initialized.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.DeleteColumn">
            <summary>
            Allows users to delete report columns in the column editor grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.DeleteColumn.Initialize">
            <summary>
            Initializes the delete button and subscribes to the
            <see cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand"/> event.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.DeleteColumn.Owner_ItemCommand(System.Object,System.Web.UI.WebControls.DataGridCommandEventArgs)">
            <summary>
            Deletes the selected column from the report.
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.MoveUpDownColumn">
            <summary>
            Allows users to delete report columns in the column editor grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.MoveUpDownColumn.Initialize">
            <summary>
            Initializes the column formatting, and sets the template to use
            to render the move up/down buttons.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.MoveUpDownColumn.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Subscribes to the <see cref="E:System.Web.UI.Control.Init"/> event to allow
            appropriate editor controls to be added to the grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.MoveUpDownColumn.CreateUpDownButtons(System.Object,System.EventArgs)">
            <summary>
            Creates the move up/down buttons and subcribes to the 
            command event to capture button clicks.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.MoveUpDownColumn.move_Command(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Handles move up/down clicks to move columns up or down.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.MoveUpDownColumn.MoveColumn(System.Int32,System.Int32)">
            <summary>
            Moves a column up or down in the grid based on the specified direction.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.NameColumn">
            <summary>
            Represents the name of a report column in the column editor grid,
            and allows users to add new columns by selecting a schema column.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.NameColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.NameColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.NameColumn.Initialize">
            <summary>
            Creates an <see cref="T:VC3.Reporting.WebUI.AddColumnTemplate"/> instance to use as
            the footer template to support adding columns to the edit grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.NameColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)">
            <summary>
            Hooks up the OnDataBindItem for binding columns, and creates 
            a <see cref="T:System.Web.UI.WebControls.DropDownList"/> to allow new columns to be added.
            </summary>
            <param name="cell"></param>
            <param name="columnIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.NameColumn.OnDataBindItem(System.Object,System.EventArgs)">
            <summary>
            Sets the text of the cell being bound to the name of the corresponding column.
            </summary>
            <param name="sender">The <see cref="T:System.Web.UI.WebControls.TableCell"/> being bound</param>
            <param name="e">Databinding event arguments</param>
        </member>
        <member name="T:VC3.Reporting.WebUI.LabelColumn">
            <summary>
            Allows users to edit the label that will be used as the column header
            when the report is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.LabelColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.LabelColumn"/>.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.SummaryFunctionColumn">
            <summary>
            Allows users to select the summary function that will be used to aggregate
            the column when the report is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.SummaryFunctionColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.SummaryFunctionColumn"/>.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.OperatorColumn">
            <summary>
            Allows users to select the operator that will be used to filter
            the column when the report is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.OperatorColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.OperatorColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.OperatorColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)">
            <summary>
            Adds a <see cref="T:VC3.Web.UI.Field"/> control to allow users
            to edit the operator of a <see cref="T:VC3.Reporting.Design.ReportParameterColumn"/> or
            <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/>.
            </summary>
            <param name="cell"></param>
            <param name="columnIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.SortDirectionColumn">
            <summary>
            Allows users to select the sort direction for
            the column when the report is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.SortDirectionColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.SortDirectionColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.SortDirectionColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)">
            <summary>
            Adds a <see cref="T:VC3.Web.UI.Field"/> control to allow users
            to edit the sort direction of a <see cref="T:VC3.Reporting.Design.ReportOrderColumn"/>.
            </summary>
            <param name="cell"></param>
            <param name="columnIndex"></param>
            <param name="itemType"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.FilterValueColumn">
            <summary>
            Allows users to specify one or more values for a filter
            that will be used on the column when the report is rendered.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.FilterValueColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueColumn.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Subscribes to the <see cref="E:System.Web.UI.Control.Init"/> event to allow
            appropriate editor controls to be added to the grid.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueColumn.container_Init(System.Object,System.EventArgs)">
            <summary>
            Adds the appropriate value editor control to the edit grid.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.ITemplateFiterEditor">
            <summary>
            Provides property methods to get/set the templated
            control contained within a report filter column
            editor
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ITemplateFiterEditor.ItemTemplate">
            <summary>
            Gets or sets the ItemTemplate for
            the underlying templated control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ITemplateFiterEditor.AlternatingItemTemplate">
            <summary>
            Gets or sets the AlternatingItemTemplate for
            the underlying templated control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ITemplateFiterEditor.SeparatorTemplate">
            <summary>
            Gets or sets the SeparatorTemplate for
            the underlying templated control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ITemplateFiterEditor.HeaderTemplate">
            <summary>
            Gets or sets the HeaderTemplate for
            the underlying templated control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ITemplateFiterEditor.FooterTemplate">
            <summary>
            Gets or sets the FooterTemplate for
            the underlying templated control
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.FilterValueEditor">
            <summary>
            Allows users to edit single and multi-valued filters for
            intrinsic data types.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.#ctor(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.FilterValueEditor"/> bound to the
            specified <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/>.
            </summary>
            <param name="column">The column being edited</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.OnInit(System.EventArgs)">
            <summary>
            Ensures that the editor controls are created when the column
            is initialized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.CreateChildControls">
            <summary>
            Creates controls suitable for editing the filter value or
            values for the column based on the <see cref="T:VC3.Reporting.WebUI.FilterValueEditor.EditorMode"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.GetMode">
            <summary>
            Determines the type of controls to render for filter value
            editing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.CreateEditorControls(System.Web.UI.Control)">
            <summary>
            Control instantiation delegate that creates the editor controls
            for one filter value in a multi-value editor.
            </summary>
            <param name="container">The container to add the editor controls to</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.CreateAddButton(System.Web.UI.Control)">
            <summary>
            Control instantiation delegate that creates an Add button
            that allows users to add values to the filter.
            </summary>
            <param name="container">The container to add the button to</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.FilterValueEditor_ItemCommand(System.Object,System.Web.UI.WebControls.RepeaterCommandEventArgs)">
            <summary>
            Handles Add and Delete clicks to add and remove values
            from a multi-valued filter.
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterValueEditor.DataBind">
            <summary>
            Overriden to allow the editor to change controls when the
            <see cref="T:VC3.Reporting.WebUI.FilterValueEditor.EditorMode"/> has changed since the editor
            was initialized.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterValueEditor.Column">
            <summary>
            Gets the <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/>
            for this control
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.FilterOptionEditor">
            <summary>
            Allows users to select one or more enumeration values
            to filter a column by.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionEditor.OnInit(System.EventArgs)">
            <summary>
            Initializes the repeater to enable editing of option values.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionEditor.CreateOptionControls(System.Web.UI.Control)">
            <summary>
            Control instantiation delegate that creates the editor controls
            for one filter value in a multi-value editor.
            </summary>
            <param name="container">The container to add the editor controls to</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionEditor.CreateAddButton(System.Web.UI.Control)">
            <summary>
            Control instantiation delegate that creates an Add button
            that allows users to add values to the filter.
            </summary>
            <param name="container">The container to add the button to</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionEditor.FilterOptionEditor_ItemCommand(System.Object,System.Web.UI.WebControls.RepeaterCommandEventArgs)">
            <summary>
            Handles Delete clicks to remove options from the filter.
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionEditor.add_Submit(System.Object,VC3.Web.UI.DialogSubmitEventArgs)">
            <summary>
            Handles submission of the AddOptions dialog to add
            options to the filter.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:VC3.Reporting.WebUI.FilterOptionSelector">
            <summary>
            Allows users to select filter options values in a dialog
            to add them as options to a filter.
            </summary>
            <remarks>
            This control must be hosted in a dialog page called AddOptions.aspx
            in order for the selector to be used by the <see cref="T:VC3.Reporting.WebUI.FilterOptionEditor"/>.
            The dialog must call <see cref="M:VC3.Reporting.WebUI.FilterOptionSelector.DataBind"/> when first loaded and
            must include a <see cref="T:VC3.Web.UI.Form"/> tag.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created when the page initializes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.CreateChildControls">
            <summary>
            Creates and adds the controls required to selection
            filter option values.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.DataBind">
            <summary>
            Populates the group and option controls with
            allowed groups and options based on current selections.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.GetRecentGroupSelection(System.String)">
            <summary>
            Gets a recent selection for the specified group.
            </summary>
            <param name="group">The name of the allowed value group</param>
            <returns>The recently selected value</returns>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.SetRecentGroupSelection(System.String,System.String)">
            <summary>
            Sets a recent selection for the specified group.
            </summary>
            <param name="group">The name of the allowed value group</param>
            <param name="value">The selected allowed value</param>
            <returns>The recently selected value</returns>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.UrlFor(VC3.Reporting.Design.ReportSchemaColumn)">
            <summary>
            Gets the url to use to open the dialog.
            </summary>
            <param name="column">The column to add options for</param>
            <returns>The url of the dialog</returns>
        </member>
        <member name="M:VC3.Reporting.WebUI.FilterOptionSelector.add_Click(System.Object,System.EventArgs)">
            <summary>
            Closes the dialog and returns the list of selected options.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterOptionSelector.SelectedItems">
            <summary>
            Gets a <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValueList"/>
            representing the items selected within this control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterOptionSelector.Column">
            <summary>
            Gets or sets the <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> the filter options are for.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterOptionSelector.ShowName">
            <summary>
            Gets or set whether this control displays the name of the <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterOptionSelector.ShowButtons">
            <summary>
            Gets or set whether this control displays the buttons 
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.FilterOptionSelector.AutoStyle">
            <summary>
            Gets or set whether this control will output
            style information such as font size, font family
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.ParameterColumn">
            <summary>
            Allows users to specify values for columns from tables that
            are parameterized.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ParameterColumn.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.ParameterColumn"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ParameterColumn.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.WebUI.ParameterColumn"/>.
            </summary>
            <param name="parameterName">The name of the parameter to edit</param>
        </member>
        <member name="M:VC3.Reporting.WebUI.ParameterColumn.CreateEditorControls(VC3.Reporting.Design.ReportColumn,System.Web.UI.WebControls.TableCell)">
            <summary>
            Creates the editor control to allow users to specify a parameter value.
            </summary>
            <param name="column">The report column the parameter is for</param>
            <param name="cell">The table cell to add the editor control to</param>
        </member>
        <member name="P:VC3.Reporting.WebUI.Settings.Current">
            <summary>
            Gets the current web service settings
            </summary>
        </member>
        <member name="T:VC3.Reporting.ReportCost">
            <summary>
            Information about the time it takes to render a report
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportCost.MaxSeconds(System.Int32,System.Double)">
            <summary>
            Gets the maximum time the report will take to run.
            </summary>
            <param name="runtimes">Number of times the report will be run</param>
            <param name="probability">A probability of .8 means, "what's the max time to render the report 80% of the time?".
            (Assumes a normal distribution of times)</param>
            <returns>
            Estimated max time for running the report the number of times specified.
            </returns>
        </member>
        <member name="T:VC3.Reporting.ReportResourceList">
            <summary>
            A list of <see cref="T:VC3.Reporting.ReportResource"/> objects
            </summary>
        </member>
        <member name="T:VC3.Reporting.ReportParameterList">
            <summary>
            Specifies a list of <see cref="T:VC3.Reporting.IReportParameter"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.#ctor(VC3.Reporting.IReport)">
            <summary>
            Creates an empty list of IReportParameter objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.Add(VC3.Reporting.IReportParameter)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.IReportParameter"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.Contains(VC3.Reporting.IReportParameter)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.IReportParameter"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.IndexOf(VC3.Reporting.IReportParameter)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.IReportParameter"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.Insert(System.Int32,VC3.Reporting.IReportParameter)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.IReportParameter"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.Remove(VC3.Reporting.IReportParameter)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.IReportParameter"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.ReportParameterList.IsDependency(VC3.Reporting.IReportParameter)">
            <summary>
            Returns true if any items in the list are dependent upon a particular <see cref="T:VC3.Reporting.IReportParameter"/>
            </summary>
            <param name="item">The item that may or may not be a dependency</param>
            <returns></returns>
        </member>
        <member name="P:VC3.Reporting.ReportParameterList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.IReportParameter"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to get from the list</param>
        </member>
        <member name="P:VC3.Reporting.ReportParameterList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.IReportParameter"/> from the list based on its <see cref="P:VC3.Reporting.IReportParameter.Name"/> property
            </summary>
            <param name="name">Name of the object to retrieve</param>
        </member>
        <member name="T:VC3.Reporting.ReportParameterPropertyDescriptor">
            <summary>
            Represents a report parameter property value.
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportParameterPropertyDescriptor.GetAttributes(VC3.Reporting.IReportParameter)">
            <summary>
            Gets the set of precondition attributes for the report parameter.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the value of the parameter based on the parameter type.
            </summary>
            <param name="obj">The report parameter to retrieve the value for</param>
            <returns>The value of the parameter</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the parameter based on the parameter type.
            </summary>
            <param name="obj">The report parameter to set the value for</param>
            <param name="value">The new value of the parameter</param>
        </member>
        <member name="P:VC3.Reporting.ReportParameterPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the parameter value.
            </summary>
        </member>
        <member name="T:VC3.Reporting.ReportParameterValue">
            <summary>
            Used to specify <see cref="P:VC3.Reporting.IReportParameter.Values"/>.
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValue.#ctor(System.Object)">
            <summary>
            Creates a new parameter value.
            </summary>
            <param name="value">The data representation of the parameter value</param>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValue.#ctor(System.String,System.Object)">
            <summary>
            Creates a new parameter value.
            </summary>
            <param name="name">The display name of the parameter value</param>
            <param name="value">The data representation of the parameter value</param>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValue.ToString">
            <summary>
            Returns the <see cref="T:System.String"/> representation of the
            parameter value.
            </summary>
            <returns>The <see cref="P:VC3.Reporting.ReportParameterValue.Name"/> of the parameter value</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValue.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:VC3.Reporting.ReportParameterValue"/> instance
            represents the same underlying parameter value.
            </summary>
            <param name="obj">The parameter to compare to</param>
            <returns>True if the paramaters represent the same instrinsic value, otherwise false</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValue.GetHashCode">
            <summary>
            Gets the hash code for the underlying intrinsic value.
            </summary>
            <returns>The hash code value</returns>
        </member>
        <member name="P:VC3.Reporting.ReportParameterValue.Name">
            <summary>
            Gets the label of the parameter value that will be
            used to run the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.ReportParameterValue.Value">
            <summary>
            Gets the value of the parameter value that will be
            used to run the report.
            </summary>
        </member>
        <member name="T:VC3.Reporting.ReportParameterValueList">
            <summary>
            A list of <see cref="T:VC3.Reporting.ReportParameterValue"/> objects
            </summary>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Add(VC3.Reporting.ReportParameterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.ReportParameterValue"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Add(System.Object)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.ReportParameterValue"/> to the list
            </summary>
            <param name="value">The value of the parameter value to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Add(System.String,System.Object)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.ReportParameterValue"/> to the list
            </summary>
            <param name="name">The name of the parameter value to add to the list</param>
            <param name="value">The value of the parameter value to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Contains(VC3.Reporting.ReportParameterValue)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.ReportParameterValue"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.IndexOf(VC3.Reporting.ReportParameterValue)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.ReportParameterValue"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Insert(System.Int32,VC3.Reporting.ReportParameterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.ReportParameterValue"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.ReportParameterValueList.Remove(VC3.Reporting.ReportParameterValue)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.ReportParameterValue"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="P:VC3.Reporting.ReportParameterValueList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.ReportParameterValue"/> from the list based on position in the list.
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.ReportParameterValueList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.ReportParameterValue"/> from the list based on its <see cref="P:VC3.Reporting.ReportParameterValue.Name"/> property.
            </summary>
            <param name="name">Name of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.ReportParameterValueList.Item(System.Object)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.ReportParameterValue"/> from the list based on its <see cref="P:VC3.Reporting.ReportParameterValue.Value"/> property.
            </summary>
            <param name="value">Value of the object to retrieve</param>
        </member>
        <member name="T:VC3.Reporting.OutputFormatList">
            <summary>
            A list of <see cref="T:VC3.Reporting.OutputFormat"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.#ctor">
            <summary>
            Creates an empty list of OutputFormat objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.Add(VC3.Reporting.OutputFormat)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.OutputFormat"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.Contains(VC3.Reporting.OutputFormat)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.OutputFormat"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.IndexOf(VC3.Reporting.OutputFormat)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.OutputFormat"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.Insert(System.Int32,VC3.Reporting.OutputFormat)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.OutputFormat"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.Remove(VC3.Reporting.OutputFormat)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.OutputFormat"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.OutputFormatList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.OutputFormat"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.OutputFormatList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.OutputFormat"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.OutputFormatList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.OutputFormat"/> from the list based on its <see cref="P:VC3.Reporting.OutputFormat.Name"/> property
            </summary>
            <param name="name">Name of the object to retrieve</param>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTypeTable">
            <summary>
            ReportTypeTable
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.JoinExpressionSql(System.String,System.String)">
            <summary>
            Gets the JoinExpression SQL based on the supplied parameter values.
            </summary>
            <param name="leftTableAlias">The alias to use for the left table in the expression. Substituted with: {left}</param>
            <param name="rightTableAlias">The alias to use for the right table in the expression. Substituted with: {right}</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.#ctor">
            <summary>
            Creates a new ReportTypeTable.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportTypeTable that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportTypeTable"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportTypeTable objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeTable.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.ColumnPrefix">
            <summary>
            Gets or sets the ColumnPrefix.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.JoinExpression">
            <summary>
            Gets or sets the JoinExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.SchemaTable">
            <summary>
            Gets or sets the SchemaTable.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.ReportType">
            <summary>
            Gets or sets the ReportType.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.JoinTable">
            <summary>
            Gets or sets the JoinTable.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.ChildTables">
            <summary>
            Gets the ChildTables.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.Columns">
            <summary>
            Gets the Columns.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.JoinMultiplicity">
            <summary>
            Gets or sets the JoinMultiplicity.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeTable.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaColumn">
            <summary>
            ReportSchemaColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.CanUserView(VC3.Security.Authentication.IUser)">
            <summary>
            Indicates if the specified user has permission to
            view this <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.GetAllowedCachedValues">
            <summary>
            Implementation of the CachedObjectLoader delegate
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.GetAllowedValues(VC3.Reporting.Design.Report)">
            <summary>
            Executes a query to fetch the set of allowed values
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.EnsureAllowedValues">
            <summary>
            Ensures that the <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValues"/> and <see cref="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValueGroups"/>
            properties are initialized if the column has allowed values.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.#ctor">
            <summary>
            Creates a new ReportSchemaColumn.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportSchemaColumn that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.CanView">
            <summary>
            Indicates if the current user has permission to view
            this <see cref="T:VC3.Reporting.Design.ReportSchemaColumn"/>
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.HasAllowedValues">
            <summary>
            Indicates whether the column has a specified set of
            allowed values.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValues">
            <summary>
            Gets a list of all <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> instances
            that may be assigned as values for the column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValueGroups">
            <summary>
            Gets the root list of <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValueGroup"/> instances
            that group together child <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValueGroup"/> and
            <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> instances.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.Width">
            <summary>
            Gets or sets the Width.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.DisplayExpression">
            <summary>
            Gets or sets the DisplayExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.OrderExpression">
            <summary>
            Gets or sets the expression to sort on.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.LinkExpression">
            <summary>
            Gets or sets the LinkExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.NonQueriedAllowedValues">
            <summary>
            Gets the NonQueriedAllowedValues.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.ValueExpression">
            <summary>
            Gets or sets the ValueExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValuesExpression">
            <summary>
            Gets or sets the AllowedValuesExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.AllowedValuesExpressionIsDynamic">
            <summary>
            Indicates if the allowed values are dynamic.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsSelectColumn">
            <summary>
            Gets or sets the IsSelectColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsFilterColumn">
            <summary>
            Gets or sets the IsFilterColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsParameterColumn">
            <summary>
            Gets or sets the IsParameterColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsGroupColumn">
            <summary>
            Gets or sets the IsGroupColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsOrderColumn">
            <summary>
            Gets or sets the IsOrderColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.LinkFormat">
            <summary>
            Gets or sets the LinkFormat.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.IsAggregated">
            <summary>
            Gets or sets the IsAggregated.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.DataType">
            <summary>
            Gets or sets the DataType.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.Table">
            <summary>
            Gets or sets the Table.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaAllowedValue">
            <summary>
            Represents a value that may be selected as an option
            when filtering a column.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValue.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/>.
            </summary>
            <param name="id">The id of the allowed value</param>
            <param name="name">The display name of the allowed value</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValue.ToString">
            <summary>
            Gets the string representation of the allowed value.
            </summary>
            <returns>The <see cref="P:VC3.Reporting.Design.ReportSchemaAllowedValue.Name"/> of the <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/></returns>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValue.Id">
            <summary>
            Gets the id of the allowed value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValue.Name">
            <summary>
            Gets the display name of the allowed value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValue.IsDynamic">
            <summary>
            Gets the value that determines whether or not this allowed value is dynamic
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaAllowedValueGroup">
            <summary>
            Represents a group of values that may be selected as
            options when filtering a column.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueGroup.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValueGroup"/>.
            </summary>
            <param name="name">The name of the value group</param>
            <param name="groupName">The name of the child group the instance will aggregate</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValueGroup.Values">
            <summary>
            Gets a list of all <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> instances
            represented by the group.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaAllowedValueList">
            <summary>
            A list of <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.#ctor(System.String)">
            <summary>
            Creates an empty list of ReportSchemaAllowedValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.Add(VC3.Reporting.Design.ReportSchemaAllowedValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> to the list.
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.Contains(VC3.Reporting.Design.ReportSchemaAllowedValue)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.IndexOf(VC3.Reporting.Design.ReportSchemaAllowedValue)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaAllowedValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.Remove(VC3.Reporting.Design.ReportSchemaAllowedValue)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaAllowedValueList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValueList.GroupName">
            <summary>
            Gets the name of the group of allowed values.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValueList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> from the list based
            on the position in the list.
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaAllowedValueList.Item(System.String)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaAllowedValue"/> from the list based
            on its <see cref="P:VC3.Reporting.Design.ReportSchemaAllowedValue.Id"/> property.
            </summary>
            <param name="id">Id of the object to retrieve</param>
        </member>
        <member name="T:VC3.Reporting.Design.ReportContext">
            <summary>
            Provides contextual data to a report for
            the purpose of calculating dynamic allowed values.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.SqlContextEvaluator.Create(System.Object)">
            <summary>
            Creates a MatchEvaluator that will replaces regular expression matches
            based of the results of expressions evaulated against the object specified.
            </summary>
            <param name="source">Object the matches will be evaluated against</param>
        </member>
        <member name="M:VC3.Reporting.Design.SqlContextEvaluator.Create(System.Object,System.String)">
            <summary>
            Creates a MatchEvaluator that will replaces regular expression matches
            based of the results of expressions evaulated against the object specified.
            </summary>
            <param name="source">Object the matches will be evaluated against</param>
            <param name="rootExpression">Expression that resolves to the source object.</param>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnParameterValue">
            <summary>
            ReportColumnParameterValue
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.#ctor">
            <summary>
            Creates a new ReportColumnParameterValue.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.#ctor(VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Creates a new ReportColumnParameterValue that is not 
            bound to a <see cref="T:VC3.Reporting.Design.ReportColumn"/>
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.#ctor(VC3.Reporting.Design.ReportColumn,VC3.Reporting.Design.ReportSchemaTableParameter)">
            <summary>
            Creates a new ReportColumnParameterValue.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportColumnParameterValue that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnParameterValue"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportColumnParameterValue objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnParameterValue.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.ValueExpression">
            <summary>
            Gets or sets the ValueExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.IsRequired">
            <summary>
            Indicates whether the parameter value is required.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.DisplayExpression">
            <summary>
            Gets the display representation of the underlying value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.Value">
            <summary>
            Gets the strongly-typed value of the parameter value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.Column">
            <summary>
            Gets or sets the Column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.Parameter">
            <summary>
            Gets or sets the Parameter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnParameterValue.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportSchemaDataTypeData">
            <summary>
            <summary>
            Provides access to ReportSchemaDataType-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.UpdateRecord(System.Char,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal)">
            <summary>
            Updates a record in the ReportSchemaDataType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="valueEditor">Value to assign to the ValueEditor field of the record</param>
            <param name="optionEditor">Value to assign to the OptionEditor field of the record</param>
            <param name="typeName">Value to assign to the TypeName field of the record</param>
            <param name="format">Value to assign to the Format field of the record</param>
            <param name="sqlExpression">Value to assign to the SqlExpression field of the record</param>
            <param name="defaultColumnWidth">Value to assign to the DefaultColumnWidth field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.InsertRecord(System.Char,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal)">
            <summary>
            Inserts a new record into the ReportSchemaDataType table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="valueEditor">Value to assign to the ValueEditor field of the record</param>
            <param name="optionEditor">Value to assign to the OptionEditor field of the record</param>
            <param name="typeName">Value to assign to the TypeName field of the record</param>
            <param name="format">Value to assign to the Format field of the record</param>
            <param name="sqlExpression">Value to assign to the SqlExpression field of the record</param>
            <param name="defaultColumnWidth">Value to assign to the DefaultColumnWidth field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.GetRecords(System.String[])">
            <summary>
            Gets records from the ReportSchemaDataType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaDataType table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.DeleteRecord(System.Char)">
            <summary>
            Deletes a ReportSchemaDataType record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.GetRecordsForReportSchemaDataTypeOperatorAssociation(System.Guid[])">
            <summary>
            Gets records from the ReportSchemaDataType table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaOperator's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.GetRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportSchemaDataType table for the specified association
            </summary>
            <param name="ids">Ids of the ReportSchemaOperator's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.InsertRecordsForReportSchemaDataTypeOperatorAssociation(System.Guid,System.String[])">
            <summary>
            Insert records in the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaOperator</param>
            <param name="ids">The ids of the ReportSchemaDataType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.InsertRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Insert records in the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaOperator</param>
            <param name="ids">The ids of the ReportSchemaDataType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.DeleteRecordsForReportSchemaDataTypeOperatorAssociation(System.Guid,System.String[])">
            <summary>
            Deletes records from the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="schemaOperator">The id of the associated ReportSchemaOperator</param>
            <param name="ids">The ids of the ReportSchemaDataType's to insert</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.DeleteRecordsForReportSchemaDataTypeOperatorAssociation(VC3.ComponentModel.BusinessObject.Identifier,VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Deletes records from the ReportSchemaDataTypeOperator table for the specified ids
            </summary>
            <param name="id">The id of the associated ReportSchemaOperator</param>
            <param name="ids">The ids of the ReportSchemaDataType's to insert</param>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportSchemaDataTypeData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.SqlServerReportingServices.ProxyExe">
            <summary>
            Console application
            </summary>
            Arguments should be provided on stdin.  Each argument should appear on a seperate line.
            Valid arguments are as follows:
            	-u		Valid url/path to the report
            	-f		Output format serialized as XML
            	-p		Report parameters (name/value pairs, no limit on number of parameters)
            	-U		Username
            	-P		Password
            	-D		Domain
            	-x		Url
            	-v		Web service version
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ProxyExe.Path">
            <summary>
            Path to the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.SqlServerReportingServices.ProxyExe.Format">
            <summary>
            Device information
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaTableList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaTable objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaTable objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaTable objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.Add(VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.Contains(VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.IndexOf(VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.Remove(VC3.Reporting.Design.ReportSchemaTable)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaTableList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaTable"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaTableList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaDataTypeList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor">
            <summary>
            Creates an empty list of ReportSchemaDataType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportSchemaDataType objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportSchemaDataType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportSchemaDataType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaDataType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportSchemaDataType objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.Add(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.Contains(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.IndexOf(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.Insert(System.Int32,VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.Remove(VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataTypeList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataTypeList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataTypeList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportSchemaDataType">
            <summary>
            ReportSchemaDataType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.ToSql(System.Object)">
            <summary>
            Converts a value of the current <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> to
            a valid SQL expression.
            </summary>
            <param name="value">The value to convert</param>
            <returns>The SQL expression</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.CreateEditor(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Creates an editor control suitable for editing values
            of this data type.
            </summary>
            <param name="filter">The filter column to be edited</param>
            <returns>The editor control</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.#ctor">
            <summary>
            A new ReportSchemaDataType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.#ctor(System.Char)">
            <summary>
            An existing ReportSchemaDataType that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportSchemaDataType objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportSchemaDataType.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Formatter">
            <summary>
            Gets the <see cref="P:VC3.Reporting.Design.ReportSchemaDataType.Formatter"/> to use for formatting the
            filter value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.IsNumeric">
            <summary>
            True if this datatype is for numeric data
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> that corresponds to the
            current <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Converter">
            <summary>
            Gets the <see cref="T:System.ComponentModel.TypeConverter"/> to use for parsing and
            rendering values of this <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.TypeName">
            <summary>
            Gets or sets the TypeName.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Format">
            <summary>
            Gets or sets the Format.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.SqlExpression">
            <summary>
            Gets or sets the SqlExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.DefaultColumnWidth">
            <summary>
            Gets or sets the DefaultColumnWidth.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.ValueEditor">
            <summary>
            Gets or sets the ValueEditor.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.OptionEditor">
            <summary>
            Gets or sets the OptionEditor.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Operators">
            <summary>
            Gets or sets the Operators.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.SummaryFunctions">
            <summary>
            Gets or sets the SummaryFunctions.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportSchemaDataType.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFilterValueList">
            <summary>
            A collection of <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.ToString">
            <summary>
            Gets a concatenated list of filter values separated by ", or "
            to show that the values are combined via the or operator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor">
            <summary>
            Creates an empty list of ReportFilterValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor(System.Data.IDataReader)">
            <summary>
            Creates an initialized list of ReportFilterValue objects.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader)">
            <summary>
            Creates a new, empty list of ReportFilterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,System.String)">
            <summary>
            Creates a new, empty list of ReportFilterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="ownerPropertyName">The name of the property on the objects contained in the list that corresponds to the owner of the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFilterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="updater">Used to update relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.#ctor(VC3.ComponentModel.BusinessObject.ListLoader,VC3.ComponentModel.BusinessObject.ListPersister,VC3.ComponentModel.BusinessObject.ListPersister)">
            <summary>
            Creates a new, empty list of ReportFilterValue objects, and registers a delegate for loading items.
            </summary>
            <param name="loader">Used to populate an uninitialized list.</param>
            <param name="adder">Used to save new relationships between owner and items in the list</param>
            <param name="remover">Used to remove old relationships between owner and items in the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Add(VC3.Reporting.Design.ReportFilterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> to the list
            </summary>
            <param name="item">The item to add to the list</param>
            <returns>The position at which the item was inserted</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Add(System.String)">
            <summary>
            Adds a new <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> to the list.
            </summary>
            <param name="value">The value expression for the new filter value</param>
            <returns>The index of the new item</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Add">
            <summary>
            Adds a new <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> to the list.
            </summary>
            <returns>The index of the new item</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Contains(VC3.Reporting.Design.ReportFilterValue)">
            <summary>
            Determines if a particular <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> is in the list.
            </summary>
            <param name="item">The item to search for</param>
            <returns>True if item is found. False otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.IndexOf(VC3.Reporting.Design.ReportFilterValue)">
            <summary>
            Determines the index of a particular <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> in the list
            </summary>
            <param name="item">The item to search for</param>
            <returns>The index if item is found. -1 otherwise.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Insert(System.Int32,VC3.Reporting.Design.ReportFilterValue)">
            <summary>
            Adds a <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> to the list
            </summary>
            <param name="index">Position at which the item will be inserted</param>
            <param name="item">The item to add to the list</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.Remove(VC3.Reporting.Design.ReportFilterValue)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> from the list
            </summary>
            <param name="item">The item to search for</param>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValueList.RemoveAt(System.Int32)">
            <summary>
            Removes a particular <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> from the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValueList.Item(System.Int32)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> from the list based on position in the list
            </summary>
            <param name="index">Position of the item to remove from the list</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValueList.Item(System.Guid)">
            <summary>
            Retrieves a <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> from the list based on its <see cref="P:VC3.ComponentModel.GuidBusinessObject.Id"/> property
            </summary>
            <param name="id">ID of the object to retrieve</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValueList.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFilterColumn">
            <summary>
            ReportFilterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.#ctor">
            <summary>
            A new ReportFilterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.#ctor(VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportFilterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.#ctor(VC3.Reporting.Design.Report,VC3.Reporting.Design.ReportTypeColumn)">
            <summary>
            A new ReportFilterColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.#ctor(System.Guid)">
            <summary>
            An existing ReportFilterColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFilterColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterColumn.OnBeforeDelete">
            <summary>
            Cascade delete filter values.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterColumn.Values">
            <summary>
            Gets the filter values.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterColumn.Value">
            <summary>
            Gets the first filter value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportColumnType">
            <summary>
            ReportColumnType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.#ctor">
            <summary>
            A new ReportColumnType
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.#ctor(System.Char)">
            <summary>
            An existing ReportColumnType that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnType"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.GetInstance(System.Char)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportColumnType"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportColumnType objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportColumnType.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnType.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportColumnType.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportParameterColumnData">
            <summary>
            <summary>
            Provides access to ReportParameterColumn-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportParameterColumnData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportParameterColumnData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportParameterColumnData.GetRecordsByReport(System.Guid[])">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportParameterColumnData.GetRecordsByReport(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumn table for the specified ids
            </summary>
            <param name="ids">Ids of the Report's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportParameterColumnData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.WebUI.ReportViewerParameter">
            <summary>
            Holds a parameter's value
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.ReportViewerParameterList">
            <summary>
            List of <see cref="T:VC3.Reporting.WebUI.ReportViewerParameter"/> objects
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewerParameterList.ControlsToSync">
            <summary>
            The control to collection to keep in sync with this list.
            The collection can be a superset of this list.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.CallbackModule">
            <summary>
            Intercepts special callback requests made by the <see cref="T:VC3.Reporting.WebUI.ReportViewer"/>
            for report resources.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.ReportViewer">
            <summary>
            Displays a <see cref="T:VC3.Reporting.IReport"/>.
            </summary>
            <remarks>
            Reports can be rendered asynchronously by setting <see cref="P:VC3.Reporting.WebUI.ReportViewer.RenderAsync"/> to true.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportViewer.HandleAsyncReportRequest">
            <summary>
            Renders report. This method writes to the response stream and
            ends the request.
            </summary>
        </member>
        <member name="M:VC3.Reporting.WebUI.ReportViewer.HandleResourceRequest">
            <summary>
            Renders report resources/images.  This method writes to the Response
            stream and ends the request.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.ReportName">
            <summary>
            Gets or sets the name of the report to render as HTML.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.Report">
            <summary>
            Overrides <see cref="P:VC3.Reporting.WebUI.ReportViewer.Report"/> to automatically load
            and initialize the report to be rendered.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.FormatName">
            <summary>
            Gets or sets the format used to render the report.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.Format">
            <summary>
            Gets or sets the format used to render the report
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.WaitTemplate">
            <summary>
            The user control to display while the report is being rendered.
            Used then <see cref="P:VC3.Reporting.WebUI.ReportViewer.RenderAsync"/> is true.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.InitialWidth">
            <summary>
            The initial width of the report. 
            Used then <see cref="P:VC3.Reporting.WebUI.ReportViewer.RenderAsync"/> is true.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.InitialHeight">
            <summary>
            The initial height of the report. 
            Used then <see cref="P:VC3.Reporting.WebUI.ReportViewer.RenderAsync"/> is true.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.RenderAsync">
            <summary>
            If true, the report will rendered during a subsequent request.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.IsSpecialRequest">
            <summary>
            True if the current request due to a ReportView control
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.Page">
            <summary>
            Overridden to allow the page to be accessed inside of the constructor.
            </summary>
        </member>
        <member name="P:VC3.Reporting.WebUI.ReportViewer.Request">
            <summary>
            Allows access to the Request object during callback requests.
            </summary>
        </member>
        <member name="T:VC3.Reporting.WebUI.ReportViewer.FauxPage">
            <summary>
            Utility class used to allow code to access the "Page" object early in the request.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.ReportTypeColumn">
            <summary>
            ReportTypeColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.#ctor">
            <summary>
            A new ReportTypeColumn
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.#ctor(VC3.Reporting.Design.ReportSchemaColumn,VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            An existing ReportTypeColumn that will be automatically initialized as needed
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.GetInstance(VC3.Reporting.Design.ReportSchemaColumn,VC3.Reporting.Design.ReportTypeTable)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportTypeColumn"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportTypeColumn objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportTypeColumn.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.FullName">
            <summary>
            Gets the fully qualified name of the column.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.Sequence">
            <summary>
            Gets or sets the Sequence.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.SchemaColumn">
            <summary>
            Gets the SchemaColumn.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.Table">
            <summary>
            Gets the Table.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.Id">
            <summary>
            Gets the string identifier for the current instance.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportTypeColumn.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFilterValue">
            <summary>
            ReportFilterValue
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.#ctor">
            <summary>
            Creates a new ReportFilterValue.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.#ctor(VC3.Reporting.Design.ReportFilterColumn)">
            <summary>
            Creates a new ReportFilterValue.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.#ctor(System.Guid)">
            <summary>
            Creates an existing ReportFilterValue that will be automatically initialized as needed.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.ToString">
            <summary>
            Returns the display representation of the filter value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Overriden to update the <see cref="P:VC3.Reporting.Design.ReportFilterValue.Value"/> property to represent
            the actual data type of the filter value.
            </summary>
            <returns>The properties for the current instance.</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Overriden to force property attributes to be cached by data type.
            </summary>
            <returns>The class name of the current instance</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.GetInstance(System.String)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> based on the specified string identifier.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.GetInstance(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:VC3.Reporting.Design.ReportFilterValue"/> based on the specified identifiers.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.OnInit(System.Data.IDataRecord)">
            <summary>
            Initializes this object from a record.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when the object should be initialized.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.GetData(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Retrieves data for a set of ReportFilterValue objects.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class to allow the object to fetch its data.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.OnInsert">
            <summary>
            Persists this object if it is new.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
            <returns>The new id of the object</returns>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.OnUpdate">
            <summary>
            Persists this object if its been changed from its persisted state.
            </summary>
            <remarks>
            This method is called automatically by the <see cref="T:VC3.ComponentModel.BusinessObject"/>
            base class when <see cref="M:VC3.ComponentModel.BusinessObject.CommitChanges"/> is called to allow
            the object to perist itself.
            </remarks>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.OnDelete">
            <summary>
            Deletes this object from the database.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.IsDynamic">
            <summary>
            Gets or sets the IsDynamic.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.ValueExpression">
            <summary>
            Gets or sets the ValueExpression.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.DisplayExpression">
            <summary>
            Gets the display representation of the underlying value;
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.Value">
            <summary>
            Gets the strongly-typed value of the filter value.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.Filter">
            <summary>
            Gets or sets the Filter.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the current instance.
            </summary>
            <remarks>
            This property delegates to the data layer to return a connection
            string specific instance of <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.ReportFilterValue.FilterValuePropertyDescriptor">
            <summary>
            Overrides <see cref="T:System.ComponentModel.ExtendedPropertyDescriptor"/> to provide
            a strong type and formatting rules for the <see cref="P:VC3.Reporting.Design.ReportFilterValue.Value"/> property.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.ReportFilterValue.FilterValuePropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,VC3.Reporting.Design.ReportSchemaDataType)">
            <summary>
            Adds the <see cref="T:VC3.ComponentModel.FormatAttribute"/> to the attributes exposed by
            the property if the specified <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/> has
            a valid format.
            </summary>
            <param name="property">The value property to enhance</param>
            <param name="dataType">The data type of the property</param>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.FilterValuePropertyDescriptor.PropertyType">
            <summary>
            Overrides the type of the filter value property to return the actual
            <see cref="T:System.Type"/> for the specified <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
        </member>
        <member name="P:VC3.Reporting.Design.ReportFilterValue.FilterValuePropertyDescriptor.Converter">
            <summary>
            Overrides the converter assigned in the base class to use the format
            information for the specified <see cref="T:VC3.Reporting.Design.ReportSchemaDataType"/>.
            </summary>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportTypeTableData">
            <summary>
            <summary>
            Provides access to ReportTypeTable-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportTypeTableData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.UpdateRecord(System.Guid,System.String,System.Int32,System.String,System.String,System.Char,System.Guid,System.Char,System.Guid)">
            <summary>
            Updates a record in the ReportTypeTable table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="joinExpression">Value to assign to the JoinExpression field of the record</param>
            <param name="columnPrefix">Value to assign to the ColumnPrefix field of the record</param>
            <param name="joinMultiplicity">Value to assign to the JoinMultiplicity field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
            <param name="reportType">Value to assign to the ReportType field of the record</param>
            <param name="joinTable">Value to assign to the JoinTable field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.InsertRecord(System.String,System.Int32,System.String,System.String,System.Char,System.Guid,System.Char,System.Guid)">
            <summary>
            Inserts a new record into the ReportTypeTable table with the specified values
            </summary>
            <param name="name">Value to assign to the Name field of the record</param>
            <param name="sequence">Value to assign to the Sequence field of the record</param>
            <param name="joinExpression">Value to assign to the JoinExpression field of the record</param>
            <param name="columnPrefix">Value to assign to the ColumnPrefix field of the record</param>
            <param name="joinMultiplicity">Value to assign to the JoinMultiplicity field of the record</param>
            <param name="schemaTable">Value to assign to the SchemaTable field of the record</param>
            <param name="reportType">Value to assign to the ReportType field of the record</param>
            <param name="joinTable">Value to assign to the JoinTable field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportTypeTable table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportTypeTable table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportTypeTable record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.GetRecordsByJoinTable(System.Guid[])">
            <summary>
            Gets records from the ReportTypeTable table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportTypeTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportTypeTableData.GetRecordsByJoinTable(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportTypeTable table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportTypeTable's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportTypeTableData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
        <member name="T:VC3.Reporting.Design.Data.ReportColumnParameterValueData">
            <summary>
            <summary>
            Provides access to ReportColumnParameterValue-related stored procedures
            </summary>
            <remarks>
            This generated class provides access to database stored procedures.
            There is one static method per stored procedure in order to make
            calling a stored procedure as easy as possible.  The implementation of each static
            method relies on an instance of the class and takes advantage
            of the inherited base class, <see cref="T:VC3.Data.DataLayerBase"/>. <see cref="T:VC3.Data.DataLayerBase"/> is responsible
            for handling the work of calling the stored procedures as well as reading configuration settings.
            </remarks>
            </summary>
        </member>
        <member name="F:VC3.Reporting.Design.Data.ReportColumnParameterValueData.current">
            <summary>
            Instance used by static methods. Keep it around "forever" so settings are cached.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.#ctor">
            <summary>
            Private constructor.  An instance of this class is used internally by its static methods.
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.UpdateRecord(System.Guid,System.String,System.Guid,System.Guid)">
            <summary>
            Updates a record in the ReportColumnParameterValue table with the specified values
            </summary>
            <param name="id">Value to assign to the Id field of the record</param>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="reportColumn">Value to assign to the ReportColumn field of the record</param>
            <param name="schemaTableParameter">Value to assign to the SchemaTableParameter field of the record</param>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.InsertRecord(System.String,System.Guid,System.Guid)">
            <summary>
            Inserts a new record into the ReportColumnParameterValue table with the specified values
            </summary>
            <param name="valueExpression">Value to assign to the ValueExpression field of the record</param>
            <param name="reportColumn">Value to assign to the ReportColumn field of the record</param>
            <param name="schemaTableParameter">Value to assign to the SchemaTableParameter field of the record</param>
            <returns>The identifiers for the inserted record</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.GetRecords(System.Guid[])">
            <summary>
            Gets records from the ReportColumnParameterValue table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.GetRecords(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumnParameterValue table with the specified id's
            </summary>
            <param name="ids">Ids of the records to retrieve</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.DeleteRecord(System.Guid)">
            <summary>
            Deletes a ReportColumnParameterValue record
            </summary>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.GetRecordsByReportColumn(System.Guid[])">
            <summary>
            Gets records from the ReportColumnParameterValue table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportColumn's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="M:VC3.Reporting.Design.Data.ReportColumnParameterValueData.GetRecordsByReportColumn(VC3.ComponentModel.BusinessObject.IdentifierList)">
            <summary>
            Gets records from the ReportColumnParameterValue table for the specified ids
            </summary>
            <param name="ids">Ids of the ReportColumn's </param>
            <returns>An <see cref="T:System.Data.IDataReader"/> containing the requested data</returns>
        </member>
        <member name="P:VC3.Reporting.Design.Data.ReportColumnParameterValueData.Transaction">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.ITransactionProvider"/> for the data source.
            </summary>
            <remarks>
            The transaction provider is retrieved from the statically cached
            singleton instance of this class.  The provider is created in the inherited
            base class, <see cref="T:VC3.Data.DataLayerBase"/>, and is an instance of
            <see cref="T:VC3.ComponentModel.DatabaseTransactionProvider"/>.
            </remarks>
        </member>
    </members>
</doc>
