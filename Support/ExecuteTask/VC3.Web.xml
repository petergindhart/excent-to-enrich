<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VC3.Web</name>
    </assembly>
    <members>
        <member name="T:VC3.Web.UI.Field">
            <summary>
            Provides complete support for editing a single property
            on a business-layer component by automatically creating
            the appropriate edit control based on the property type,
            and using a template to control layout, including the
            field label, description, helptext, and validator.
            </summary>
            <remarks>
            <para>
            Additional attributes placed on the field control will be
            propagated to the edit control.  For example the following
            tag would cause the CssClass name property to be set on the 
            edit control created by the <see cref="T:VC3.Web.UI.Field"/>:
            <code><![CDATA[
            <vc3:Field runat="server" source="FirstName" CssClass="textbox" />
            ]]></code>
            </para>
            <para>
            Only attributes that don't correspond to properties defined by the 
            <see cref="T:VC3.Web.UI.Field"/> will be propagated (ie, they must be set via <see cref="T:System.Web.UI.IAttributeAccessor"/>).
            If you need to propagate an attribute that corresponds to a property defined by the <see cref="T:VC3.Web.UI.Field"/>
            control, prefix the property with a "-".  For example, the field control has a <see cref="P:VC3.Web.UI.Field.Template"/>
            property so in order to pass this value to the edit control, it must be prefixed as follows:
            <code><![CDATA[
            <vc3:Field runat="server" source="FirstName" Template="HtmlEditor" -Template="Bold,Italic" />
            ]]></code>
            In this example, the Field's <see cref="P:VC3.Web.UI.Field.Template"/> property will be set to "HtmlEditor" and
            the edit control's Template property will be set to "Bold,Italic".
            </para>
            <para>
            Each attribute will try to be matched to either an event or property on the edit control.
            First it will be compared to all properties defined by the edit control. If no match is found
            and the property starts with "On" it will be compared to all events
            defined by the edit control (for example, "OnClick" will be matched to the "Click" event). 
            Lastly, if no matching member is found the attribute will be 
            	/// set via <see cref="T:System.Web.UI.IAttributeAccessor"/>, if the edit control implements it.
            If it cannot be propagated it will be ignored.
            </para>
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.BaseControl">
            <summary>
             Summary description for BaseControl.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.SaveControlState(System.Web.UI.Control,VC3.Web.UI.StatePreservationMode,System.String[])">
            <summary>
            Saves the state of a control on a page for the duration of a user session.
            </summary>
            <param name="control">The control to preserve state for</param>
            <param name="mode">The mechanism to use to preserve state</param>
            <param name="state">The state to preserve</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.LoadControlState(System.Web.UI.Control,VC3.Web.UI.StatePreservationMode)">
            <summary>
            Loads the state of a control on a page from the state preservation store.
            </summary>
            <param name="control">The control to restore state for</param>
            <param name="mode">The mechanism used to preserve state</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.SplitState(System.String)">
            <summary>
            Splits a state string value into an array.
            </summary>
            <param name="state">The string state to split</param>
            <returns>An array of state values</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.JoinState(System.String[])">
            <summary>
            Joins an array of state values into a string for persistence.
            </summary>
            <param name="state">The state array to join</param>
            <returns>The joined state string</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.GetStateKey(System.Web.UI.Control)">
            <summary>
            Gets a key for the specified control that is unique for the application.
            </summary>
            <param name="control">The control to create a key for</param>
            <returns>The unique key value</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.GetScriptUrl(System.String)">
            <summary>
            Gets absolute path to a script file contained in
            the aspnet directory.
            </summary>
            <param name="path">Path to script file relative to the "aspnet_client/assembly/ver/" directory
             or ClientScriptsDirectory specified in the web.config.</param>
            <returns>Absolute path</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.GetScriptUrl(System.Type,System.String)">
            <summary>
            Gets absolute path to a script file contained in
            the aspnet directory.
            </summary>
            <param name="t">Type that owns the script resource</param>
            <param name="path">Path to script file relative to the "aspnet_client/assembly/ver/" directory
            or ClientScriptsDirectory specified in the web.config</param>
            <returns>Absolute path</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.RegisterScript(System.String,System.Boolean)">
            <summary>
            This method is obsolete.  Use <see cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)"/> instead
            </summary>
            <param name="script">Common script block to register</param>
            <param name="overwrite">If true, any existing script
            registered via this method previously will be replaced.</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.RegisterScript(System.String)">
            <summary>
            This method is obsolete.  Use <see cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)"/> instead
            </summary>
            <param name="script">Common script block to register</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.RegisterScriptFile(System.String)">
            <summary>
            Includes a script file shared by all instances of this type of control.
            </summary>
            <param name="path">Path to script file relative to the "aspnet_client/assembly/ver/" directory.</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.RegisterScriptFile(System.Type,System.String)">
            <summary>
            Includes a script file shared by all instances of this type of control.
            </summary>
            <param name="type">The Type that owns the script resource.</param>
            <param name="path">Path to script file relative to the "aspnet_client/assembly/ver/" directory.</param>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.FindControl(System.Web.UI.Control,System.String)">
            <summary>
            A more advanced variation of Control.FindControl that will span naming containers.
            
            Syntax:
            	..	: parent naming container
            	/	: step seperator
            	id	: id to pass to FindControl
            	
            Example:
            	"../../SomeControl" will search two naming containers above for a control with id="SomeControl"
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BaseControl.UnitTestTag(System.String[])">
            <summary>
            Creates an ID that can be used to idenfity content within a page to improve testability of a page.
            </summary>
        </member>
        <member name="E:VC3.Web.UI.BaseControl.AttributeSet">
            <summary>
            Raised when an attribute is set via IAttributeAccessor.SetAttribute
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.ISourceConsumer.NamingContainer">
            <summary>
            Exposes the naming container of the consumer, which is sometimes necessary
            in order for the parent <see cref="T:VC3.Web.UI.ISourceProvider"/> to return the correct
            result from a call to <see cref="M:VC3.Web.UI.ISourceProvider.GetInstance(VC3.Web.UI.ISourceConsumer)"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Field.#ctor">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.Field"/> instance, and
            initializes a <see cref="T:VC3.Web.UI.SourceManager"/> to manage
            access to source data for the field.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Field.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.Field"/> instance, and
            initializes a <see cref="T:VC3.Web.UI.SourceManager"/> with the
            specified source path to manage access to source
            data for the field.
            </summary>
            <param name="source">The source path for the field</param>
        </member>
        <member name="M:VC3.Web.UI.Field.#ctor(VC3.ComponentModel.PropertyReflector)">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.Field"/> instance, and
            initializes a <see cref="T:VC3.Web.UI.SourceManager"/> with the
            specified <see cref="T:VC3.ComponentModel.PropertyReflector"/> source to manage
            access to source data for the field.
            </summary>
            <param name="property">The property the field is bound to</param>
        </member>
        <member name="M:VC3.Web.UI.Field.ObjectToString(System.Object)">
            <summary>
            Assumes item is not null
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Field.GetEnclosingElement``1(System.Web.UI.Control,System.Boolean)">
            <summary>
            Returns the enclosing <see cref="T:System.Web.UI.Control"/> of the source element based on <see cref="P:System.Web.UI.Control.NamingContainer"/> or <see cref="P:System.Web.UI.Control.Parent"/>
            </summary>
            <typeparam name="T">Type of control to return</typeparam>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> at which to begin the search</param>
            <param name="useParent">Determines if the routine should use the NamingContainer (default) or Parent</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Field.GetEnclosingElement``1(System.Web.UI.Control)">
            <summary>
            Returns the enclosing <see cref="T:System.Web.UI.Control"/> of the source element based on <see cref="P:System.Web.UI.Control.NamingContainer"/>
            </summary>
            <typeparam name="T">Type of control to return</typeparam>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> at which to begin the search</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Field.GetContainingField(System.Web.UI.Control)">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.Field"/> instance that contains the specified control.
            </summary>
            <param name="control">The child field control</param>
            <returns>The containing <see cref="T:VC3.Web.UI.Field"/></returns>
        </member>
        <member name="M:VC3.Web.UI.Field.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls have been created before
            databinding or loading viewstate.
            </summary>
            <param name="e">The Init event args</param>
        </member>
        <member name="M:VC3.Web.UI.Field.CreateChildControls">
            <summary>
            Adds the correct <see cref="T:VC3.Web.UI.FieldTemplate"/> user control based on the
            <see cref="T:VC3.Web.UI.FieldMap"/> for the field if an inline template has not been
            specified.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Field.UpdateSource(System.Boolean)">
            <summary>
            Calls UpdateSource on the inner <see cref="P:VC3.Web.UI.Field.FieldControl"/> to update the source
            of data with changes that have occurred in the underlying control.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
        </member>
        <member name="M:VC3.Web.UI.Field.UpdateSource">
            <summary>
            Calls UpdateSource on the nested <see cref="P:VC3.Web.UI.Field.FieldControl"/>s to update the source
            of data with changes that have occurred in the underlying control. If
            the UpdateSourceEnabled property is set to false, then
            UpdateSource will not be called
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.NullValue">
            <summary>
            Gets or sets the value to display when the source property
            or path is undefined.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.ClientID">
            <summary>
            Exposes the client id of the underlying editor control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the field and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.Source">
            <summary>
            Gets or sets the property name or source path to data for the field.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Control">
            <summary>
            Gets or sets the name of the control to use for this field,
            as specified in the field control mapping in the Web.config.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.TabIndex">
            <summary>
            The order this field should receive focus in the form when the tab key is
            being used to move between elements.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.IsRequired">
            <summary>
            Gets or sets whether the field is required.
            </summary>
            <remarks>
            If no value is specified, the field will check to see if
            the source property is required on the underlying business
            object based on the <see cref="T:VC3.ComponentModel.RequiredAttribute"/>.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.IsReadOnly">
            <summary>
            Gets or sets whether the field is read only.
            </summary>
            <remarks>
            If no value is specified, the field will check to see if
            the source property is read only on the underlying business
            object based on the <see cref="T:System.ComponentModel.ReadOnlyAttribute"/>.
            
            If the field is read only, a static representation of the
            property data will be rendered instead of an editor control.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.UpdateSourceEnabled">
            <summary>
            Gets or sets whether <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/>
            will update the underlying object when called. Defaults to true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Label">
            <summary>
            Gets or sets the label for the field.
            </summary>
            <remarks>
            If no value is specified, the field will use the label for the
            source property on the underlying business as defined by the
            <see cref="T:VC3.ComponentModel.LabelAttribute"/>.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.HelpText">
            <summary>
            Gets or sets the help text for the field.
            </summary>
            <remarks>
            If no value is specified, the field will use the help text
            for the source property on the underlying business as
            defined by the <see cref="T:VC3.ComponentModel.HelpTextAttribute"/>.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.Description">
            <summary>
            Gets or sets the description for the field.
            </summary>
            <remarks>
            If no value is specified, the field will use the description
            for the source property on the underlying business as
            defined by the <see cref="T:System.ComponentModel.DescriptionAttribute"/>.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.DataTextField">
            <summary>
            Gets or sets the source of display data for fields that display lists of options.
            </summary>
            <remarks>
            If no value is specified, ToString() will be used to get the display data for lists.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Field.SourceValue">
            <summary>
            Gets or sets the value of the source property
            represented by the field.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.ControlValue">
            <summary>
            Gets or sets the value of the underlying control
            represented by the field.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Type">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.Field.Type"/> of the underlying
            source property.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Property">
            <summary>
            Gets the <see cref="T:VC3.ComponentModel.PropertyReflector"/> for the
            property represented by the field.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Manager">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.SourceManager"/> that tracks source
            property information for the field.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.Map">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.FieldMap"/> that contains configuration
            settings for the current field.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Field.FieldControl">
            <summary>
            Gets or sets the child <see cref="P:VC3.Web.UI.Field.FieldControl"/>
            instance that is responsible for creating the
            appropriate editor control for editing property data.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FieldTemplate">
            <summary>
            Optional base class for user controls that will be used as a
            template for <see cref="P:VC3.Web.UI.FieldTemplate.Field"/> controls.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldTemplate.FindControl(System.String,System.Int32)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.FindControl(System.String)"/> to allow child template controls to
            search for other controls outside of the template but within the same parent
            naming container.
            </summary>
            <param name="id">The id of the control to find</param>
            <param name="pathOffset">The framework specific control offset</param>
            <returns>The control with the specified id, or null if the control could not be found.</returns>
        </member>
        <member name="T:VC3.Web.UI.FieldControl">
            <summary>
            Automatically determines and creates a user interface control to enable
            the associated source pro
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.DataBind">
            <summary>
            Populate the control with data from the source instance.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.UpdateSource">
            <summary>
            Update the source data with changes in the value of the control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.CreateChildControls">
            <summary>
            Add the appropriate editor control as a child control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.CopyAttributes(VC3.Web.UI.BaseControl,System.Boolean)">
            <summary>
            Copys attributes from a control to the editor control
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:VC3.Web.UI.FieldControl.CopyAttribute(System.String,System.String)">
            <summary>
            Copies all unhandled attributes to the underlying control by setting
            property values or hooking up event handlers that correspond to the
            specified attribute name.
            </summary>
            <param name="name">The name of the unhandled attribute to propogate.</param>
            <param name="val">The string value of the attribute.</param>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.Field">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.FieldControl.Field"/> that contains this <see cref="T:VC3.Web.UI.FieldControl"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.Map">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.FieldMap"/> that store
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.EditorControl">
            <summary>
            Gets the appropriate <see cref="T:System.Web.UI.Control"/> subclass based on the
            <see cref="T:System.Type"/> of the property represented by the parent
            <see cref="P:VC3.Web.UI.FieldControl.Field"/> instance and the type mappings defined in the
            Web.config file.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.Converter">
            <summary>
            Gets the <see cref="T:System.ComponentModel.TypeConverter"/> for the property
            represented by the parent <see cref="T:VC3.Web.UI.Form"/> instance.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.FieldType">
            <summary>
            Gets the type of the property represented by the parent
            <see cref="T:VC3.Web.UI.Form"/> instance.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.ClientID">
            <summary>
            Exposes the client id of the underlying editor control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.SourceValue">
            <summary>
            Gets or sets the value of the source property represented
            by the parent <see cref="T:VC3.Web.UI.Form"/> instance.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldControl.ControlValue">
            <summary>
            Gets or sets the value of the control correctly converted to the type
            of the property represented by the parent <see cref="T:VC3.Web.UI.Form"/> instance.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FieldValue">
            <summary>
            Summary description for FieldValue.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldValue.#ctor">
            <summary>
            Creates a new uninitialize <see cref="T:VC3.Web.UI.FieldValue"/> instance.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldValue.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.FieldValue"/> instance bound to
            the specified source.
            </summary>
            <param name="source">The source of data for the control</param>
        </member>
        <member name="M:VC3.Web.UI.FieldValue.DataBind">
            <summary>
            Populate the control with data from the source instance.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldValue.Field">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.FieldValue.Field"/> that contains this <see cref="T:VC3.Web.UI.FieldValue"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldValue.Map">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.FieldMap"/> that store
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldValue.NullValue">
            <summary>
            Gets or sets the value to display when the source property
            or path is undefined.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldValue.Value">
            <summary>
            Gets or sets the text value of the control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldLabel.CreateChildControls">
            <summary>
            Dynamically creates navigation elements based on navigation information and templates.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldLabel.HeaderTemplate">
            <summary>
            Optional template that is included before the label if it exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldLabel.FooterTemplate">
            <summary>
            Optional template that is included after the label if it exists.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FieldHelpText">
            <summary>
            Inserts the helptext exposed by the HelpText
            property for the parent <see cref="P:VC3.Web.UI.FieldHelpText.Field"/> instance.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FieldHelpText.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.FieldHelpText.CreateChildControls">
            <summary>
            Inserts helptext and optional header/footer templates.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldHelpText.HeaderTemplate">
            <summary>
            Optional template that is included before the help text if it exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldHelpText.FooterTemplate">
            <summary>
            Optional template that is included after the help text if it exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FieldHelpText.RenderLineBreaks">
            <summary>
            If true, line breaks, will be converted
            to their HTML equivilant.  Default = false;
            </summary>
        </member>
        <member name="T:VC3.Web.UI.PropertyValidator">
            <summary>
            Summary description for PropertyValidator.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.PropertyValidator.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:VC3.Web.UI.PropertyValidator.IgnoreRequired">
            <summary>
            If true, field "requiredness" will not be checked.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyValidator.BreakBefore">
            <summary>
            If true, a break will be inserted before the error message.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyValidator.Label">
            <summary>
            Gets or sets the label of the property used to generate error messages.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyValidator.HeaderTemplate">
            <summary>
            Optional template that is included before the error message if it exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyValidator.FooterTemplate">
            <summary>
            Optional template that is included after the error message if it exists.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.PropertyValidator.CompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)">
            <summary>
            New method to compare dates with time values properly
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.FieldValidator.OnPreRender(System.EventArgs)">
            <summary>
            This method notifies the server control to perform any necessary 
            prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="P:VC3.Web.UI.FieldValidator.Instance">
            <summary>
            Overriden to return the instance provided by the <see cref="T:VC3.Web.UI.SourceManager"/>
            instance for the parent <see cref="P:VC3.Web.UI.FieldValidator.Field"/> control.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.RequiredIfValidator">
            <summary>
            Summary description for RequiredIfValidator.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.RequiredListValidator">
            <summary>
            Validates that a list of checkboxes or radio buttons have a selection.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.PreserveLayout">
            <summary>
            Convert whitespace in the text into its HTML equivilent.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.NoLineWrapping">
            <summary>
            Prevents lines from wrapping.  Only hard line breaks will wrap.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.HtmlEncode">
            <summary>
            Encodes all special characters so they will display in HTML browsers.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.DetectLinks">
            <summary>
            Recongnizes linkable text such as links and email addresses
            and generates anchor tags for them.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.DetectHeadings">
            <summary>
            Recongnizes headings
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.DetectLists">
            <summary>
            Recongnizes bulletted lists
            </summary>
        </member>
        <member name="F:VC3.Web.UI.FormatOptions.Defaults">
            <summary>
            Default formatting options.
            <see cref="F:VC3.Web.UI.FormatOptions.HtmlEncode"/>, <see cref="F:VC3.Web.UI.FormatOptions.DetectLinks"/> and 
            <see cref="F:VC3.Web.UI.FormatOptions.PreserveLayout"/>
            </summary>
        </member>
        <member name="T:VC3.Web.UI.TextPreviewLocation">
            <summary>
            Indicates which part of a body of text should be used for a preview
            </summary>
        </member>
        <member name="F:VC3.Web.UI.TextPreviewLocation.Start">
            <summary>
            Always include the beginning of the text block and truncate the ending if needed
            </summary>
        </member>
        <member name="F:VC3.Web.UI.TextPreviewLocation.End">
            <summary>
            Always include the end of a text block and truncate the beginning if needed
            </summary>
        </member>
        <member name="F:VC3.Web.UI.TextPreviewLocation.StartEnd">
            <summary>
            Always include the start and end of a text block and truncate the middle if needed
            </summary>
        </member>
        <member name="F:VC3.Web.UI.TextPreviewLocation.Middle">
            <summary>
            Always include the middle of a text block and truncate the start and end if needed
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Format">
            <summary>
            A set of formatting functions used throughout the application.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Format.Text(System.String)">
            <summary>
            Formats text using the default formatting options defined 
            by <see cref="F:VC3.Web.UI.FormatOptions.Defaults"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Text(System.String,VC3.Web.UI.FormatOptions)">
            <summary>
            Formats text. Converts line breaks to their HTML equilivant
            and preserves indentation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Currency(System.Decimal)">
            <summary>
            Formats currency
            </summary>
            <param name="amount">The amount</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Debt(System.Decimal)">
            <summary>
            Formats a debt amount
            </summary>
            <param name="amount">The debt amount</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Url(System.String,System.Object[])">
            <summary>
            Creates a url for a set of arguments.  The arguments
            will be encoded.
            </summary>
            <param name="urlTemplate">The template using the formating understood by <see cref="M:System.String.Format(System.String,System.Object[])"/>.
            A leading '~~' is expanded to the http:// or https:// prefix , host name and application path.
            A leading '~' is expanded to the application path.</param>
            <param name="args">List of args to substitute into the template.</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.SingularOrPlural(System.Double,System.String,System.String)">
            <summary>
            Returns a formatted string that contains a singular or plural version of the string with the <paramref name="count"/> as item {0}. Returns empty string if count is NaN
            </summary>
            <param name="count"></param>
            <param name="ifSingular"></param>
            <param name="ifPlural"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.QueryString(System.String,System.Object[])">
            <summary>
            Creates a querystring for a set of arguments.  The arguments
            will be encoded.  Unlike <see cref="M:VC3.Web.UI.Format.Url(System.String,System.Object[])"/>, ~'s are not expanded.
            </summary>
            <param name="qsTemplate">The template using the formating understood by <see cref="M:System.String.Format(System.String,System.Object[])"/></param>
            <param name="args">List of args to substitute into the template.</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Date(System.DateTime)">
            <summary>
            Formats a date to include month, day and year information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.Ordinal(System.Int32)">
            <summary>
            Formats a number as an ordinal (ex: "1st", "2nd", "3rd", "4th", etc)
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Format.TextHighlight(System.String,System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Highlights text
            </summary>
            <param name="text">Text to highlight</param>
            <param name="pointsOfInterest">Text that matches this regex will be highlighted</param>
            <param name="cssClass">CSS class that will be applied to the highlights</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Format.TextPreview(System.String,System.Int32,VC3.Web.UI.TextPreviewLocation)">
            <summary>
            Gets a shortened, preview version of a long piece of text.
            </summary>
            <param name="fullText">The long text to determine a preview for</param>
            <param name="previewLength">Desired length of the preview text.</param>
            <param name="pointsOfInterest">Used to determine
            which part of the full text should be used for the preview</param>
        </member>
        <member name="M:VC3.Web.UI.Format.TextPreview(System.String,System.Int32,System.Text.RegularExpressions.Regex)">
            <summary>
            Gets a shortened, preview version of a long piece of text.
            </summary>
            <param name="fullText">The long text to determine a preview for</param>
            <param name="previewLength">Desired length of the preview text.</param>
            <param name="pointsOfInterest">Used to determine
            which part of the full text should be used for the preview</param>
        </member>
        <member name="T:VC3.Web.UI.Text">
            <summary>
            Formats the text output by inner controls. Works in conjection
            with the <see cref="T:VC3.Web.UI.Format"/> class.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Text.DataBind">
            <summary>
            Overridden to catch null reference exceptions
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Text.Transform(System.String)">
            <summary>
            Formats text
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.Text.NullValue">
            <summary>
            If specified and a <see cref="T:System.NullReferenceException"/>
            is thrown during <see cref="M:VC3.Web.UI.Text.DataBind"/>, this value will
            be used instead of the inner control's text.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Text.PreserveLayout">
            <summary>
            Convert whitespace in the text into its HTML equivilent.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Text.NoLineWrapping">
            <summary>
            Prevents lines from wrapping.  Only hard line breaks will wrap.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Text.HtmlEncode">
            <summary>
            Encodes all special characters so they will display in HTML browsers.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Text.DetectLinks">
            <summary>
            Recongnizes linkable text such as links and email addresses
            and generates anchor tags for them.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Text.DetectHeadings">
            <summary>
            Recongnizes headings.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.AttributeSetEventHandler">
            <summary>
            Event handler used to notify objects that an attribute has changed
            </summary>
        </member>
        <member name="T:VC3.Web.UI.AttributeSetEventArgs">
            <summary>
            Event structure used to notify objects that an attribute has changed
            </summary>
        </member>
        <member name="M:VC3.Web.UI.AttributeSetEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates a new event structure
            </summary>
            <param name="name">Attribute name</param>
            <param name="val">Attribute value</param>
        </member>
        <member name="P:VC3.Web.UI.AttributeSetEventArgs.Name">
            <summary>
            Gets the attribute name
            </summary>
        </member>
        <member name="P:VC3.Web.UI.AttributeSetEventArgs.Value">
            <summary>
            Gets the attribute value
            </summary>
        </member>
        <member name="T:VC3.Web.UI.StatePreservationMode">
            <summary>
            Indicates what mechanism should be used to preserve the state of controls
            on a page for the duration of a user's session.
            </summary>
            <remarks>
            State preservation stores one or more ordered string values as cookies,
            query string values, or session variables for a control based on the raw url
            of the page (excluding state variables) and the unique id of the control
            on the page.
            
            <see cref="T:VC3.Web.UI.BaseControl"/> subclasses or other UI controls may use the
            <see cref="M:VC3.Web.UI.BaseControl.SaveControlState(System.Web.UI.Control,VC3.Web.UI.StatePreservationMode,System.String[])"/> and <see cref="M:VC3.Web.UI.BaseControl.LoadControlState(System.Web.UI.Control,VC3.Web.UI.StatePreservationMode)"/> 
            static methods to save and retrieve state information.
            </remarks>
        </member>
        <member name="F:VC3.Web.UI.StatePreservationMode.None">
            <summary>
            Indicates that state should not be maintained for the control.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.StatePreservationMode.Default">
            <summary>
            Indicates that the control should inherit global state storage
            settings as defined in the web.config file.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.StatePreservationMode.Cookies">
            <summary>
            Indicates that state should be stored in the
            <see cref="P:System.Web.HttpResponse.Cookies"/> collection.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.StatePreservationMode.Breadcrumb">
            <summary>
            Indicates that state should be stored in the querystring
            via the <see cref="F:VC3.Web.UI.StatePreservationMode.Breadcrumb"/> class.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.StatePreservationMode.Session">
            <summary>
            Indicates that state should be stored in <see cref="P:System.Web.UI.Page.Session"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SurrogateTemplateHandler">
            <summary>
            Allows classes to implement the <see cref="T:System.Web.UI.ITemplate"/> interface
            via a delegate by using the <see cref="T:VC3.Web.UI.SurrogateTemplate"/> class
            as a proxy.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SurrogateTemplate.#ctor(VC3.Web.UI.SurrogateTemplateHandler)">
            <summary>
            Creates a template that will invoke the specified delegate
            to add controls to the container.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:VC3.Web.UI.SurrogateTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Implements <see cref="T:System.Web.UI.ITemplate"/> by calling the associated delegate.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> to invoke the delegate on</param>
        </member>
        <member name="T:VC3.Web.UI.LiteralTemplate">
            <summary>
            Implements the <see cref="T:System.Web.UI.ITemplate"/> interface by adding a
            single <see cref="T:System.Web.UI.LiteralControl"/> to a container with the
            specified content.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.LiteralTemplate.#ctor(System.String)">
            <summary>
            Creates a template that will add a <see cref="T:System.Web.UI.LiteralControl"/>
            with the specified content to the control container when the
            template is invoked.
            </summary>
            <param name="literal">The literal content to use for the template</param>
        </member>
        <member name="M:VC3.Web.UI.LiteralTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            Adds a <see cref="T:System.Web.UI.LiteralControl"/> with the specified
            literal content to the container.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> to add the literal content to</param>
        </member>
        <member name="M:VC3.Web.ExtensionTransferHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Transfers a request for file with an abitrary extension to a specified aspx page.
            The virtual path to an aspx page url may be specified using the 'transfer' query string parameter.
            If the aspx url is not specifed in the query string, the url is calculated by changing the
            extension of the requested file to .aspx.
            </summary>
            <remarks>
            The extension must be mapped to the ASP.NET runtime in IIS
            and associated with this HTTP handler in the web.config file
            in order for the transfer to occur.  
            </remarks>
            <param name="context">The context for the request.</param>
        </member>
        <member name="P:VC3.Web.ExtensionTransferHandler.IsReusable">
            <summary>
            Indicates that the handler is stateless and can be reused for multiple requests.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ResourceLookup">
            <summary>
            Provides Resource File Lookup capabilities
            </summary>
        </member>
        <member name="T:VC3.Web.UI.OptionGroup">
            <summary>
            A collection of <see cref="T:VC3.Web.UI.Option"/> controls.
            The <see cref="P:VC3.Web.UI.OptionGroup.SelectedItem"/> and <see cref="P:VC3.Web.UI.OptionGroup.SelectedValue"/>
            properties make it easy to determine which radio button from a group
            is selected.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.OptionGroup.AllOptionGroups">
            <summary>
            All option groups in the page
            </summary> 
        </member>
        <member name="P:VC3.Web.UI.OptionGroup.GroupName">
            <summary>
            All <see cref="T:VC3.Web.UI.Option"/> controls that have
            a <see cref="P:VC3.Web.UI.Option.GroupName"/> that is the same
            as this group name are considered part of this <see cref="T:VC3.Web.UI.OptionGroup"/>.
            Defaults to the control's <see cref="P:System.Web.UI.Control.ID"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.OptionGroup.SelectedValue">
            <summary>
            Gets or sets the value of the selected radio button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.OptionGroup.SelectedItem">
            <summary>
            The radio button that is selected within this group, if any.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Option">
            <summary>
            A radio button control similar to the ASP.NET radio button control,
            however this control works across naming containers unlike the ASP.NET one.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Option.EnsureSingleSelection">
            <summary>
            Enforces only one radio button per group is checked
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Option.OnInit(System.EventArgs)">
            <summary>
            Overridden to initialize Checked property from form
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Option.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to render HTML INPUT tag.
            </summary>
            <param name="w"></param>
        </member>
        <member name="E:VC3.Web.UI.Option.CheckedChanged">
            <summary>
            Raised when <see cref="P:VC3.Web.UI.Option.Checked"/> changes between postbacks.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.Group">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.OptionGroup"/> control for this
            option
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.FormFieldName">
            <summary>
            Gets the option form field name. If the <see cref="T:VC3.Web.UI.OptionGroup"/>
            control exists for this control, its client id will be used. Else, 
            this controls GroupName property will be used.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.Value">
            <summary>
            Can be used to associate a value with the selection
            of this radion button.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.Text">
            <summary>
            The clickable text shown next to the radio button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.GroupName">
            <summary>
            The group the radio button belongs to.
            Required.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.Checked">
            <summary>
            Indicates if the radio button is selected.
            Defaults to false.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.AutoPostback">
            <summary>
            If true, control will postback when clicked.
            Default = false.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Option.AllOptions">
            <summary>
            All radio buttons in the page
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ToggleAction">
            <summary>
            Indicates the behavior of the <see cref="T:VC3.Web.UI.Toggle"/> control
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ToggleEvaluationMode">
            <summary>
            Indicates the comparison behavior of <see cref="T:VC3.Web.UI.Toggle"/>
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Toggle">
            <summary>
            Controls the visibility of a control based on another control
            </summary>
            <remarks>
            This control works by controlling the visibility of a control, client-side,
            with the value of a form element.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Toggle.Controller">
            <summary>
            Gets or sets the control that controls the visibility of the <see cref="P:VC3.Web.UI.Toggle.Area"/>
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Toggle.Area">
            <summary>
            Gets or sets the control to hide or show
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Toggle.When">
            <summary>
            Indicates when the <see cref="P:VC3.Web.UI.Toggle.Action"/> is performed on the <see cref="P:VC3.Web.UI.Toggle.Area"/>.
            Default = false.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Toggle.Action">
            <summary>
            Gets or sets the Action.
            Default = Hide.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Toggle.EvaluationMode">
            <summary>
            Gets or sets the EvaluationMode.
            Default = Literal.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ToggleButton.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:VC3.Web.UI.ToggleButton.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ToggleButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Raises the <see cref="E:VC3.Web.UI.ToggleButton.ValueChanged"/> event by calling <see cref="M:VC3.Web.UI.ToggleButton.OnValueChanged(System.EventArgs)"/>./&gt;
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ToggleButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to render the button
            </summary>
            <param name="w"></param>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ToolTip1">
            <summary>
            Gets or sets the tool tip to display in the button on link
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ToolTip2">
            <summary>
            Gets or sets the tool tip to display in the button on link
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageHeight1">
            <summary>
            Gets or sets the height of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageHeight2">
            <summary>
            Gets or sets the height of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageWidth1">
            <summary>
            Gets or sets the Width of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageWidth2">
            <summary>
            Gets or sets the Width of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageAlign1">
            <summary>
            Gets or sets the Alignment of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageAlign2">
            <summary>
            Gets or sets the Alignment of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageHSpace1">
            <summary>
            Gets or sets the Horizontal Spacing of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageHSpace2">
            <summary>
            Gets or sets the Horizontal Spacing of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageVSpace1">
            <summary>
            Gets or sets the Vertical Spacing of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.ImageVSpace2">
            <summary>
            Gets or sets the Vertical Spacing of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.DisabledImageUrl1">
            <summary>
            Gets or sets the Url of the DisabledImage, if the Type is set to "Image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.DisabledImageUrl2">
            <summary>
            Gets or sets the Url of the DisabledImage, if the Type is set to "Image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.CssClass1">
            <summary>
            Gets or sets the css class used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.CssClass2">
            <summary>
            Gets or sets the css class used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.CssStyle1">
            <summary>
            Gets or sets the css style attributes used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.CssStyle2">
            <summary>
            Gets or sets the css style attributes used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.Type">
            <summary>
            Gets or sets the button type.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.Enabled">
            <summary>
            Gets or sets the enabled property of the dialog button control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ToggleButton.CausesValidation">
            <summary>
            Gets or sets the enabled property of the dialog button control.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.MasterDetailList">
            <summary>
            Summary description for MasterDetailList.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.MasterDetailList.GroupCount">
            <summary>
            Gets GroupCount
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ReportItemEventArgs">
            <summary>
            Class that contains the data for 
            the ReportItem event. Derives from System.EventArgs.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ReportGroup">
            <summary>
            Summary description for ReportGroup.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SelectionType">
            <summary>
            Specifies whether a <see cref="T:VC3.Web.UI.GroupedCheckBox"/> is the select all
            check box, or a child check box of the group.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.GroupedCheckBox">
            <summary>
            Web control for client-side check all boxes functionality
            </summary>
        </member>
        <member name="M:VC3.Web.UI.GroupedCheckBox.GetSelectedItems(System.Web.UI.Control)">
            <summary>
            Gets an array of <see cref="T:VC3.Web.UI.GroupedCheckBox"/> instances contained within
            the specified parent control where SelectionType = Item and Checked = true.
            </summary>
            <param name="parent">The parent control to search for matching check boxes in</param>
            <remarks>
            The algorithm searches recursively through the entire control hierarchy,
            not just the current naming container.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.GroupedCheckBox.GetGroup(System.Web.UI.Control,System.String)">
            <summary>
            Gets an array of <see cref="T:VC3.Web.UI.GroupedCheckBox"/> instances contained within
            the specified parent control that match the specified group name.
            </summary>
            <param name="parent">The parent control to search for matching check boxes in</param>
            <param name="group">The group to match on, or null to match all groups</param>
            <remarks>
            The algorithm searches recursively through the entire control hierarchy,
            not just the current naming container.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.GroupedCheckBox.GetGroup(System.Web.UI.Control,System.String,System.Collections.ArrayList)">
            <summary>
            Recursively searches the control hierarchy searching for <see cref="T:VC3.Web.UI.GroupedCheckBox"/>
            instances that match the specified group.
            </summary>
            <param name="parent">The parent control to search for matching check boxes in</param>
            <param name="group">The group to match on, or null to match all groups</param>
            <param name="checkBoxes">A list of matching group boxes, populated recursively</param>
        </member>
        <member name="M:VC3.Web.UI.GroupedCheckBox.OnPreRender(System.EventArgs)">
            <summary>
            Registers the necessary scripts in the page to enable the check all
            checkbox to function automatically client-side.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.GroupedCheckBox.Value">
            <summary>
            Gets or sets the value associated with the check box.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.GroupedCheckBox.Group">
            <summary>
            Gets or sets the name of the group that links check boxes together.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.GroupedCheckBox.Type">
            <summary>
            Gets or sets the <see cref="T:VC3.Web.UI.SelectionType"/> for the check box.
            </summary>
            <remarks>
            Specify All for the select all check box, and Item for child check boxes
            of the group.
            </remarks>
        </member>
        <member name="T:VC3.Web.BaseApplication">
             <summary>
             Provides functionality common to most web applications.
             Derive the Global.asax class from this one to use it.
             </summary>
             
             <remarks>
             This class provides the following services:
             <list type="table">
             <item>
             <term>Automatic error notification</term>
             <description>
             Information about all unhandled exceptions will captured
             and broadcast using the <see cref="T:VC3.Diagnostics.Notifier"/>
             class.
             </description>
             </item>
             
             <item>
             <term>Automatic forms authentication integration</term>
             <description>
             Uses forms authentication in conjunction with 
             <see cref="T:VC3.Security.Authentication.AuthenticationManager"/>
             to provide authentication.
             </description>
             </item>
            
             </list>
             </remarks>
        </member>
        <member name="M:VC3.Web.BaseApplication.#ctor">
            <summary>
            Creates a new application
            </summary>
        </member>
        <member name="M:VC3.Web.BaseApplication.OnBeginRequest(System.Object,System.EventArgs)">
            <summary>
            Called by ASP.NET when the request begins
            </summary>
        </member>
        <member name="M:VC3.Web.BaseApplication.ReloadLicense">
            <summary>
            Reloads the current license
            </summary>
        </member>
        <member name="M:VC3.Web.BaseApplication.OnError(System.Object,System.EventArgs)">
            <summary>
            Called by ASP.NET when an unhandled exception occurs.
            </summary>
        </member>
        <member name="M:VC3.Web.BaseApplication.OnEndRequest(System.Object,System.EventArgs)">
            <summary>
            Called by ASP.NET when the request ends
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.BaseApplication.HandleError(System.Exception)">
            <summary>
            Called when the <see cref="E:System.Web.HttpApplication.Error"/> event is raised.
            Can be overridden in sub classes to handle errors in special ways.
            This implementation will report the error using the <see cref="T:VC3.Diagnostics.Notifier"/> class.
            </summary>
        </member>
        <member name="M:VC3.Web.BaseApplication.Restart">
            <summary>
            Attempts to cause the application to restart during the next request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.BaseApplication.SetCustomErrorInfo(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Allows applications to report custom error information.
            Called by <see cref="M:VC3.Web.BaseApplication.HandleError(System.Exception)"/>.
            </summary>
            <param name="info">Additional information</param>
        </member>
        <member name="M:VC3.Web.BaseApplication.FormsAuthentication_OnAuthenticate(System.Object,System.Web.Security.FormsAuthenticationEventArgs)">
            <summary>
            Called by the ASP.NET forms authentication module to authenticate a request.
            Automatically renews tickets on every request if <see cref="P:System.Web.Security.FormsAuthentication.SlidingExpiration"/>
            is true. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.BaseApplication.SignIn(VC3.Security.Authentication.AuthenticationContext,System.String,System.String)">
            <summary>
            Verifies the username and password combination, establishes
            an authenticated session for the user.  Authentication is performed
            by the <see cref="T:VC3.Security.Authentication.AuthenticationManager"/>
            based on the settings in the web.config file.
            </summary>
            <param name="context">Context used to qualify the username</param>
            <param name="username">The user to sign in</param>
            <param name="password">The user's password</param>
        </member>
        <member name="M:VC3.Web.BaseApplication.SignInAndRedirect(VC3.Security.Authentication.AuthenticationContext,System.String,System.String,System.String)">
            <summary>
            Verifies the username and password combination, establishes
            an authenticated session for the user, and redirects the user
            to the page they intended to access.  Authentication is performed
            by the <see cref="T:VC3.Security.Authentication.AuthenticationManager"/>
            based on the settings in the web.config file.
            </summary>
            <param name="context">Context used to qualify the username</param>
            <param name="username">The user to sign in</param>
            <param name="password">The user's password</param>
            <param name="defaultRedirectUrl">Default url to redirect to if not specified in the querystring</param>
        </member>
        <member name="M:VC3.Web.BaseApplication.SignInAndRedirect(VC3.Security.Authentication.AuthenticationContext,System.String,System.String)">
            <summary>
            Verifies the username and password combination, establishes
            an authenticated session for the user, and redirects the user
            to the page they intended to access.  Authentication is performed
            by the <see cref="T:VC3.Security.Authentication.AuthenticationManager"/>
            based on the settings in the web.config file.
            </summary>
            <param name="context">Context used to qualify the username</param>
            <param name="username">The user to sign in</param>
            <param name="password">The user's password</param>
        </member>
        <member name="M:VC3.Web.BaseApplication.RedirectAfterSignIn(System.String)">
            <summary>
            Redirects the user to the page they were trying to access prior to them
            being authenticated.
            </summary>
            <param name="defaultRedirectUrl">Default url to redirect to if not specified in the querystring</param>
        </member>
        <member name="M:VC3.Web.BaseApplication.SignOut">
            <summary>
            Immediately ends the user's authenticated session.
            </summary>
        </member>
        <member name="P:VC3.Web.BaseApplication.StartupTime">
            <summary>
            Gets the time that the application was started
            </summary>
        </member>
        <member name="P:VC3.Web.BaseApplication.License">
            <summary>
            Gets the license for the current application.
            </summary>
        </member>
        <member name="P:VC3.Web.BaseApplication.IsLicensed">
            <summary>
            True if this application has a <see cref="P:VC3.Web.BaseApplication.License"/>
            </summary>
        </member>
        <member name="P:VC3.Web.BaseApplication.Version">
            <summary>
            Gets the version number of the application from the 
            <see cref="P:VC3.Web.BaseApplication.License"/> or the Assembly of the runtime type
            of this class (should be in the web application's assembly).
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DummyDataSource">
            <summary>
            The DummyDataSource class provides the ability to
            create the control hiearchy on postback. 
            </summary> 
        </member>
        <member name="T:VC3.Web.UI.DatePicker">
            <summary>
            Control for displaying a popup calendar control on a web form
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DatePicker.OnDateChanged(System.EventArgs)">
            <summary>
            Event handler that fires whenever the date or time is modified.  A postback
            is only fired if AutoPostBack is set to true.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.DatePicker.OnPreRender(System.EventArgs)">
            <summary>
            determine the level of scripting support
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.DatePicker.CreateChildControls">
            <summary>
             Create each control that needs to be added to the page
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.AutoPostBack">
            <summary>
            Determines whether or not a postback event is fired when an event handler is assigned
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.Value">
            <summary>
             The value of the control (DateTime)
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.Text">
            <summary>
             The value of the control (DateTime)
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.ShowDate">
            <summary>
            If true, the date part of the DateTime will be available for editing.
            Default = true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.ShowTime">
            <summary>
            If true, the time part of the DateTime will be available for editing.
            Default = false.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.DefaultDate">
            <summary>
            Gets or sets the value to be used if one is not specified by the user.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.DefaultTime">
            <summary>
            Gets or sets the value to be used if one is not specified by the user.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.MaximumValue">
            <summary>
            The maximum value for the control to display
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.MinimumValue">
            <summary>
            The minimum value for the control to display
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.Width">
            <summary>
            Gets or sets the width of the control in pixels, or other web units of measurement.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.FormatExpression">
            <summary>
            Gets or sets the regular expression to use when parsing user input.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.ReformatExpression">
            <summary>
            Gets or sets the format to use when reformatting user input based
            on the specified <see cref="P:VC3.Web.UI.DatePicker.FormatExpression"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.CssClass">
            <summary>
            Gets or sets the css class used to format the textbox
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DatePicker.DownLevelText">
            <summary>
            Gets or sets the display to be used in place of the control
            when <see cref="M:VC3.Web.UI.DatePicker.DetermineRenderUpLevel"/> returns false
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DataList">
            <summary>
            Provides extended functionality over the core <see cref="T:System.Web.UI.WebControls.DataList"/>
            class by implementing <see cref="T:VC3.Web.UI.ISourceProvider"/> and <see cref="T:VC3.Web.UI.ISourceConsumer"/> to
            expose data to child controls, such as <see cref="T:VC3.Web.UI.Field"/> instances.
            
            Also allows default formatting and settings to be specified in the Web.config file.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ISourceProvider">
            <summary>
            Defines the methods that must be implemented by a class in order to act
            as a container and datasource for <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ITemplateProvider">
            <summary>
            Defines the methods that must be implemented by a class in order to act
            as a container and datasource for <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ITemplateProvider.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.ITemplateProvider.ConfigurationTemplate"/> for the container,
            which child controls may also use to derive configuration settings.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ISourceProvider.RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.ISourceProvider.GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="P:VC3.Web.UI.ISourceProvider.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ISourceProvider.SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ISourceProvider.ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/>
             is a list type, or <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/> itself if it is not a list.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataList.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.DataList"/> and initializes
            <see cref="T:VC3.Web.UI.SourceManager"/> to track source information for the list.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataList.MergeWith(VC3.Web.UI.DataList)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.DataList"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.DataList"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.DataList.OnInit(System.EventArgs)">
            <summary>
            Merges settings with the current <see cref="T:VC3.Web.UI.ConfigurationTemplate"/>.
            </summary>
            <param name="e">The Init event args</param>
        </member>
        <member name="M:VC3.Web.UI.DataList.VC3#Web#UI#ISourceProvider#RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.DataList.VC3#Web#UI#ISourceProvider#GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="M:VC3.Web.UI.DataList.UpdateSource">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataList.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.DataList.CommitChanges">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> on the data source
            if the instance implements <see cref="T:VC3.ComponentModel.ICommittable"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the data list and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.DataList.DataSource">
            <summary>
            Exposes the data identified by the <see cref="P:VC3.Web.UI.DataList.Source"/> property
            if a datasource is not explicitly assigned.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.Source">
            <summary>
            The property name or source path to data for the list.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.VC3#Web#UI#ITemplateProvider#ConfigurationTemplate">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the data grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.VC3#Web#UI#ISourceProvider#SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataList.VC3#Web#UI#ISourceProvider#ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/>
             is a list type, or <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/> itself if it is not a list.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DialogVersion">
            <summary>
            Which implementation of dialog boxes should be used
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ScriptRegistrationMode">
            <summary>
            How should scripts be registered?
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Settings.GetTemplate(System.String)">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> with the specified name.
            </summary>
            <param name="name">The name of the template</param>
            <returns>
            The requested template, or null if no template exists with the specified name
            </returns>
        </member>
        <member name="M:VC3.Web.UI.Settings.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Loads configuration information for the VC3.Web.UI namespace.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Settings.DefaultTemplate">
            <summary>
            Gets the default <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the site.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Settings.DialogVersion">
            <summary>
            Gets the type of dialogs to use for the site.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Settings.JQueryThemeDirectory">
            <summary>
            Gets path to the JQuery theme to use for the site. If not set in web.config, the default theme
            includeding with VC3.Web will be used.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Settings.JQueryRegistration">
            <summary>
            Determines when the JQuery script library should be included in pages
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ConfigurationTemplate">
            <summary>
            Caches configuration information for the default or named
            user interface setting templates that affect the behavior
            and appearance of the <see cref="T:VC3.Web.UI.Form"/>, <see cref="T:VC3.Web.UI.Field"/>,
            <see cref="T:VC3.Web.UI.DataGrid"/>, and <see cref="T:VC3.Web.UI.DataList"/> controls.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ConfigurationTemplate.#ctor(VC3.Web.UI.ConfigurationTemplate,System.Xml.XmlElement)">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> with the
            specified parent default settings, and the additional settings
            defined in the template XML data.
            </summary>
            <param name="parent">The parent template to inherit settings from</param>
            <param name="template">The XML data to pull override settings from</param>
        </member>
        <member name="M:VC3.Web.UI.ConfigurationTemplate.#ctor(VC3.Web.UI.ConfigurationTemplate,System.String)">
            <summary>
            Creates a new <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> with the
            specified parent default settings, and the additional settings
            defined in the template XML data.
            </summary>
            <param name="parent">The parent template to inherit settings from</param>
            <param name="url">The url to the XML data file to pull override settings from</param>
        </member>
        <member name="M:VC3.Web.UI.ConfigurationTemplate.LoadSettings(System.Xml.XmlElement)">
            <summary>
            Loads configuration settings from the specified template element
            </summary>
            <param name="template">The root element containing template settings</param>
        </member>
        <member name="M:VC3.Web.UI.ConfigurationTemplate.CopyAttributes(System.Xml.XmlElement,System.Object)">
            <summary>
            Copies attributes from the source XML into corresponding
            properties on the destination object.
            </summary>
            <param name="source">The attribute source</param>
            <param name="destination">The destination object</param>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.Name">
            <summary>
            Gets the name of the template.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.FormTemplate">
            <summary>
            Gets the template settings for <see cref="T:VC3.Web.UI.Form"/> controls.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SectionTemplate">
            <summary>
            Gets the template settings for <see cref="T:VC3.Web.UI.Section"/> controls.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.DataListTemplate">
            <summary>
            Gets the template settings for <see cref="T:VC3.Web.UI.DataList"/> controls.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.DataGridTemplate">
            <summary>
            Gets the template settings for <see cref="T:VC3.Web.UI.DataGrid"/> controls.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SecureButtonTemplate">
            <summary>
            Gets the template settings for the <see cref="T:VC3.Web.UI.SecureButton"/> controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SecureLinkTemplate">
            <summary>
            Gets the template settings for the <see cref="T:VC3.Web.UI.SecureLink"/> controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SecureLinkButtonTemplate">
            <summary>
            Gets the template settings for the <see cref="T:VC3.Web.UI.SecureLinkButton"/> controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SecureRadioButtonTemplate">
            <summary>
            Gets the template settings for the <see cref="T:VC3.Web.UI.SecureRadioButton"/> controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ConfigurationTemplate.SecureDialogButtonTemplate">
            <summary>
            Gets the template settings for the <see cref="T:VC3.Web.UI.SecureDialogButton"/> controls
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Repeater">
            <summary>
            Provides extended functionality over the core <see cref="T:System.Web.UI.WebControls.Repeater"/>
            class by implementing <see cref="T:VC3.Web.UI.ISourceProvider"/> and <see cref="T:VC3.Web.UI.ISourceConsumer"/> to
            expose data to child controls, such as <see cref="T:VC3.Web.UI.Field"/> instances.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Repeater.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.DataGrid"/> and initializes a
            <see cref="T:VC3.Web.UI.SourceManager"/> to track source information for the repeater.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Repeater.VC3#Web#UI#ISourceProvider#RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.Repeater.VC3#Web#UI#ISourceProvider#GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="M:VC3.Web.UI.Repeater.UpdateSource">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Repeater.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.Repeater.CommitChanges">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> on the data source
            if the instance implements <see cref="T:VC3.ComponentModel.ICommittable"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Repeater.OnDataBinding(System.EventArgs)">
            <summary>
            Instantiates the NoDataTemplate if Items.Count == 0
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.Repeater.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the repeater and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Repeater.NoDataTemplate">
            <summary>
            If source contains no items, the the NoDataTemplate will be rendered.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.DataSource">
            <summary>
            Exposes the data identified by the <see cref="P:VC3.Web.UI.Repeater.Source"/> property
            if a datasource is not explicitly assigned.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.Source">
            <summary>
            The property name or source path to data for the repeater.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.VC3#Web#UI#ITemplateProvider#ConfigurationTemplate">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the data grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.VC3#Web#UI#ISourceProvider#SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Repeater.VC3#Web#UI#ISourceProvider#ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/>
             is a list type, or <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/> itself if it is not a list.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureUrl">
            <summary>
            Formats and validates user access to page urls.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.GetUrlForMethod(System.String,System.Type[])">
            <summary>
            Locates a UrlFor method on a type near the current type with the specified arguments.
            </summary>
            <param name="urlFor">The partially-qualified or unqualified name of the type that has a UrlFor method</param>
            <param name="arguments">The type of arguments the method has</param>
            <returns>The requested method if found, otherwise null</returns>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.Parse(System.String)">
            <summary>
            Converts a url string into a <see cref="T:VC3.Web.UI.SecureUrl"/> instance,
            which requires no permissions to access.
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.ToString">
            <summary>
            Overriden to return the string representation of the url, or
            null if the user does not have the necessary permissions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.Redirect">
            <summary>
            Redirects the user to the current url.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.op_Implicit(VC3.Web.UI.SecureUrl)~System.String">
            <summary>
            Implicitly converts a <see cref="T:VC3.Web.UI.SecureUrl"/> instance into a
            <see cref="T:System.String"/> by returning the <see cref="P:VC3.Web.UI.SecureUrl.Url"/>
            property value.
            </summary>
            <param name="url">The <see cref="T:VC3.Web.UI.SecureUrl"/> to convert</param>
            <returns>The <see cref="P:VC3.Web.UI.SecureUrl.Url"/> property value</returns>
        </member>
        <member name="M:VC3.Web.UI.SecureUrl.op_Implicit(System.String)~VC3.Web.UI.SecureUrl">
            <summary>
            Implicitly converts a url string into a <see cref="T:VC3.Web.UI.SecureUrl"/> instance,
            which requires no permissions to access.
            </summary>
            <param name="url">The url to convert</param>
            <returns>The corresponding <see cref="T:VC3.Web.UI.SecureUrl"/> value</returns>
        </member>
        <member name="P:VC3.Web.UI.SecureUrl.Url">
            <summary>
            Gets the formatted url if allowed, or null if the user
            does not have sufficient permissions.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureUrl.Permission">
            <summary>
            Gets the permission used to control access to this url.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureUrl.IsAllowed">
            <summary>
            Indicates whether the current user has permission to perform
            one or more of the specified tasks.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureUrl.NoPermissionMessage">
            <summary>
            Gets a message to display if the user is not allowed to
            access the secure url.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DisplayMode">
            <summary>
            Controls whether the web control will display
            </summary>
        </member>
        <member name="F:VC3.Web.UI.DisplayMode.Always">
            <summary>
            Will always display this control regarless of whether the control
            is enabled/disabled due to permission checks
            </summary>
        </member>
        <member name="F:VC3.Web.UI.DisplayMode.Authorized">
            <summary>
            Will always display this control if the user is 
            authorized to perform this operation but currently
            cannot perform this operation because of business
            rules
            </summary>
        </member>
        <member name="F:VC3.Web.UI.DisplayMode.Allowed">
            <summary>
            Will display the control only if the current user is
            allowed to perform the operation; else the control
            will be hidden
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ControlVisibility">
            <summary>
            Indicates whether a control show be enabled and
            display as normal, disabled and appear be not be
            selectable, or hidden and not displayed in the UI
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureControlHelper">
            <summary>
            Provides common functionality for secure controls
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureControlHelper.#cctor">
            <summary>
            Initializes a static cache of UrlFor methods for the entire assembly.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureControlHelper.GetControlVisilibity(VC3.Web.UI.SecureUrl,VC3.ComponentModel.Permission,VC3.Web.UI.DisplayMode)">
            <summary>
            Gets the visibilty of this control based on a <see cref="T:VC3.ComponentModel.Permission"/> 
            and a controls <see cref="T:VC3.Web.UI.DisplayMode"/>
            </summary>
            <param name="displayMode">The display mode of the control</param>
        </member>
        <member name="M:VC3.Web.UI.SecureControlHelper.GetUrlForMethod(System.String,System.Type[])">
            <summary>
            Locates a UrlFor method on a type near the current type with the specified arguments.
            </summary>
            <param name="urlFor">The partially-qualified or unqualified name of the type that has a UrlFor method</param>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="T:VC3.Web.UI.SecureRadioButton">
            <summary>
            Subclass of ASP radio button to simplify security checks
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureRadioButton.MergeWith(VC3.Web.UI.SecureRadioButton)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.SecureRadioButton"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.SecureRadioButton"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.SecureRadioButton.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureRadioButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.TemplateInternal">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureRadioButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.Permission">
            <summary>
            Gets or sets a semicolon separated set of task codes for tasks
            the user must have permission to perform in order for the control
            to be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.DisplayMode">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureRadioButton.DisplayMode"/> of this controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.Enabled">
            <summary>
            Indicates whether the radio button should be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureRadioButton.Visible">
            <summary>
            Indicates whether the radio button should be visible.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureButton">
            <summary>
            Subclass of ASP button to simplify security checks
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureButton.MergeWith(VC3.Web.UI.SecureButton)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.SecureButton"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.SecureButton"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.SecureButton.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.TemplateInternal">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.Permission">
            <summary>
            Gets or sets a semicolon separated set of task codes for tasks
            the user must have permission to perform in order for the control
            to be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.Enabled">
            <summary>
            Indicates whether the button should be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.Visible">
            <summary>
            Indicates whether the button should be visible.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureButton.DisplayMode">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureButton.DisplayMode"/> of this controls
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureDialogButton">
            <summary>
            Subclass of ASP button to simplify security checks
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DialogButton">
            <summary>
            Control for working with dialog boxes. Renders a link or
            a button on the page, that when clicked, opens a dialog box.  When
            dialog box is closed, the <see cref="E:VC3.Web.UI.Dialog.Submit"/> event will be raised.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Dialog">
            <summary>
            Server control with no visible user interface that
            is used to open dialog boxes and receive submit events 
            when they are closed.
            </summary>
            <remarks>
            
            This control has the following responsibilities:
            <list type="table">
            
            <item>
            <term>Opening a dialog box</term>
            <description>
            The <see cref="M:VC3.Web.UI.Dialog.OpenDialog"/> method will cause a dialog box
            to be displayed when the page response is sent.  Also, <see cref="P:VC3.Web.UI.Dialog.OpenDialogScript"/>
            contains a javascript statement that can be called client-side that will open the dialog box.
            </description>
            </item>
            
            <item>
            <term>Raising the dialog submit event</term>
            <description>
            The <see cref="E:VC3.Web.UI.Dialog.Submit"/> event is raised when a dialog
            box is closed using one of the CloseDialog
            methods.  This is the primary purpose of using a control to open a dialog
            box b/c post-back events must be raised by a control in the page.
            </description>
            </item>
            
            </list>
            
            <para>
            This control can also be subclassed in order to encapsulate
            a dialog box's properties such as width and height by overridding
            OnInit:
            <code>
            	public class MyDialog : Dialog
            	{
            		protected override void OnInit(EventArgs e)
            		{
            			Width		= "500";
            			Height		= "300";
            			Scrollable	= false;
            			Url			= MyDialogPage.UrlFor();
            		
            		base.OnInit (e);
            		}
            	}
            </code>
            </para>
            
            <seealso cref="T:VC3.Web.UI.BaseDialogPage"/>
            <seealso cref="T:VC3.Web.UI.DialogButton"/>
            <seealso cref="T:VC3.Web.UI.DialogSubmitEventHandler"/>
            <seealso cref="T:VC3.Web.UI.DialogSubmitEventArgs"/>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.Dialog.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Captures the post-back event and raises the correct event.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:VC3.Web.UI.Dialog.OnSubmit(VC3.Web.UI.DialogSubmitEventArgs)">
            <summary>
            Called to raise the <see cref="E:VC3.Web.UI.Dialog.Submit"/> event.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Dialog.OpenDialog">
            <summary>
            Opens a dialog as the page loads based on the property values
            specified on this control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Dialog.CloseDialog(System.Object)">
            <summary>
            Returns script to client to close the dialog. The return
            value will be serialized and will be available in the 
            <see cref="P:VC3.Web.UI.DialogSubmitEventArgs.ReturnValue"/> property.
            </summary>
            <param name="returnValue">object to return to the page that opened the dialog box</param>
        </member>
        <member name="M:VC3.Web.UI.Dialog.CloseDialog(System.String)">
            <summary>
            Includes script in the page to close the dialog bos and return the string
            value specified
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:VC3.Web.UI.Dialog.CloseDialogAndRedirect(System.String)">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
            <param name="url">Url to redirect to</param>
        </member>
        <member name="M:VC3.Web.UI.Dialog.CloseDialogAndRefresh">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Dialog.CloseDialogAndRedirect(System.String,System.Web.UI.Page)">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
            <param name="url">Url to redirect to</param>
        </member>
        <member name="M:VC3.Web.UI.Dialog.GetCloseDialogScript(System.String)">
            <summary>
            Gets a javascript statement that can be used to close the dialog
            while returning no value.
            </summary>
            <param name="returnValue">String value to return to opener</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Dialog.GetCloseDialogScript">
            <summary>
            Gets a javascript statement that can be used to close the dialog
            while returning no value.  Useful for canceling.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Dialog.GetCloseDialogScript(System.String,System.String)">
            <summary>
            Utility method for generating a client script statement to close the dialog box
            </summary>
            <param name="returnExpr"></param>
            <param name="typeExpr"></param>
        </member>
        <member name="E:VC3.Web.UI.Dialog.Submit">
            <summary>
            Raised when the dialog is closed using one of the 
            CloseDialog methods.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Title">
            <summary>
            Gets or sets the title of the dialog box
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Url">
            <summary>
            Gets or sets the Url to load into the modal dialog
            when the button is clicked
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.AbsoluteUrl">
            <summary>
            Gets the abosolute url based on the <see cref="P:VC3.Web.UI.Dialog.Url"/> property.
            </summary>
            <remarks>
            If the <see cref="P:VC3.Web.UI.Dialog.Url"/> property is already absolute, the
            <see cref="P:VC3.Web.UI.Dialog.AbsoluteUrl"/> will be the same as the <see cref="P:VC3.Web.UI.Dialog.Url"/>.
            If the <see cref="P:VC3.Web.UI.Dialog.Url"/> is relative, <see cref="M:System.Web.UI.Control.ResolveUrl(System.String)"/> will
            be used to convert the relative url into an absolute url.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Width">
            <summary>
            Gets or sets the width of the dialog box in pixels.
            Default = 400.  
            If the screen resolution is not the default
            Windows resolution of 96dpi, this value will be scaled accordingly.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Height">
            <summary>
            Gets or sets the height of the dialog box in pixels.
            Default = 500.
            If the screen resolution is not the default
            Windows resolution of 96dpi, this value will be scaled accordingly.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Resizable">
            <summary>
            If true, the dialog box will be resizable.
            Defaults to true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.Scrollable">
            <summary>
            If true, the dialog box contents will be scrollable.
            Defaults to true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.CommandArgument">
            <summary>
            Gets or set a value that will be included in the <see cref="E:VC3.Web.UI.Dialog.Submit"/> event's
            <see cref="P:VC3.Web.UI.DialogSubmitEventArgs.CommandArgument"/> property.
            Can be used in the same way a <see cref="P:System.Web.UI.WebControls.Button.CommandArgument"/> is used.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.DialogArgument">
            <summary>
            Gets or sets the arguments to pass to the dialog box.
            Inside the dialog this value can be accessed
            via the <see cref="P:VC3.Web.UI.BaseDialogPage.DialogArgument"/> property.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.ClientID">
            <summary>
            Overrided to ensure that the variable declared based on the client 
            identifier is not a reserved word in JavaScript.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Dialog.OpenDialogScript">
            <summary>
            Gets a Javascript statement that can be
            used on the client to open the dialog box.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DialogButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to render the button
            </summary>
            <param name="w"></param>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.Text">
            <summary>
            Gets or sets the text to display in the button on link
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ToolTip">
            <summary>
            Gets or sets the tool tip to display in the button on link
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.Type">
            <summary>
            Gets or sets the button type.  "button", "image", "link" or "imageinput".
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageHeight">
            <summary>
            Gets or sets the height of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageWidth">
            <summary>
            Gets or sets the width of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.AccessKey">
            <summary>
            Gets or sets the access key 
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageUrl">
            <summary>
            Gets or sets the Url of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageAlt">
            <summary>
            Gets or sets the Alt of the Image(tooltip), if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageAlign">
            <summary>
            Gets or sets the Alignment of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.ImageHSpace">
            <summary>
            Gets or sets the Horizontal Spacing of the Image, if the Type is set to "image"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.DisabledImageUrl">
            <summary>
            Gets or sets the Url of the DisabledImage, if the Type is set to "DisabledImage"
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.CssClass">
            <summary>
            Gets or sets the css class used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.DisabledCssClass">
            <summary>
            Gets or sets the css class used to format the button if it is disabled
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.CssStyle">
            <summary>
            Gets or sets the css style attributes used to format the button
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.Enabled">
            <summary>
            Gets or sets the enabled property of the dialog button control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DialogButton.CausesValidation">
            <summary>
            Indicates if controls on the page must be validated in order for
            the dialog box to be opened. Default: false.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureDialogButton.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.SecureDialogButton.MergeWith(VC3.Web.UI.SecureDialogButton)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.SecureDialogButton"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.SecureDialogButton"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.SecureDialogButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overriden to allow Pre/Post text to be displayed along with the 
            link if the link is visible. This Pre/Post text will be appear
            before/after the hyperlink, respecitively and provide a simple
            mean to include text before/after the link.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Permission">
            <summary>
            Gets or sets a semicolon separated set of task codes for tasks
            the user must have permission to perform in order for the control
            to be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureDialogButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.TemplateInternal">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureDialogButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Header">
            <summary>
            Gets or sets the path to the user control that
            will be used when rendering the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Footer">
            <summary>
            Gets or sets the path to the user control that
            will be used when rendering the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Enabled">
            <summary>
            Indicates whether the dialog button should be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.Visible">
            <summary>
            Indicates whether the dialog button should be visible.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.DisplayMode">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureDialogButton.DisplayMode"/> of this controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.SecureUrl">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureDialogButton.SecureUrl"/> property of this control
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureDialogButton.UrlFor">
            <summary>
            Sets the <see cref="P:VC3.Web.UI.SecureDialogButton.SecureUrl"/> property by evaluating the UrlFor method
            that takes no arguments on the specified page.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureLink">
            <summary>
            Subclass of ASP HyperLink to simplify security checks
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureLink.MergeWith(VC3.Web.UI.SecureLink)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.SecureButton"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.SecureButton"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.SecureLink.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overriden to render the optional header control
            if one exists before the begin tag for this control
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:VC3.Web.UI.SecureLink.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overriden to render the optional footer control
            if one exists before the end tag for this control
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:VC3.Web.UI.SecureLink.CreateChildControls">
            <summary>
            Dynamically creates navigation elements based on navigation information and templates.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureLink.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Permission">
            <summary>
            Gets or sets a semicolon separated set of task codes for tasks
            the user must have permission to perform in order for the control
            to be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.SecureNavigateUrl">
            <summary>
            Gets or sets the <see cref="T:VC3.Web.UI.SecureUrl"/> property of this control
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.UrlFor">
            <summary>
            Sets the <see cref="P:VC3.Web.UI.SecureLink.SecureNavigateUrl"/> property by evaluating the UrlFor method
            that takes no arguments on the specified page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Header">
            <summary>
            Gets or sets the path to the user control that
            will be used when rendering the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Footer">
            <summary>
            Gets or sets the path to the user control that
            will be used when rendering the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Enabled">
            <summary>
            Indicates whether the link should be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Visible">
            <summary>
            Indicates whether the link should be visible.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.DisplayMode">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureLink.DisplayMode"/> of this controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureLink.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SecureLink.TemplateInternal">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureLink.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureLinkButton">
            <summary>
            Subclass of ASP button to simplify security checks
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureLinkButton.MergeWith(VC3.Web.UI.SecureLinkButton)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.SecureLinkButton"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.SecureLinkButton"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.SecureLinkButton.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.SecureLinkButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overriden to allow header and footer to be displayed along with the 
            link if the link is visible.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.ConfigurationTemplate">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureLinkButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.TemplateInternal">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.SecureLinkButton.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Permission">
            <summary>
            Gets or sets a semicolon separated set of task codes for tasks
            the user must have permission to perform in order for the control
            to be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.DisplayMode">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SecureLinkButton.DisplayMode"/> of this controls
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Enabled">
            <summary>
            Indicates whether the link button should be enabled.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Visible">
            <summary>
            Indicates whether the link button should be visible.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Header">
            <summary>
            Optional template that is included before the link if it exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SecureLinkButton.Footer">
            <summary>
            Optional template that is included after the link if it exists.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SecureColumn">
            <summary>
            Subclass of <see cref="T:VC3.Web.UI.PropertyColumn"/> to simplify security checks.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.PropertyColumn">
            <summary>
            Subclass of <see cref="T:System.Web.UI.WebControls.DataGridColumn"/> designed to automatically
            
            </summary>
        </member>
        <member name="F:VC3.Web.UI.PropertyColumn.NoGrouping">
            <summary>
            Constants that control row grouping as defined by
            the <see cref="P:VC3.Web.UI.PropertyColumn.GroupOrder"/> property.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.PropertyColumn.GetValue(VC3.ComponentModel.PropertyReflector,System.Object)">
            <summary>
            Gets the string representation of the value for the specified 
            property and instance.
            </summary>
            <param name="property">The <see cref="T:VC3.ComponentModel.PropertyReflector"/> the column represents</param>
            <param name="instance">The instance for the current row in the grid</param>
        </member>
        <member name="M:VC3.Web.UI.PropertyColumn.OnDataBindItem(System.Object,System.EventArgs)">
            <summary>
            Handles the binding of table cells.
            </summary>
            <param name="sender">The <see cref="T:System.Web.UI.WebControls.TableCell"/> being bound</param>
            <param name="e">Databinding event arguments</param>
        </member>
        <member name="M:VC3.Web.UI.PropertyColumn.DataBindItem(VC3.ComponentModel.PropertyReflector,System.Object,System.Web.UI.WebControls.TableCell)">
            <summary>
            Databinds the current cell using the specified property and instance.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.PropertyColumn.DataBindItem(VC3.ComponentModel.PropertyReflector,VC3.ComponentModel.PropertyReflector,System.Object,System.Web.UI.WebControls.TableCell)">
            <summary>
            Databinds the current cell using the specified property and instance.
            </summary>
            <param name="textProperty">The <see cref="T:VC3.ComponentModel.PropertyReflector"/> the column represents</param>
            <param name="toolTipProperty">The <see cref="T:VC3.ComponentModel.PropertyReflector"/> to use to generate tooltips</param>
            <param name="instance">The instance for the current row in the grid</param>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> being databound</param>
        </member>
        <member name="M:VC3.Web.UI.PropertyColumn.GetPropertyReflector(System.Web.UI.WebControls.DataGrid,System.String)">
            <summary>
            Returns a <see cref="T:VC3.ComponentModel.PropertyReflector"/> for the property indicated by source within the DataGrid's DataSource
            </summary>
            <param name="grid">The <see cref="T:System.Web.UI.WebControls.DataGrid"/> whose DataSource will be searched</param>
            <param name="source">The name of the Property for which to retrieve a PropertyReflector"/&gt;</param>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.Source">
            <summary>
            The property name or source path to data for the column.
            The referenced property must be exposed by the <see cref="P:VC3.Web.UI.DataGrid.DataSource"/>
            property of the parent <see cref="T:VC3.Web.UI.DataGrid"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.ToolTipSource">
            <summary>
            The property name or source path used to display a toolTip
            for each item in the grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.ToolTip">
            <summary>
            The static tooltip to display for all item cells in the column
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.Link">
            <summary>
            Specifies either the name of the page, or the name of a static method
            on a page, to use in order to automatically link the data for the column
            to snother page.
            </summary>
            <remarks>
            <para>
            If the name of a page is specified, such as "EditSomeObject", the column
            will generate a link to the page using the <see cref="T:System.ComponentModel.TypeConverter"/>
            implementation of the row instance to convert the instance to a string
            identifier, such as "123".  The resulting url will be of the form
            "EditSomeObject.aspx?id=123".
            </para>
            <para>
            If a static method on another page is specified, such as
            "EditSomeObject.UrlFor", the column will locate the method on the specified
            page class, looking for a signature that takes a single paramenter of type
            "SomeObject" and returns a <see cref="T:System.String"/>.  The column will
            invoke the method for each row and use the result as the full url for the link.
            </para>
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.AllowSorting">
            <summary>
            Specifies whether the column should allow sorting,
            which defaults to true
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.SortOrder">
            <summary>
            Gets or sets the default sort order the <see cref="T:VC3.Web.UI.PropertyColumn"/>
            is first sorted on.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.SortDirection">
            <summary>
            Gets or sets the default sort direction the <see cref="T:VC3.Web.UI.PropertyColumn"/>
            is first sorted on.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.SortExpression">
            <summary>
            Overrides the sort expression to return the property
            source if an expression is not specified.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.NullValue">
            <summary>
            Gets or sets the value to display when the source property
            or path is undefined.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.ListType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the items in the list
            the <see cref="T:VC3.Web.UI.DataGrid"/> is bound to.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.GroupOrder">
            <summary>
            Gets or sets a value that indicates the grouping order
            when performing rowspanning.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.ItemFormat">
            <summary>
            Format specifier used to format cells.  When set, overrides the default formatting
            of the property.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.ItemText">
            <summary>
            When set, this value will be displayed instead of
            the property value.
            </summary>
        </member>
        <member name="E:VC3.Web.UI.PropertyColumn.DataBinding">
            <summary>
            Raised before the column is databound to enable
            databinding expressions on the <see cref="T:VC3.Web.UI.PropertyColumn"/> declaration.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.PropertyColumn.BindingContainer">
            <summary>
            Gets the binding container to enable
            databinding expressions on the <see cref="T:VC3.Web.UI.PropertyColumn"/> declaration.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureColumn.Initialize">
            <summary>
            Caches the <see cref="T:System.Reflection.MethodInfo"/> for the associated UrlFor method.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SecureColumn.DataBindItem(VC3.ComponentModel.PropertyReflector,System.Object,System.Web.UI.WebControls.TableCell)">
            <summary>
            Binds the <see cref="P:System.Web.UI.WebControls.TableCell.Text"/> property to either an enabled or disabled hyperlink
            based on the <see cref="T:VC3.Web.UI.SecureUrl"/> instance returned by the UrlFor method.
            </summary>
            <param name="property">The <see cref="T:VC3.ComponentModel.PropertyReflector"/> the column represents</param>
            <param name="instance">The instance for the current row in the grid</param>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell"/> being databound</param>
        </member>
        <member name="P:VC3.Web.UI.SecureColumn.UrlFor">
            <summary>
            Gets or sets the target page the link is intended to access.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.BasePage">
            <summary>
            Base class that can be used to simplify the creation of app-specific pages.
            </summary>
            <remarks>
            <para>
            The typical usage of this page is to have an app-specific BasePage that all other
            pages in the application derive from. For example:
            <code>
            namespace MyApp
            {
            	public class BasePage : VC3.Web.UI.BasePage
            	{
            		...
            	}
            }
            </code>
            </para>
            
            <para>
            The BasePage class has the following functionality
            available to classes that derive from it:
            
            <list type="table">
            <listheader>
            <term>Feature</term>
            <description>Overview</description>
            </listheader>
            
            <item>
            <term>Resource lookup</term>
            <description>
            For applications requiring the use of resource files,
            the BasePage class simplifies access to them.  The <see cref="P:VC3.Web.UI.BasePage.Resource"/>
            can be used to make resources easily accesible on every page that derives from
            BasePage. For example:
            <c>Page.Resources["ResourceName"]</c>
            </description>
            </item>
            
            <item>
            <term>Common HTML rendering</term>
            <description>
            For pages requiring a <see cref="P:VC3.Web.UI.BasePage.DTD"/> to be included at the top of a page 
            it can be set via the <see cref="P:VC3.Web.UI.BasePage.DTD"/> property.
            </description>
            </item>
            
            <item>
            <term>User interface behavior</term>
            <description>
            Common client-side actions can be performed via the <see cref="P:VC3.Web.UI.BasePage.Browser"/> property.
            </description>
            </item>
            
            <item>
            <term>Default UrlFor</term>
            <description>
            Provides a default implementation of UrlFor for a page instance to
            enable pages to automatically be hooked into the <see cref="T:VC3.Web.UI.Breadcrumb"/>
            control.
            </description>
            </item>
            
            <item>
            <term>Double-submit prevention</term>
            <description>
            Prevents a page from being submitted twice when a
            user double clicks a submit button.
            </description>
            </item>
            
            <item>
            <term>ViewState plus</term>
            <description>
            Provides a way to limit amount of ViewState data sent to clients.  Also,
            allows very early access to page-level viewstate.
            </description>
            </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SaveViewState">
            <summary>
            Overridden to allow very early access to page level viewstate
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.LoadViewState(System.Object)">
            <summary>
            Overridden to allow very early access to page level viewstate
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SavePageStateToPersistenceMedium(System.Object)">
            <summary>
            Overridden to send ViewState to client up a limit, and then store in Session
            on the server.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BasePage.LoadPageStateFromPersistenceMedium">
            <summary>
            Overridden to load viewstate from client and server
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.MapPhysicalPath(System.String)">
            <summary>
            Calculates a url for a given physical path within this application.
            </summary>
            <param name="physPath"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.OnPreRender(System.EventArgs)">
            <summary>
            Overridden to render double-click blocking script.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.BasePage.UrlFor">
            <summary>
            Returns a Url that represents the current state of the page
            and can be used to return to the page in future request.
            </summary>
            <remarks>
            This default implementation can be override in sub-classes
            to formulate a Url it understands.  The <see cref="M:VC3.Web.UI.Format.Url(System.String,System.Object[])"/>
            utility method can be used to aid in building the Url.
            </remarks>
            <returns>The url</returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SetControlFocus(System.Web.UI.Control)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client without attempting 
            to scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="focus">Control to set focus to</param>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SetControlFocus(System.Web.UI.Control,System.Boolean)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client and scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="focus">Control to set focus to</param>
            <param name="scrollIntoView">If true, page will be scrolled so that 
            the control is at the top of the page.</param>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SetControlFocus(System.String)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client without attempting 
            to scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="clientID">Control to set focus to</param>
        </member>
        <member name="M:VC3.Web.UI.BasePage.SetControlFocus(System.String,System.Boolean)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client and scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="clientID">Control to set focus to</param>
            <param name="scrollIntoView">If true, page will be scrolled so that 
            the control is at the top of the page.</param>
        </member>
        <member name="M:VC3.Web.UI.BasePage.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Delegates to the default implementation defined by
            <see cref="T:System.ComponentModel.TypeDescriptor"/>.
            </summary>
            <returns>The <see cref="T:System.ComponentModel.TypeConverter"/> for the current instance</returns>
        </member>
        <member name="M:VC3.Web.UI.BasePage.UnitTestTag(System.String[])">
            <summary>
            Creates an ID that can be used to idenfity content within a page to improve testability of a page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BasePage.Resource">
            <summary>
            Gets the resources associated with this page.
            See the <see cref="T:VC3.Web.UI.ResourceLookup"/> class for information
            on which resource file is used.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BasePage.DTD">
            <summary>
            Gets or sets the document type definition
            to include at the top of the page.  The
            default value is "".
            </summary>
            <remarks>
            The DTD is will be output at the top of every page,
            even the ones that display a wait message.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.BasePage.Browser">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.BasePage.Browser"/> control created by this
            page that can be used to control browser behavior such as
            scrolling and control focus.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BasePage.EnableViewStatePlus">
            <summary>
            If true, enhanced viewstate management will be enabled such 
            as limiting the amount of viewstate sent to the client.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BasePage.ViewState">
            <summary>
            Overridden to enable very early access to page-level ViewState
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BasePage.PreventDoubleClicks">
            <summary>
            If true, double postbacks will be prevented for this page.
            True by default when there is a validator on the page.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ValidationScript">
            <summary>
            Hack control to force validation script
            to be included in a page.
            </summary>
            <remarks>
            The Page_Validators js variable is declared by the <see cref="T:System.Web.UI.WebControls.BaseValidator"/> class
            if there is a base validator in the page. However, if there are validators in
            the page but none of them derive from <see cref="T:System.Web.UI.WebControls.BaseValidator"/> a Javascript script 
            error will occur because the variable isn't declared yet there is code that references it.  
            This control will detect this situation and declare Page_Validators when needed.	
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.ValidationScript.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Suppresses output of this control
            </summary>
            <param name="w"></param>
        </member>
        <member name="T:VC3.Web.UI.ValidationFailedContent">
            <summary>
            A custom control to display content if validation fails
            client-side during the submission of a form, or when the
            page loads.
            After being displayed, the content will be hidden after
            the next keyboard or mouse button is released.
            </summary>
            <example>
            <code><![CDATA[
            <vc3:ValidationFailedContent runat="server">
                ... content ...
            </vc3:ValidationFailedContent>
            ]]></code>
            </example>
        </member>
        <member name="M:VC3.Web.UI.ValidationFailedContent.Page_PreRender(System.Object,System.EventArgs)">
            <summary>
            RegisterOnSubmitStatement raised by Page.PreRender
            because must ensure execution before any validators
            have a chance to register.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Browser">
            <summary>
            Control for returning script to control the web browser 
            that is making a web request.  This control can automatically
            preserve the scroll location and control focus between postbacks.
            </summary>
            <remarks>
            The Browser class provides the following functionality:
            <list type="table">
            <listheader>
            <term>Feature</term>
            <description>Overview</description>
            </listheader>
            
            <item>
            <term>Client-side control focus management</term>
            <description>
            Setting <see cref="P:VC3.Web.UI.Browser.PreserveFocus"/> to true (which it is by default), 
            will cause the control that had focus when a postback is performed to
            remained focused after the postback.  Also, <see cref="M:VC3.Web.UI.Browser.SetControlFocus(System.Web.UI.Control)"/>
            can be used to set focus to a particular control and optionally scroll it
            into view.
            </description>
            </item>
            
            <item>
            <term>Client-side scrolling management</term>
            <description>
            Setting <see cref="P:VC3.Web.UI.Browser.PreserveScrollLocation"/> to true (which it is by default),
            will cause the browser scroll position will be saved before postback and 
            restored after postback. This is a simplified version of ASP.NET Smart Navigation.
            </description>
            </item>
            
            <item>
            <term>Auto-refresh</term>
            <description>
            The <see cref="P:VC3.Web.UI.Browser.AutoRefreshInterval"/> property can be used to cause the browser
            to fresh the page periodically.
            </description>
            </item>
            </list>
            
            <para>
            This control is created by the <see cref="T:VC3.Web.UI.BasePage"/> (see <see cref="P:VC3.Web.UI.BasePage.Browser"/>) 
            so there is no need to add it to a page if it derives from that class.  However, this
            control can also be used on pages that don't dervive from BasePage:
            <code><![CDATA[
            <vc3:Browser runat="server" PreserveScrollLocation="true" PreserveFocus="true" />
            ]]></code>
            </para>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.Browser.OnInit(System.EventArgs)">
            <summary>
            Overridden to initialize control from post data.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Browser.OnPreRender(System.EventArgs)">
            <summary>
            Overridden to output script to control the browser
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Browser.SetControlFocus(System.Web.UI.Control)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client without attempting 
            to scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="focus">Control to set focus to</param>
        </member>
        <member name="M:VC3.Web.UI.Browser.SetControlFocus(System.Web.UI.Control,System.Boolean)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client and scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="focus">Control to set focus to</param>
            <param name="scrollIntoView">If true, page will be scrolled so that 
            the control is at the top of the page.</param>
        </member>
        <member name="M:VC3.Web.UI.Browser.SetControlFocus(System.String)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client without attempting 
            to scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="clientID">Control to set focus to</param>
        </member>
        <member name="M:VC3.Web.UI.Browser.SetControlFocus(System.String,System.Boolean)">
            <summary>
            Includes script in the page to set the focus to
            a particular control on the client and scroll it into view.
            Safe to call on any control and with any client.
            </summary>
            <remarks>
            <para>
            This method will output script for Netscape 6 and
            higher and IE 4 and higher however its safe
            to call for any client type. Only one control can have 
            its focus set per request.  If this method is called
            multiple times, only the last control focused will
            actually be focused.
            </para>
            </remarks>
            <param name="clientID">Control to set focus to</param>
            <param name="scrollIntoView">If true, page will be scrolled so that 
            the control is at the top of the page.</param>
        </member>
        <member name="M:VC3.Web.UI.Browser.SetControlFocusInternal(System.String,System.Boolean)">
            <summary>
            Left for backwards compatibility -- new methods are instance methods.  
            This method can be deleted once BasePage.SetControlFocus is deleted.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Browser.AutoRefreshInterval">
            <summary>
            The interval, in seconds, to wait before the browser will
            automatically refresh the page.  A value of 0 (default) will prevent 
            the browser from autorefreshing.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Browser.PreserveFocus">
            <summary>
            When true (which it is by default), the control that had focus when the 
            postback was performed will remain focused after the postback.  
            Supported by IE 5.5 and above.
            </summary>
            <remarks>
            <para>
            In order for a control's focus to be tracked between postbacks, it must
            have an client id assigned (see <see cref="P:System.Web.UI.Control.ClientID"/>).
            </para>
            <para>
            By preserving focus, keyboard access to applications is better supported. 
            The focus can be changed explictly by calling <see cref="M:VC3.Web.UI.Browser.SetControlFocus(System.Web.UI.Control)"/>.
            </para>
            <para>
            This functionality is supported by IE 5.5 and above. If a browser doesn't
            meet this criteria then this functionality will be disabled.
            </para>
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Browser.PreserveScrollLocation">
            <summary>
            When true (which it is by default), the browser scroll position will be saved 
            before postback and restored after postback.  
            Supported by IE 5 and above.
            </summary>
            <remarks>
            <para>
            Preserving the scoll location prevents users from having to scroll back to the top of
            a page each time they click a control that performs a postback.  This is
            sort of like ASP.NET's Smart Navigation but is much more simple and doesn't have
            the drawback of breaking the Back Button.  Currently only the scroll location
            of the window is preserved but other scrollable areas within the page are not 
            preserved.
            </para>
            <para>
            This functionality is supported by IE 5.0 and above. If a browser doesn't 
            meet this criteria then this functionality will be disabled.
            </para>
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.WaitMessage">
            <summary>
            A custom control to display a wait message on a web page. If the 
            Visibilty of this control is set to true, it will immediately render
            the its contents to the browser via the HttpResponse Flush method
            </summary>
        </member>
        <member name="F:VC3.Web.UI.WaitMessage.IeBufferSize">
            <summary>
            Internet Explorer has a minimum buffer size that
            must be met before the contents are flushed
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WaitMessage.CreateChildControls">
            <summary>
            Overrides create control methods to add a 
            custom user control the to controls collection
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WaitMessage.RenderImmediate">
            <summary>
            Render the control immediately to the page
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WaitMessage.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:VC3.Web.UI.WaitMessage.OnInit(System.EventArgs)">
            <summary>
            Initializes the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.WaitMessage.Visible">
            <summary>
            Gets or sets the visibility of this control. 
            Use this property to force this control to render
            its contents immediately to the client, thus enabling
            a 'Page loading...' type message to be displayed for 
            long running processes.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WaitMessage.Control">
            <summary>
            Gets or sets the path of a user control (.ascx) to
            load
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WaitMessage.Header">
            <summary>
            Gets or sets the path of a header control (.ascx) to
            load
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WaitMessage.Footer">
            <summary>
            Gets or sets the path of the footer user control (.ascx) to
            load
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SessionExpiredException">
            <summary>
            Thrown when state cannot be loaded because a user's ASP session
            has expired.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Paginator">
            <summary>
            Control to specify how printed documents should be paginated.
            </summary>
            <remarks>
            Use noPageBreakStart and noPageBreakEnd CSS classes to control where
            page breaks should NOT fall within a page.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Paginator.PaperTopMargin">
            <summary>
            Top margin of the paper. Used to calculate page area height.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Paginator.PaperBottomMargin">
            <summary>
            Bottom margin of the paper.  Used to calculate page area height.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Paginator.PaperHeight">
            <summary>
            Paper height.  Used to calculate page area height.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Box.PreserveScrollLocation">
            <summary>
            When true (which it is by default), the browser scroll position will be saved 
            before postback and restored after postback.  
            Supported by IE 5 and above.
            </summary>
            <remarks>
            <para>
            Preserving the scoll location prevents users from having to scroll back to the top of
            a page each time they click a control that performs a postback.  This is
            sort of like ASP.NET's Smart Navigation but is much more simple and doesn't have
            the drawback of breaking the Back Button.  Currently only the scroll location
            of the window is preserved but other scrollable areas within the page are not 
            preserved.
            </para>
            <para>
            This functionality is supported by IE 5.0 and above. If a browser doesn't 
            meet this criteria then this functionality will be disabled.
            </para>
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.ScrollManager.Enabled">
            <summary>
            When true (which it is by default), the browser scroll position will be saved 
            before postback and restored after postback.  
            Supported by IE 5 and above.
            </summary>
            <remarks>
            <para>
            Preserving the scoll location prevents users from having to scroll back to the top of
            a page each time they click a control that performs a postback.  This is
            sort of like ASP.NET's Smart Navigation but is much more simple and doesn't have
            the drawback of breaking the Back Button.  Currently only the scroll location
            of the window is preserved but other scrollable areas within the page are not 
            preserved.
            </para>
            <para>
            This functionality is supported by IE 5.0 and above. If a browser doesn't 
            meet this criteria then this functionality will be disabled.
            </para>
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.ViewState.CacheEntry">
            <summary>
            Represents a handle to an entry in the ViewState cache
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.CacheEntry.SetValue(System.Byte[],System.Int32)">
            <summary>
            Updates the value and size properties. Ensures that size is
            set first, followed by Value
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.CacheEntry.Destroy">
            <summary>
            Destroy the value pointed to by this handle
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.CacheEntry.Size">
            <summary>
            The size of the object being stored in the cache
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.CacheEntry.Key">
            <summary>
            Unique key for this cache item
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.CacheEntry.Value">
            <summary>
            Value contained within the cache
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.CacheEntry.DateCreated">
            <summary>
            Date entry created
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.Config">
            <summary>
            A helper class to encapsulate the cache settings to ease persistence
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.Cache">
            <summary>
            Base class for ViewState Cache.  This class enables storing a server-side viewstate (ViewStatePlus) in a
            variety of ways.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.Save(System.Guid,System.Byte[],System.Int32)">
            <summary>
            Saves a new entry to the cache
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.Save(VC3.Web.UI.ViewState.CacheEntry)">
            <summary>
            Moves an entry into the cache.  Demotes the last item inserted if MaxItem items are in the cache.
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.Demote">
            <summary>
            Demotes the last item in the cache to DemotionCache.  If DemotionCache is null, the last item is deleted.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.Load(System.Guid)">
            <summary>
            Loads an item from the cache
            </summary>
            <param name="key">Key of item to retrieve</param>
            <returns>Retrieved item</returns>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.NewEntity(System.Guid,System.Byte[],System.Int32)">
            <summary>
            Creates a new cache entity
            </summary>
            <param name="key">Key of new entity</param>
            <param name="value">New cache entity</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.ViewState.Cache.NewEntity(VC3.Web.UI.ViewState.CacheEntry)">
            <summary>
            Creates an entity from another one
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.ViewState.Cache.MaxItems">
            <summary>
            Maximum items to store in an instance of the cache
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.Cache.DemotionCache">
            <summary>
            The cache in which demoted items should be stored.  If this cache is null, then items will be deleted
            from the cache when they are demoted.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.MemoryCache">
            <summary>
            An implementation of ViewState Cache which stores a cached item in memory
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.MemoryCache.NewEntity(System.Guid,System.Byte[],System.Int32)">
            <summary>
            Create a new cached entity
            </summary>
            <param name="key">Entity key</param>
            <param name="value">Data to be stored</param>
            <returns>A new cach entity</returns>
        </member>
        <member name="T:VC3.Web.UI.ViewState.MemoryCache.MemoryEntry">
            <summary>
            An implementation of <see cref="T:VC3.Web.UI.ViewState.CacheEntry"/> which stores the cached data in memory
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.MemoryCache.MemoryEntry.Destroy">
            <summary>
            Sets the data to null
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.MemoryCache.MemoryEntry.Value">
            <summary>
            Value stored in memory
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.AsyncCache">
            <summary>
            An implementation of <see cref="T:VC3.Web.UI.ViewState.Cache"/> which allows asynchronous demotion
            </summary>
        </member>
        <member name="F:VC3.Web.UI.ViewState.AsyncCache.MaxQueueSize">
            <summary>
            Maximum size for the in-memory queue
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.AsyncCache.Save(VC3.Web.UI.ViewState.CacheEntry)">
            <summary>
            Moves the cached item to the demotion cache
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:VC3.Web.UI.ViewState.AsyncCache.demotionQueue_Error(System.Exception)">
            <summary>
            Catch any errors thrown
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.ViewState.AsyncCache.MaxItems">
            <summary>
            Maximum items to store in an instance of the cache.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.DiskCache">
            <summary>
            An implementation of <see cref="T:VC3.Web.UI.ViewState.Cache"/> which allows caching to disk
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.UpdateTTD">
            <summary>
            Update the file which indicates when a physical cache should be removed
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.OpenTTDFile(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens the lifecycle.ttd file.  If file is locked because another process is
            actively using it then several attempts will be made to open the file in hopes that
            the file lock will be released.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.CleanupThread_Main">
            <summary>
            Thread callback to remove any cache directories that were not previously removed cleanly
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.NewEntity(System.Guid,System.Byte[],System.Int32)">
            <summary>
            Create a new disk-based cache entity
            </summary>
            <param name="key">Cache item key</param>
            <param name="value">Data to be cached</param>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.ViewState.DiskCache.BaseDirectory">
            <summary>
            Base directory of the cache
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.DiskCache.TimeToDeath">
            <summary>
            Timeout before a cache is physically removed from storage
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ViewState.DiskCache.DiskEntry">
            <summary>
            Implementation of <see cref="T:VC3.Web.UI.ViewState.CacheEntry"/> which allows the storing of a cached item on disk
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.DiskEntry.FilePath">
            <summary>
            Builds the path in which cached items are stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.ViewState.DiskCache.DiskEntry.Destroy">
            <summary>
            Removes cached item by deleting the file storing the cached data
            </summary>
        </member>
        <member name="P:VC3.Web.UI.ViewState.DiskCache.DiskEntry.Cache">
            <summary>
            Back-pointer to cache managing this entity
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.Feed">
            <summary>
            Representation of an internet data feed.
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.Feed.Clone">
            <summary>
            Copies the feed and all of its items
            </summary>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.Title">
            <summary>
            The title of this <see cref="T:VC3.Web.Feeds.Feed"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.ShortDescription">
            <summary>
            A short description of this <see cref="T:VC3.Web.Feeds.Feed"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.Url">
            <summary>
            The Url to the XML of this <see cref="T:VC3.Web.Feeds.Feed"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.ModifiedDate">
            <summary>
            Last modified date of this <see cref="T:VC3.Web.Feeds.Feed"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.AsOfDate">
            <summary>
            DateTime this feed was retrieved.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.AlternateUrl">
            <summary>
            Url to the HTML representation of this <see cref="T:VC3.Web.Feeds.Feed"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.Feed.FeedItems">
            <summary>
            Collection of <see cref="P:VC3.Web.Feeds.Feed.FeedItems"/> contained in
            this <see cref="T:VC3.Web.Feeds.Feed"/>
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.FeedItem">
            <summary>
            Summary description for FeedItem
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.ID">
            <summary>
            The unique id of this <see cref="T:VC3.Web.Feeds.FeedItem"/>
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.Title">
            <summary>
            The title of this <see cref="T:VC3.Web.Feeds.FeedItem"/>
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.Url">
            <summary>
            The url to the HTML version of this <see cref="T:VC3.Web.Feeds.FeedItem"/>
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.PublishedDate">
            <summary>
            The date this item was published to <see cref="P:VC3.Web.Feeds.FeedItem.ParentFeed"/>
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.Content">
            <summary>
            The text content of this <see cref="T:VC3.Web.Feeds.FeedItem"/>
            </summary>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItem.ParentFeed">
            <summary>
            The <see cref="T:VC3.Web.Feeds.Feed"/> that this belongs too.
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.FeedItemList">
            <summary>
            Summary description for <see cref="T:VC3.Web.Feeds.FeedItemList"/>
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.FeedItemList.Add(VC3.Web.Feeds.FeedItem)">
            <summary>
            Add <see cref="T:VC3.Web.Feeds.FeedItem"/> item to this <see cref="T:VC3.Web.Feeds.FeedItemList"/>
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:VC3.Web.Feeds.FeedItemList.Remove(VC3.Web.Feeds.FeedItem)">
            <summary>
            Removes a particular <see cref="T:VC3.Web.Feeds.FeedItem"/> from this <see cref="T:VC3.Web.Feeds.FeedItemList"/>
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:VC3.Web.Feeds.FeedItemList.Item(System.Int32)">
            <summary>
            Indexer, retrieves the <see cref="T:VC3.Web.Feeds.Feed"/> stored at index 'i';
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.FeedReader">
            <summary>
            Class for construction a <see cref="T:VC3.Web.Feeds.Feed"/> based on an Xml input.
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.FeedReader.ReadFeed(System.Xml.XmlDocument)">
            <summary>
            Returns a <see cref="T:VC3.Web.Feeds.Feed"/> based on the supplied <see cref="T:System.Xml.XmlDocument"/>
            </summary>
            <param name="data">The <see cref="T:System.Xml.XmlDocument"/> that the returned feed will represent</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.Feeds.FeedReader.CanReadFeed(System.Xml.XmlDocument)">
            <summary>
            Tests if an XML document is the the expected format of the specific feed.
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.Atom10FeedReader">
            <summary>
            Feed handler for Atom 3.0 feed format.
            Spec: http://tools.ietf.org/html/rfc4287
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.Atom10FeedReader.ReadFeed(System.Xml.XmlDocument)">
            <summary>
            Transform data into a <see cref="T:VC3.Web.Feeds.Feed"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:VC3.Web.Feeds.Atom03FeedReader">
            <summary>
            Feed handler for Atom 3.0 feed format.
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.Atom03FeedReader.ReadFeed(System.Xml.XmlDocument)">
            <summary>
            Transform data into a <see cref="T:VC3.Web.Feeds.Feed"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.Feeds.Rss20FeedReader.ReadFeed(System.Xml.XmlDocument)">
            <summary>
            Transform data into a <see cref="T:VC3.Web.Feeds.Feed"/>
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:VC3.Web.Feeds.FeedWriter">
            <summary>
            Base class for feed writers
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.FeedWriter.WriteFeed(VC3.Web.Feeds.Feed)">
            <summary>
            Returns a <see cref="T:VC3.Web.Feeds.Feed"/> based on the supplied <see cref="T:System.Xml.XmlDocument"/>
            </summary>
            <param name="feed">The <see cref="T:System.Xml.XmlDocument"/> that the returned feed will represent</param>
            <returns></returns>
        </member>
        <member name="T:VC3.Web.Feeds.Atom10FeedWriter">
            <summary>
            Transforms a feed into XML that matches the Atom 1.0 specification.
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.FeedLoadException">
            <summary>
            Throw when a feed cannot be loaded
            </summary>
        </member>
        <member name="T:VC3.Web.Feeds.FeedManager">
            <summary>
            Creates <see cref="T:VC3.Web.Feeds.Feed"/> objects representing internet data feeds.  <see cref="T:VC3.Web.Feeds.FeedManager"/>
            is responsible for managing a cache of feeds to minimize the number of requests to external
            sources and determining the appropriate handler to transform the data feed into a <see cref="T:VC3.Web.Feeds.Feed"/>
            object.
            </summary>
        </member>
        <member name="M:VC3.Web.Feeds.FeedManager.DoGetFeed(System.String,System.TimeSpan,System.Action{VC3.Web.Feeds.Feed},System.Action{VC3.Web.Feeds.FeedLoadException})">
            <summary>
            Returns a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the
            feed located at <paramref name="url"/>.  Feed may be loaded asynchronously.
            </summary>
            <param name="url">The location of the feed</param>
            <param name="maxCacheAge">TimeSpan for which cached version is valid</param>
            <param name="loadedCallback">Called when the feed has been loaded</param>
            <returns>a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the feed located at <paramref name="url"/></returns>
        </member>
        <member name="M:VC3.Web.Feeds.FeedManager.GetFeed(System.String,System.TimeSpan,System.Action{VC3.Web.Feeds.Feed},System.Action{VC3.Web.Feeds.FeedLoadException})">
            <summary>
            Returns a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the
            feed located at <paramref name="url"/>.  Feed may be loaded asynchronously.
            </summary>
            <param name="url">The location of the feed</param>
            <param name="maxCacheAge">TimeSpan for which cached version is valid</param>
            <param name="loadedCallback">Called when the feed has been loaded</param>
            <returns>a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the feed located at <paramref name="url"/></returns>
        </member>
        <member name="M:VC3.Web.Feeds.FeedManager.GetFeed(System.String,System.TimeSpan)">
            <summary>
            Returns a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the
            feed located at <paramref name="url"/>
            </summary>
            <param name="url">The location of the feed</param>
            <param name="maxCacheAge">TimeSpan for which cached version is valid</param>
            <returns>a <see cref="T:VC3.Web.Feeds.Feed"/> object representing the feed located at <paramref name="url"/></returns>
        </member>
        <member name="M:VC3.Web.Feeds.FeedManager.GetFeeds(System.String,System.Boolean,System.TimeSpan)">
            <summary>
            Gets a list of all feeds from an opml file
            </summary>
            <param name="opmlUrl">URL to the OPML file</param>
            <param name="maxCacheAge">Max cache age passed to GetFeed()</param>
            <returns>List of feeds in the file</returns>
        </member>
        <member name="M:VC3.Web.Feeds.FeedManager.Aggregate(System.Collections.Generic.List{VC3.Web.Feeds.Feed})">
            <summary>
            Merges a list of feeds into a single feed
            </summary>
            <param name="feeds">List of feeds</param>
            <returns>A new feed that contains all items from all input feeds</returns>
        </member>
        <member name="T:VC3.Web.UI.SortDirection">
            <summary>
            Specifies the order in which to sort a property
            </summary>
            <remarks>
            VC3.Web.UI.SortDirection is equivalent to System.Web.UI.WebControls.SortDirection so its use should be mimimized in the future
            </remarks>
        </member>
        <member name="F:VC3.Web.UI.SortDirection.Ascending">
            <summary>
            From smallest to largest
            </summary>
        </member>
        <member name="F:VC3.Web.UI.SortDirection.Descending">
            <summary>
            From largest and smallest
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SortCriterion">
            <summary>
            Used to identify a property should be sorted and the
            sort direction.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SortCriterion.#ctor(System.Object,VC3.Web.UI.SortDirection)">
            <summary>
            Creates a new SortCriterion
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="P:VC3.Web.UI.SortCriterion.Property">
            <summary>
            Property to sort on
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SortCriterion.Direction">
            <summary>
            The direction to sort the property by
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SortCriteria">
            <summary>
            Keeps track of a sort order.  Used to aid in building interfaces with
            sortable lists.
            </summary>
            <remarks>
            <para>
            This class tracks multiple sort criteria and can convert them to a 
            SQL order by clause. By default 2 criterion will be tracked as this
            is expected to be the desired behavior in most cases. When a new criterion 
            is added and there are already MaxCount number of properties in the sort 
            ordering and another one is added, the least significant property will be removed.
            </para>
            <para>
            Significance is determined based on the order in which properties are added
            to the sort order. For example, if two items are added, the 2nd one that is 
            added is more significant than the first and the first one will "fall" out of
            the list if MaxCount was set to 1.
            </para>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.#ctor">
            <summary>
            Creates a new SortCriteria that will track
            a most 2 <see cref="T:VC3.Web.UI.SortCriterion"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.#ctor(System.Int32)">
            <summary>
            Creates a new SortCriteria that will track
            a most maxCount number of <see cref="T:VC3.Web.UI.SortCriterion"/>.
            </summary>
            <param name="maxCount"></param>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.Add(System.Object,VC3.Web.UI.SortDirection)">
            <summary>
            Updates the sort order such that the specified property is
            the most significant sort criterion.
            </summary>
            <remarks>
            If the property is already a sort criteria its direction will be 
            toggled.  If the property is not already in the sort criteria it
            will become the most significant sort criteria.  
            </remarks>
            <param name="property">Property to sort by</param>
            <param name="defaultDirection">Sort direction used if the property is not 
            already the most significant sort criterion</param>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.Clear">
            <summary>
            Removes all items from the list of criteria
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.ToSql">
            <summary>
            Converts the list to a SQL order by clause.
            The "order by" keywords are NOT included in the expression.
            </summary>
            <returns>Expression that can be used in a SQL ORDER BY clause or null
            if there are no criteria.</returns>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.FromSql(System.String)">
            <summary>
            Creates a <see cref="T:VC3.Web.UI.SortCriteria"/> instance based on the sql representation
            obtained by calling <see cref="M:VC3.Web.UI.SortCriteria.ToSql"/> on an existing instance.
            </summary>
            <param name="sql">The sql order by clause to convert</param>
            <returns>The requested criteria</returns>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.ToComparer(System.Type)">
            <summary>
            Converts the list to an <see cref="T:System.Collections.IComparer"/> instance.
            </summary>
            <param name="type">The type of object that each criterion property expression
            is relative to</param>
            <returns>Either an instance of <see cref="T:VC3.ComponentModel.PropertyComparer"/> or
            an instance <see cref="T:VC3.Collections.CompositeComparer"/> containing multiple
            <see cref="T:VC3.ComponentModel.PropertyComparer"/> instances</returns>
            <remarks>
            In order for this method to function properly, the <see cref="P:VC3.Web.UI.SortCriterion.Property"/>
            values for each <see cref="T:VC3.Web.UI.SortCriterion"/> must match the name of a property
            or sub-property on the specified <paramref name="type"/> via reflection.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.SortCriteria.GetEnumerator">
            <summary>
            Gets an enumerator that will enumerate the sort criterion
            in order from most significant to least significant.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SortCriteria.Count">
            <summary>
            Gets the number of criteria
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SortCriteria.MaxCount">
            <summary>
            Gets the maximum number of criterion that can be included
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SortCriteria.Item(System.Int32)">
            <summary>
            Gets a sort criterion based on its significance.
            0 is the most significant criterion.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SortChangedEventArgs">
            <summary>
            Event information for the <see cref="E:VC3.Web.UI.Sorter.SortChanged"/> event.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SortChangedEventArgs.#ctor(VC3.Web.UI.SortCriteria)">
            <summary>
            Create a new event object
            </summary>
            <param name="criteria">The updated sort criteria</param>
        </member>
        <member name="P:VC3.Web.UI.SortChangedEventArgs.Criteria">
            <summary>
            The updated sort criteria
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SortChangedEventHandler">
            <summary>
            Event handler definition for the <see cref="E:VC3.Web.UI.Sorter.SortChanged"/> event.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Sorter">
            <summary>
            Templated control for displaying and changing the sort order of a list.
            </summary>
            <remarks>
            <para>
            Works in conjunction with the <see cref="T:VC3.Web.UI.SortCriteria"/> class.
            There are three templates that control the display of this control:
            </para>
            
            <list type="table">
            <item>
            <term><see cref="P:VC3.Web.UI.Sorter.UnsortedTemplate"/></term>
            <description>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> isn't the
            most significant sort criterion for the list being sorted OR if 
            no other templates are specified and the list is sorted
            by the <see cref="P:VC3.Web.UI.Sorter.Property"/>.
            </description>
            </item>
            
            <item>
            <term><see cref="P:VC3.Web.UI.Sorter.SortedTemplate"/></term>
            <description>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> is the
            most significant sort criterion for the list being sorted and the
            list is sorted in ascending order (<see cref="F:VC3.Web.UI.SortDirection.Ascending"/>).  
            This template is also used if the list is sorted in descending order and 
            no <see cref="P:VC3.Web.UI.Sorter.SortedDescendingTemplate"/> is specified.
            </description>
            </item>
            
            <item>
            <term><see cref="P:VC3.Web.UI.Sorter.SortedDescendingTemplate"/></term>
            <description>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> is the
            most significant sort criterion for the list being sorted and the
            list is sorted in descending order (<see cref="F:VC3.Web.UI.SortDirection.Descending"/>).
            </description>
            </item>
            </list>
            
            <para>
            To change the sort order, include in the template a control that bubbles events such as the 
            <see cref="T:System.Web.UI.WebControls.Button"/> or <see cref="T:System.Web.UI.WebControls.LinkButton"/>
            controls and specify a CommandName of "Sort".  When the bubbled event
            is caught by this control, the sort order will be updated based on the 
            <see cref="P:VC3.Web.UI.Sorter.Property"/> and <see cref="P:VC3.Web.UI.Sorter.DefaultDirection"/> and
            the <see cref="E:VC3.Web.UI.Sorter.SortChanged"/> event will be raised.
            </para>
            <para>
            If <see cref="P:VC3.Web.UI.Sorter.AutoDataBind"/> is true, <see cref="M:System.Web.UI.Control.DataBind"/> 
            will be called immediately after the SortChanged event.  This makes
            sorting easier in that all you have to do is override DataBind in the page
            and then access the sort criteria for the list(s) being sorted.
            The current sort criteria for a list can be accessed via the
            <see cref="M:VC3.Web.UI.Sorter.GetSortCriteria(System.String)"/> method.  <see cref="M:VC3.Web.UI.SortCriteria.ToSql"/>
            will also create the SQL ORDER BY expression that can be used to create dynamic SQL.
            </para>
            </remarks>
            <example>
            <para>
            The example below implements a link that causes a list to be sorted by the "Username" field.  
            This example happens to use all three templates however only the <see cref="P:VC3.Web.UI.Sorter.UnsortedTemplate"/>
            is required.  This code would typically be in a HeaderTemplate of a Repeater or DataGrid 
            control but it will work anywhere the page.
            </para>
            
            <para>ASPX Page:</para>
            <code><![CDATA[
             <vc3:Sorter runat="server" List="Results" Property="Username" DefaultDirection="ascending">
            	<UnsortedTemplate>
            	<asp:LinkButton runat="server" CommandName="Sort" ToolTip="Sort">Username</asp:LinkButton>
            	</UnsortedTemplate>
            					
            	<SortedTemplate>
            	<asp:LinkButton runat="server" CommandName="Sort" ToolTip="Sort"><img src="SortAsc.gif"></asp:LinkButton>
            	<asp:LinkButton runat="server" CommandName="Sort">Username</asp:LinkButton>
            	</SortedTemplate>
            					
            	<SortedDescendingTemplate>
            	<asp:LinkButton runat="server" CommandName="Sort" ToolTip="Sort"><img src="SortDesc.gif"></asp:LinkButton>
            	<asp:LinkButton runat="server" CommandName="Sort">Username</asp:LinkButton>
            	</SortedDescendingTemplate>
            	</vc3:Sorter>
             ]]></code>
             
            <para>Code Behind:</para>
            <code>
            private void Page_Load(object sender, System.EventArgs e)
            {
            	if( !IsPostBack )
            	{
            		// set default sort order for the list
            		Sorter.GetSortCriteria("Results").Add( "Username", SortDirection.Ascending );
            		DataBind();
            	}
            }
            
            public override void DataBind( )
            {
            	// Retrieve the list, passing the sort criteria through.
            	// Sort criteria will be in the form of: "Username DESC".
            	dataBoundCtrl.DataSource = ListData.GetList( Sorter.GetSortCriteria("Results").ToSql() );
            	base.DataBind();
            }
            </code>
            </example>
        </member>
        <member name="M:VC3.Web.UI.Sorter.OnSortChanged(VC3.Web.UI.SortCriteria)">
            <summary>
            Raises the Sort event
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Sorter.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Overriden to catch CommandEvents
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Sorter.CreateChildControls">
            <summary>
            Overridden to handle templates
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Sorter.LoadViewState(System.Object)">
            <summary>
            Overridden to retrieve the current sort criteria
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:VC3.Web.UI.Sorter.SaveViewState">
            <summary>
            Overridden to persist the current sort criteria.
            </summary>
            <remarks>
            The first Sorter control in the page is responsible for
            saving and loading the sort criteria from view state.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Sorter.EnsureSortCriteria(System.String)">
            <summary>
            Ensures that there is sort criteria created for the specified list
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Sorter.GetSortCriteria(System.String)">
            <summary>
            Gets the current sort criteria for the specified list
            on the current page.
            </summary>
            <param name="list">Name of the list. Scoped to the current page</param>
            <returns>Sort criteria associated with that list</returns>
        </member>
        <member name="M:VC3.Web.UI.Sorter.SetSortCriteria(System.String,VC3.Web.UI.SortCriteria)">
            <summary>
            Sets the current sort criteria for the specified list
            on the current page.
            </summary>
            <param name="list">Name of the list. Scoped to the current page</param>
            <param name="criteria">The criteria to use for the list</param>
        </member>
        <member name="E:VC3.Web.UI.Sorter.SortChanged">
            <summary>
            Raised when the sort order should be changed
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.AutoDataBind">
            <summary>
            If true <see cref="M:System.Web.UI.Control.DataBind"/> will be called
            automatically when a sort command event is raised.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.List">
            <summary>
            Gets the name of the list that this sort command applies to.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.Property">
            <summary>
            Name of the property or column being sorted on
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.PropertyObject">
            <summary>
            Object representing the property or column being sorted on.
            Can be used instead of <see cref="P:VC3.Web.UI.Sorter.Property"/> to handle more
            complex representations of properties
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.DefaultDirection">
            <summary>
            Default sort direction when <see cref="P:VC3.Web.UI.Sorter.Property"/>
            is first sorted on.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.UnsortedTemplate">
            <summary>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> isn't the
            most significant sort criterion for the list being sorted OR if 
            no other templates are specified and the list is sorted
            by the <see cref="P:VC3.Web.UI.Sorter.Property"/>
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.SortedTemplate">
            <summary>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> is the
            most significant sort criterion for the list being sorted and the
            list is sorted in ascending order (<see cref="F:VC3.Web.UI.SortDirection.Ascending"/>).  
            This template is also used if the list is sorted in descending order and 
            no <see cref="P:VC3.Web.UI.Sorter.SortedDescendingTemplate"/> is specified.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.SortedDescendingTemplate">
            <summary>
            Used when the Sorter's <see cref="P:VC3.Web.UI.Sorter.Property"/> is the
            most significant sort criterion for the list being sorted and the
            list is sorted in descending order (<see cref="F:VC3.Web.UI.SortDirection.Descending"/>).
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Sorter.Criteria">
            <summary>
            Gets or sets a list of request-scoped criteria.  The hashtable contains
            criteria by <see cref="P:VC3.Web.UI.Sorter.List"/> name.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SorterTemplateContainer">
            <summary>
            Container control
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Placeholder.DataBind">
            <summary>
            Overridden to skip databinding when the step is not active.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Placeholder.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to rendering when the step is not active.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Placeholder.DataBindWhenHidden">
            <summary>
            Gets or sets the DataBindWhenHidden
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardTabStrip">
            <summary>
            Creates templated tabs that allow a user to see which step of a wizard they are on and
            navigate directly to any step.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WizardTabStrip.CreateChildControls">
            <summary>
            Dynamically creates tabs based on wizard steps in the associated wizard.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardTabStrip.WizardId">
            <summary>
            Gets or sets the id of the wizard control the tabs are for.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardTabStrip.ItemTemplate">
            <summary>
            Template used for unselected tabs.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardTabStrip.SelectedTemplate">
            <summary>
            Template used for selected tabs.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardTabStrip.SeparatorTemplate">
            <summary>
            Optional template that is included between tabs.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardTabStrip.Wizard">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.WizardTabStrip.Wizard"/> the tabs are for.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardTab">
            <summary>
            Databinding container class representing tabs for the <see cref="T:VC3.Web.UI.WizardTabStrip"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardButton">
            <summary>
            Base class for buttons that control a <see cref="P:VC3.Web.UI.WizardButton.Wizard"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardButton.Wizard">
            <summary>
            The wizard the button belongs to
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardBackButton">
            <summary>
            Place this control inside a <see cref="T:VC3.Web.UI.WizardStep"/> 
            to move back a step within a <see cref="T:VC3.Web.UI.Wizard"/>.
            </summary>
            <remarks>
            By default this button does not cause validation.
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.WizardNextButton">
            <summary>
            Place this control inside a <see cref="T:VC3.Web.UI.WizardStep"/> 
            to move back a step within a <see cref="T:VC3.Web.UI.Wizard"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardNavigateEventHandler">
            <summary>
            Event handler signature for the <see cref="E:VC3.Web.UI.WizardStep.Next"/> event.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardNavigateEventArgs">
            <summary>
            Event data for the <see cref="E:VC3.Web.UI.WizardStep.Next"/> event.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardNavigateEventArgs.NextStep">
            <summary>
            If set, the wizard will display this step
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardStepCollection">
            <summary>
            List of <see cref="T:VC3.Web.UI.WizardStep"/> objects
            </summary>
        </member>
        <member name="T:VC3.Web.UI.WizardStep">
            <summary>
            One step of a wizard.
            </summary>
            <remarks>
            <para>
            By default the wizard moves through steps in the
            order in which they appear. However, each step can 
            specify the next step in the wizard using the <see cref="P:VC3.Web.UI.WizardStep.NextStep"/>
            property or by handling the <see cref="E:VC3.Web.UI.WizardStep.Next"/> event.
            </para>
            <para>
            To initialize a step, handle the <see cref="E:VC3.Web.UI.WizardStep.Enter"/> event.
            </para>
            <para>
            A step will participate in data binding and rendering only when it is the
            <see cref="P:VC3.Web.UI.Wizard.CurrentStep"/>.  Otherwise, it will remain "dormant".
            </para>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.WizardStep.DataBind">
            <summary>
            Overridden to skip databinding when the step is not active.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WizardStep.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to rendering when the step is not active.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WizardStep.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:VC3.Web.UI.WizardStep.Enter"/> event
            </summary>
        </member>
        <member name="M:VC3.Web.UI.WizardStep.OnNext(VC3.Web.UI.WizardNavigateEventArgs)">
            <summary>
            Gets the step after this one.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.Wizard">
            <summary>
            Gets the wizard this step belongs to
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.Visible">
            <summary>
            Overridden to hide the step when its not the current one.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.Enabled">
            <summary>
            If true, the wizard step can be navigated to
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.AutoDataBind">
            <summary>
            If true, the controls in the step will be databound
            automatically when the step is <see cref="E:VC3.Web.UI.WizardStep.Enter"/>ed.
            Default is true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.AutoDataBindArea">
            <summary>
            Indicates the area of the page that should be databound when
            the control is auto databinding (such as when its auto sorting).
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.CanMoveNext">
            <summary>
            If true, the wizard can move past this step
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.CanMoveBack">
            <summary>
            If true, the wizard can move backwards
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.NextStep">
            <summary>
            The ID of the next step to navigate to.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.Title">
            <summary>
            The title of the current step.
            </summary>
        </member>
        <member name="E:VC3.Web.UI.WizardStep.Next">
            <summary>
            Raised to determine next step to move to
            </summary>
        </member>
        <member name="E:VC3.Web.UI.WizardStep.Enter">
            <summary>
            Raised to determine the next step to move to
            </summary>
        </member>
        <member name="P:VC3.Web.UI.WizardStep.Attributes">
            <summary>
            Gets attributes set via <see cref="T:System.Web.UI.IAttributeAccessor"/>
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Wizard">
             <summary>
             Control that displays multiple small UI steps (<see cref="T:VC3.Web.UI.WizardStep"/>s) in order to
             simplify a multistep process.
             </summary>
             <example>
             Example usage of the wizard to prompt for a name and then display it:
             <code><![CDATA[
             <vc3:Wizard runat="server">
            		<Steps>
            			<vc3:WizardStep id="getNameStep">
            				Enter your name: <asp:TextBox runat="server" id="fullName" /><br>
            				<vc3:WizardNextButton runat="server" />
            			</vc3:WizardStep>
            
            			<vc3:WizardStep id="greetingStep">
            				Hello <%# fullName.Text %>!
            			</vc3:WizardStep>
            		</Steps>
             </vc3:Wizard>
             ]]></code></example>
        </member>
        <member name="M:VC3.Web.UI.Wizard.CreateChildControls">
            <summary>
            Overridden to add parsed properties to the controls collection
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Wizard.PushStep(VC3.Web.UI.WizardStep)">
            <summary>
            Adds a step to the wizard history
            and makes it the <see cref="P:VC3.Web.UI.Wizard.CurrentStep"/>
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Wizard.PopStep">
            <summary>
            Removes a step from the wizard history
            and makes it the <see cref="P:VC3.Web.UI.Wizard.CurrentStep"/>
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Wizard.FindWizard(System.Web.UI.Control)">
            <summary>
            Locates the conatining wizard for a nested control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Wizard.MoveBack">
            <summary>
            Moves the wizard backwards one panel
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Wizard.MoveNext">
            <summary>
            Advances to the next panel.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Wizard.FirstStep">
            <summary>
            Gets or sets the first step of the wizard
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Wizard.Steps">
            <summary>
            The set of steps in the wizard.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Wizard.History">
            <summary>
            Tracks the order in which steps are displayed
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Wizard.CurrentStep">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.WizardStep"/> that is currently active.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.JScript">
            <summary>
            Utility class for creating Javascript dynamically.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.JScript.Null">
            <summary>Literal null</summary>
        </member>
        <member name="F:VC3.Web.UI.JScript.True">
            <summary>Literal true</summary>
        </member>
        <member name="F:VC3.Web.UI.JScript.False">
            <summary>Literal false</summary>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToVariableName(System.String)">
            <summary>
            Creates a legal variable name based on the suggested name.
            </summary>
            <returns>A valid variable name</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.IsReservedWord(System.String)">
            <summary>
            Determines if a word is a reserved Javascript keyword.
            See http://msdn.microsoft.com/library/en-us/script56/html/js56jsconreserved.asp?frame=true
            for the list of reserved words.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToLiteral(System.Boolean)">
            <summary>
            Creates a script expression for a Javascript bool literal
            based on a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="val">Value to create the expression for</param>
            <returns>One of the following: "true", "false"</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToLiteral(System.String)">
            <summary>
            Creates a script expression for a Javascript string literal
            based on a <see cref="T:System.String"/> value. The literal
            will properly escape all special characters in <paramref name="val"/>
            and will return a 'single-quoted' string.
            </summary>
            <param name="val">Value to create the expression for</param>
            <returns>'val'</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToDoubleQuotedLiteral(System.String)">
            <summary>
            Creates a script expression for a Javascript string literal
            based on a <see cref="T:System.String"/> value. The literal
            will properly escape all special characters in <paramref name="val"/>
            and will return a "double-quoted" string.
            </summary>
            <param name="val">Value to create the expression for</param>
            <returns>'val'</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToLiteral(System.Int32)">
            <summary>
            Creates a script expression for a Javascript number literal
            based on a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="val">Value to create the expression for</param>
            <returns>Literal value</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToLiteral(System.Decimal)">
            <summary>
            Creates a script expression for a Javascript number literal
            based on a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="val">Value to create the expression for</param>
            <returns>Literal value</returns>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToHtmlElement(System.Web.UI.Control)">
            <summary>
            Creates a script expression to reference an ASP.NET control
            on the client based on its ClientID.  This assumes there is an
            element on the client with this id. Uses the ASP.NET AJAX $get() function.
            null can safely be passed as an argument.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.JScript.ToHtmlElement(System.String)">
            <summary>
            Creates a script expression to reference an ASP.NET control
            on the client based on its ClientID.  This assumes there is an
            element on the client with this id. Uses the ASP.NET AJAX $get() function.
            null can safely be passed as an argument.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.JQuery">
            <summary>
            Methods for including JQuery related resources in pages
            </summary>
        </member>
        <member name="M:VC3.Web.UI.JQuery.Include">
            <summary>
            Includes the core jquery script
            </summary>
        </member>
        <member name="M:VC3.Web.UI.JQuery.IncludeDialog">
            <summary>
            Includes JQuery UI Dialog script and dependencies
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Variable">
            <summary>
            This control allows for the maintaining of a hidden form variable across postbacks.
            Use:
            <code><![CDATA[
            <vc3:variable id="toggleState" defaultvalue="hide" />
            ]]></code>
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Variable.OnInit(System.EventArgs)">
            <summary>
            Only use the default value when the control is first rendered
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Variable.OnPreRender(System.EventArgs)">
            <summary>
            Create a block of javascript that supports the modification of the
            form variable created by this control.  Late-binding is used in
            case any other manipulations occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Variable.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Create the hidden form field and a global javascript variable to post and hold (respectively)
            the value we want to maintain.  The name of the form field is the same as the name of the
            variable, prepended with a "v".  IE creates a global variable for each form field created
            on the page, so if we try to give both elements the same name, the javascript block created
            above does not reference the correct global variable.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:VC3.Web.UI.Variable.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            This method detects if the value of the variable being tracked has changed its value on
            the page and updates the internally tracked value to reflect the changed value.
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.Variable.ValueStorage">
            <summary>
            ViewState resets on DataBind, so we have to store the value of the variable
            we are tracking in the HttpContext for the current page.  The variable is
            stored in a hashtable that we can reference using the name of the control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Variable.Name">
            <summary>
            The name of this control.  Used on the backend to reference the control during postback
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Variable.DefaultValue">
            <summary>
            Default/Initial value for this variable
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Variable.Value">
            <summary>
            Current value maintained across the postback.
            Initially set to hold the same value as DefaultValue
            During the postback, if a change in the variable's value is detected
            (via javascript or otherwise) this value is updated.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.NoBot">
            <summary>
            NoBot provides an easy to use manner of detecting and stopping robots from using public forms to make unwanted 
            posts to an application. The methods of detection are configurable as well as the action to be taken in the event
            the presence of a robot is detected.
            </summary>
            <remarks>
            <para>
            The NoBot control provides the following passive methods of robot detection:
            </para>
            <para>
            Timer Detection: measures the time required for a user to complete a form. The time is configurable via the
            MinimumTime property. Form completion times that are measured to be under the MinimumTime indicate a robot. This
            detection method is enabled by default and can be disabled by setting the EnableTimer property to false.
            </para> 
            <para>
            Form Field Completion: outputs a TextBox control which is hidden to the user, but not to a robot. If this textbox
            contains a value on postback, the presence of a robot is indicated. This detection method is enabled by default 
            and can be disabled by setting the EnableHiddenField property to false.
            </para> 
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.NoBot.CreateChildControls">
            <summary>
            Creates the appropriate controls based on the enabled detection methods.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.NoBot.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the controls to the web page
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:VC3.Web.UI.NoBot.OnLoad(System.EventArgs)">
            <summary>
            Handles the OnLoad event of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.NoBot.TestTimer">
            <summary>
            Performs test to insure the time required to complete the form is within the specified MimimumTime value
            </summary>
        </member>
        <member name="M:VC3.Web.UI.NoBot.TestTextbox">
            <summary>
            Performs test to insure that no text has been entered into the hidden field
            </summary>
        </member>
        <member name="M:VC3.Web.UI.NoBot.TestCaptcha">
            <summary>
            Performs test to insure that the text entered by the user matches that of the CAPTCHA image
            </summary>
        </member>
        <member name="M:VC3.Web.UI.NoBot.HandleDetection(System.String)">
            <summary>
            Handles the page request according to the Action property.
            </summary>
            <param name="detectionMethod">The method used to detect the robot.</param>
        </member>
        <member name="P:VC3.Web.UI.NoBot.EnableTimer">
            <summary>
            Gets or sets the EnableTimer value. If set to true, the control will provide a check to insure that
            the time taken to complete the form is greater than the time specified by the MimimumTime value. The
            default value is true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.EnableHiddenField">
            <summary>
            Gets or sets the EnableHiddenField value. If set to true, the control will output an TextBox control that is hidden
            within an invisible div. Since this control is hidden from a human user, if it contains a value on postback, a robot
            has been identified. The default value is true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.EnableCaptcha">
            <summary>
            Gets or sets the EnableCaptcha value. If set to true, the control render a CAPTCHA image and accompanying response textbox.
             The default value is false.
            <para>
            Note that if the CaptchaImageHandlerUrl is not set, setting this value will have no effect.
            </para>
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.MinimumTime">
            <summary>
            Gets or sets the minimum time that a human user should require to complete the form and click submit. If EnableTimer is set
            to false, setting MinimumnTime has no effect.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.StartTime">
            <summary>
            Gets or sets the time of day that the inital request is made
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.Action">
            <summary>
            Gets or sets the intended action is the event a robot is detected. The possible values are
            Redirect and ThrowException. The default value is Redirect.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.RedirectUrl">
            <summary>
            Gets or sets the page the request will be redirected to in the event a robot is detected.
            The default value is the url of the current page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.CaptchaImageWidth">
            <summary>
            Gets or sets the width of the CAPTCHA image
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.CaptchaImageHeight">
            <summary>
            Gets or sets the height of the CAPTCHA image
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.CaptchaMessage">
            <summary>
            Gets or sets the CAPTCHA instructional message displayed to the user
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NoBot.CaptchaImageHandlerUrl">
            <summary>
            Gets or sets the url of the CAPTCHA image handler (.ashx). If this value is not
            set, the default handler, VC3.Web.UI.CaptchaGenerator is used.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Captcha">
            <summary>
            Captcha is a CompositControl that, in conjunction with the <see cref="T:VC3.Web.UI.CaptchaGenerator"/>, generates a challenge image and
            response textbox for the user to respond to.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Captcha.CreateChildControls">
            <summary>
            Creates the appropriate controls based on the enabled detection methods.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Captcha.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the controls to the web page
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:VC3.Web.UI.Captcha.GetChallengeValue(System.Int64)">
            <summary>
            Returns a hex representation of the last 5 digits of the input
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:VC3.Web.UI.Captcha.HandlerUrl">
            <summary>
            Gets or sets the url for the handler (.ashx) that will generate the CAPTCHA image
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Captcha.ChallengeKey">
            <summary>
            Gets the key that can be converted to a ChallengeValue
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Captcha.ChallengeValue">
            <summary>
            Gets the value represented by the ChallengeKey
            </summary>
        </member>
        <member name="T:VC3.Web.UI.CaptchaGenerator">
            <summary>
            Creates the Captcha image. This class is to be employed in an .ashx page.
            Source: MSDN HIP Source Code
            </summary>
        </member>
        <member name="F:VC3.Web.UI.CaptchaGenerator.fontFamilies">
            <summary>List of fonts that can be used for rendering text.</summary>
            <remarks>This list can be changed to include any families available on the current system.</remarks>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the HttpContext for the ashx request.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.GenerateImage(System.String,System.Drawing.Size)">
            <summary>
            Generates the challenge image.
            </summary>
            <param name="text">The text to be rendered into the image.</param>
            <param name="size">The size of the image to generate.</param>
            <returns>A dynamically-generated challenge image.</returns>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.DistortImage(System.Drawing.Bitmap,System.Double)">
            <summary>
            Distorts the image.
            </summary>
            <param name="b">The image to be transformed.</param>
            <param name="distortion">An amount of distortion.</param>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.NextRandom(System.Int32)">
            <summary>
            Gets a random non-negative integer less than max.
            </summary>
            <param name="max">The upper-bound for the random number.</param>
            <returns>The generated random number.</returns>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.NextRandom(System.Int32,System.Int32)">
            <summary>
            Gets a random number between min and max, inclusive.
            </summary>
            <param name="min">The minimum possible value.</param>
            <param name="max">The maximum possible value.</param>
            <returns>The randomly generated number.</returns>
        </member>
        <member name="M:VC3.Web.UI.CaptchaGenerator.NextRandomDouble">
            <summary>
            Gets a randomly generated double between 0.0 and 1.1.
            </summary>
            <returns>The random number.</returns>
        </member>
        <member name="P:VC3.Web.UI.CaptchaGenerator.IsReusable">
            <summary>
            Gets the IsReusable property (true)
            </summary>
        </member>
        <member name="T:VC3.Web.UI.RandomNumbers">
            <summary>
            Provides cryptographically-strong pseudo-random numbers.
            Source: MSDN HIP Source Code
            </summary>
        </member>
        <member name="F:VC3.Web.UI.RandomNumbers.random">
            <summary>
            Random number generator.
            </summary>
        </member>
        <member name="F:VC3.Web.UI.RandomNumbers.rd4">
            <summary>
            Used by NextRandom and NextRandomDouble.
            </summary>
            <remarks>
            RNGCryptoServiceProvider is not thread-safe.  Therefore, we only call to on a single thread.
            As a result, we can resuse the same byte arrays for every call.
            </remarks>
        </member>
        <member name="F:VC3.Web.UI.RandomNumbers.rd8">
            <summary>
            Used by NextRandom and NextRandomDouble.
            </summary>
            <remarks>
            RNGCryptoServiceProvider is not thread-safe.  Therefore, we only call to on a single thread.
            As a result, we can resuse the same byte arrays for every call.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.RandomNumbers.Next(System.Int32)">
            <summary>
            Gets a random non-negative integer less than max.
            </summary>
            <param name="max">The upper-bound for the random number.</param>
            <returns>The generated random number.</returns>
        </member>
        <member name="M:VC3.Web.UI.RandomNumbers.Next(System.Int32,System.Int32)">
            <summary>
            Gets a random number between min and max, inclusive.
            </summary>
            <param name="min">The minimum possible value.</param>
            <param name="max">The maximum possible value.</param>
            <returns>The randomly generated number.</returns>
        </member>
        <member name="M:VC3.Web.UI.RandomNumbers.NextDouble">
            <summary>
            Gets a randomly generated double between 0.0 and 1.1.
            </summary>
            <returns>The random number.</returns>
        </member>
        <member name="T:VC3.Web.UI.RobotDetectedAction">
            <summary>
            RobotDetection enumerates the possible outcomes if a robot is detected. 
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Form">
            <summary>
            Provides mechanisms to automate form creation, by implementing <see cref="T:VC3.Web.UI.ISourceProvider"/>
            and <see cref="T:VC3.Web.UI.ISourceConsumer"/> to expose data to child controls, such as <see cref="T:VC3.Web.UI.Field"/>
            instances, by inserting templated form headers and footers, and by working with the 
            <see cref="T:VC3.Web.UI.SaveButton"/>, <see cref="T:VC3.Web.UI.DeleteButton"/>, and <see cref="T:VC3.Web.UI.CancelButton"/>
            controls to automatically handle standard form events, such as <see cref="E:VC3.Web.UI.Form.Save"/>
            and <see cref="E:VC3.Web.UI.Form.Delete"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Section">
            <summary>
            Automatically inserts templated form headers and footers based on
            configuration templates defined in the Web.config file.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Section.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.Form"/> and initializes a
            <see cref="T:VC3.Web.UI.SourceManager"/> to source source providers and consumers.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Section.MergeWith(VC3.Web.UI.Section)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.Section"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.Section"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.Section.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Section.CreateChildControls">
            <summary>
            Adds the form header and footer to the top and bottom of the
            form if specified
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Section.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Section.Header">
            <summary>
            Gets or sets the path to the form header user control that
            will be used when rendering the form.
            </summary>
            <remarks>
            The path will default to FormHeader.ascx unless a default value
            is specified for the form element in the Web.config file.
            If the path is null or "", the form header will not be rendered.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Section.Footer">
            <summary>
            Gets or sets the path to the form footer user control that
            will be used when rendering the form.
            </summary>
            <remarks>
            The path will default to FormFooter.ascx unless a default value
            is specified for the form element in the Web.config file.
            If the path is null or "", the form footer will not be rendered.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Section.Label">
            <summary>
            The label to display in the header of the form, if exposed
            by a header or footer <see cref="T:VC3.Web.UI.FormTemplate"/> subclass.
            </summary>
            <remarks>
            If the label is not specified, the label will default to the label
            for the underlying source property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Section.VC3#Web#UI#ITemplateProvider#ConfigurationTemplate">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Section.TemplateInternal">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the section.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.Form"/> and initializes a
            <see cref="T:VC3.Web.UI.SourceManager"/> to source source providers and consumers.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.MergeWith(VC3.Web.UI.Form)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.Form"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.Form"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.Form.VC3#Web#UI#ISourceProvider#RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.Form.VC3#Web#UI#ISourceProvider#GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="M:VC3.Web.UI.Form.UpdateSource">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.Form.CommitChanges">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> on the data source
            if the instance implements <see cref="T:VC3.ComponentModel.ICommittable"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.OnInit(System.EventArgs)">
            <summary>
            Ensures that child controls are created before viewstate or databinding occur.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Form.CreateChildControls">
            <summary>
            Adds the form header and footer to the top and bottom of the
            form if specified, and automatically adds <see cref="T:VC3.Web.UI.Field"/>
            instances to the form for all editable public properties on
            the data source if <see cref="P:VC3.Web.UI.Form.AutoGenerate"/> is true.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.OnSave(System.Object,System.EventArgs)">
            <summary>
            Called by <see cref="T:VC3.Web.UI.SaveButton"/> instances to save the form.
            The form will first raise the <see cref="E:VC3.Web.UI.Form.Save"/> event and then automatically
            save changes if <see cref="P:VC3.Web.UI.Form.AutoSave"/> is true.  The form will then
            redirect to <see cref="P:VC3.Web.UI.Form.ReturnUrl"/>, if specified, or call
            <see cref="M:VC3.Web.UI.Breadcrumb.GoBack"/> if <see cref="P:VC3.Web.UI.Form.AutoRedirect"/> is true.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Form.OnDelete(System.Object,System.EventArgs)">
            <summary>
            Called by <see cref="T:VC3.Web.UI.DeleteButton"/> instances to delete the source instance.
            The form will first raise the <see cref="E:VC3.Web.UI.Form.Delete"/> event and then automatically
            delete the instance if <see cref="P:VC3.Web.UI.Form.AutoDelete"/> is true.  The form will then
            redirect to <see cref="P:VC3.Web.UI.Form.ReturnUrl"/>, if specified, or call
            <see cref="M:VC3.Web.UI.Breadcrumb.GoBack"/> if <see cref="P:VC3.Web.UI.Form.AutoRedirect"/> is true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the form and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.Source">
            <summary>
            The property name or source path to data for the form.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.FormHeader">
            <summary>
            Gets or sets the path to the form header user control that
            will be used when rendering the form.
            </summary>
            <remarks>
            The path will default to FormHeader.ascx unless a default value
            is specified for the form element in the Web.config file.
            If the path is null or "", the form header will not be rendered.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.FormFooter">
            <summary>
            Gets or sets the path to the form footer user control that
            will be used when rendering the form.
            </summary>
            <remarks>
            The path will default to FormFooter.ascx unless a default value
            is specified for the form element in the Web.config file.
            If the path is null or "", the form footer will not be rendered.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.AutoGenerate">
            <summary>
            Indicates whether the form should automatically add
            <see cref="T:VC3.Web.UI.Field"/> instances based on the public
            properties on the instance specified by the
            <see cref="P:VC3.Web.UI.Form.Source"/> property.
            </summary>
            <remarks>
            Defaults to false when <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances are contained by the form, and to true
            when no consumers are present.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.Label">
            <summary>
            The label to display in the header of the form, if exposed
            by a header or footer <see cref="T:VC3.Web.UI.FormTemplate"/> subclass.
            </summary>
            <remarks>
            If the label is not specified, the label will default to the label
            for the underlying source property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.ReturnUrl">
            <summary>
            The url to redirect to after handling the <see cref="E:VC3.Web.UI.Form.Save"/>
            or <see cref="E:VC3.Web.UI.Form.Delete"/> events.
            </summary>
            <remarks>
            If a url is not specified, the form will call <see cref="M:VC3.Web.UI.Breadcrumb.GoBack"/>.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.SaveButtonText">
            <summary>
            The text to display when rendering the <see cref="T:VC3.Web.UI.SaveButton"/>
            for the form.
            </summary>
            <remarks>
            The button caption will default to "Save" if a value is
            not specified for this property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.DeleteButtonText">
            <summary>
            The text to display when rendering the <see cref="T:VC3.Web.UI.DeleteButton"/>
            for the form.
            </summary>
            <remarks>
            The button caption will default to "Delete" if a value is
            not specified for this property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.DeleteConfirmationText">
            <summary>
            The text to display when confirming a deletion when a user
            clicks the <see cref="T:VC3.Web.UI.DeleteButton"/> for the form.
            </summary>
            <remarks>
            The delete confirmation will default to
            "Are you sure you want to delete this item?"
            if a value is not specified for this property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.CancelButtonText">
            <summary>
            The text to display when rendering the <see cref="T:VC3.Web.UI.CancelButton"/>
            for the form.
            </summary>
            <remarks>
            The button caption will default to "Cancel" if a value is
            not specified for this property.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.Form.AutoSave">
            <summary>
            Indicates whether the form should automatically call the
            <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> method on the instance
            specified by the <see cref="P:VC3.Web.UI.Form.Source"/> property when the
            <see cref="E:VC3.Web.UI.Form.Delete"/> event fires as a result of the user
            clicking an instance of <see cref="T:VC3.Web.UI.DeleteButton"/> on the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.AutoDelete">
            <summary>
            Indicates whether the form should automatically call the
            <see cref="M:VC3.ComponentModel.IDeletable.Delete"/> method on the instance specified
            by the <see cref="P:VC3.Web.UI.Form.Source"/> property when the <see cref="E:VC3.Web.UI.Form.Delete"/>
            event fires as a result of the user clicking an instance of
            <see cref="T:VC3.Web.UI.DeleteButton"/> on the form.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.AutoRedirect">
            <summary>
            Indicates whether the form should automatically redirect the page to
            <see cref="P:VC3.Web.UI.Form.ReturnUrl"/> after handling <see cref="E:VC3.Web.UI.Form.Save"/> and
            <see cref="E:VC3.Web.UI.Form.Delete"/> events. 
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.VC3#Web#UI#ITemplateProvider#ConfigurationTemplate">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the data grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.VC3#Web#UI#ISourceProvider#SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Form.VC3#Web#UI#ISourceProvider#ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/>
             is a list type, or null if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/> is not a list.
            </summary>
        </member>
        <member name="E:VC3.Web.UI.Form.Save">
            <summary>
            Raised when an instance of <see cref="T:VC3.Web.UI.SaveButton"/> is pressed on the form.
            </summary>
        </member>
        <member name="E:VC3.Web.UI.Form.Delete">
            <summary>
            Raised when an instance of <see cref="T:VC3.Web.UI.DeleteButton"/> is pressed on the form.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FormTemplate">
            <summary>
            Optional base class for user controls that will be used as a
            template for <see cref="P:VC3.Web.UI.FormTemplate.Form"/> controls.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SectionTemplate">
            <summary>
            Optional base class for user controls that will be used as a
            template for <see cref="P:VC3.Web.UI.SectionTemplate.Section"/> controls.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FormButton">
            <summary>
            Abstract base class for buttons designed to work within <see cref="P:VC3.Web.UI.FormButton.Form"/> instances.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.FormButton.Form">
            <summary>
            The parent <see cref="P:VC3.Web.UI.FormButton.Form"/> instance.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SaveButton">
            <summary>
            Calls the <see cref="M:VC3.Web.UI.Form.OnSave(System.Object,System.EventArgs)"/> method on the parent form when clicked.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SaveButton.OnPreRender(System.EventArgs)">
            <summary>
            Updates the <see cref="T:VC3.Web.UI.Text"/> property of the button using
            the value of the <see cref="P:VC3.Web.UI.Form.SaveButtonText"/> property.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SaveButton.OnClick(System.EventArgs)">
            <summary>
            Calls the <see cref="M:VC3.Web.UI.Form.OnSave(System.Object,System.EventArgs)"/> method on the parent form
            if the page is valid.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DeleteButton">
            <summary>
            Calls the <see cref="M:VC3.Web.UI.Form.OnDelete(System.Object,System.EventArgs)"/> method on the parent form when clicked.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DeleteButton.OnPreRender(System.EventArgs)">
            <summary>
            Updates the <see cref="T:VC3.Web.UI.Text"/> property of the button using
            the value of the <see cref="P:VC3.Web.UI.Form.DeleteButtonText"/> property.
            Also configures the button to display a confirmation dialog
            using the value of the <see cref="P:VC3.Web.UI.Form.DeleteConfirmationText"/>
            property.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DeleteButton.OnClick(System.EventArgs)">
            <summary>
            Calls the <see cref="M:VC3.Web.UI.Form.OnDelete(System.Object,System.EventArgs)"/> method on the parent form
            if the page is valid.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.CancelButton">
            <summary>
            Redirects to the previous page in the <see cref="T:VC3.Web.UI.Breadcrumb"/>
            or to the <see cref="P:VC3.Web.UI.Form.ReturnUrl"/> when the button is
            contained by a <see cref="T:VC3.Web.UI.Form"/>, and a url is specified.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.CancelButton.OnPreRender(System.EventArgs)">
            <summary>
            Updates the <see cref="T:VC3.Web.UI.Text"/> property of the button using
            the value of the <see cref="P:VC3.Web.UI.Form.CancelButtonText"/> property.
            Also adds an onclick event to the button to redirect to the
            value of the <see cref="P:VC3.Web.UI.Form.ReturnUrl"/>, if available, or
            the value of the <see cref="P:VC3.Web.UI.Breadcrumb.PreviousPage"/> property.
            </summary>
            <remarks>
            If the <see cref="T:VC3.Web.UI.CancelButton"/> is hosted in an instance of
            <see cref="T:VC3.Web.UI.BaseDialogPage"/>, the button will add an onclick
            event that will close the dialog instead of redirecting to a url.
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.EnableGlobalScopeEditingAttribute">
            <summary>
            Place this on a page to enable the editing of <see cref="T:VC3.ComponentModel.BusinessObject"/> objects in <see cref="T:VC3.ComponentModel.GlobalScope"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ButtonType">
            <summary>
            Identifiers the set of button types supported by the
            <see cref="T:VC3.Web.UI.DialogButton"/> control.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DialogSubmitEventHandler">
            <summary>
            Event handler for dialog submission.
            See the <see cref="E:VC3.Web.UI.Dialog.Submit"/> event.
            </summary>
            <remarks>
            <see cref="E:VC3.Web.UI.Dialog.Submit"/>
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.DialogSubmitEventArgs">
            <summary>
            Event for dialog submission.
            See the <see cref="E:VC3.Web.UI.Dialog.Submit"/> event.
            </summary>
            <remarks>
            <see cref="E:VC3.Web.UI.Dialog.Submit"/>
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.DialogSubmitEventArgs.ReturnValue">
            <summary>
            Gets the object returned by the dialog box.
            </summary>
            <remarks>
            This property contains the value passed to
            <see cref="M:VC3.Web.UI.BaseDialogPage.CloseDialog(System.Object)"/> by the dialog
            box that was closed.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.DialogSubmitEventArgs.CommandArgument">
            <summary>
            Gets the command argument, if any, specified for the
            <see cref="T:VC3.Web.UI.Dialog"/> that is raising this event.  This value
            is specified before the dialog is opened and can be used
            in the same way a <see cref="P:System.Web.UI.WebControls.Button.CommandArgument"/> is used.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.BaseDialogPage">
            <summary>
            Base class for pages displayed in a dialogbox.
            </summary>
            <remarks>
            <para>
            Works in conjunction with DialogBox.aspx.  Provides
            support for returning server-side objects from a dialog box to
            the page that opened the dialog via the CloseDialog
            dialog methods.
            </para>
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.OnPreRender(System.EventArgs)">
            <summary>
            Overridden to prevent ASP.NET validation script errors
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.CloseDialog(System.Object)">
            <summary>
            Returns script to client to close the dialog. The return
            value will be serialized and will be available in the 
            <see cref="P:VC3.Web.UI.DialogSubmitEventArgs.ReturnValue"/> property.
            </summary>
            <param name="returnValue">object to return to the page that opened the dialog box</param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.CloseDialog(System.String)">
            <summary>
            Includes script in the page to close the dialog bos and return the string
            value specified
            </summary>
            <param name="returnValue"></param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.CloseDialogAndRedirect(System.String)">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
            <param name="url">Url to redirect to</param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.CloseDialogAndRefresh">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.CloseDialogAndRedirect(System.String,System.Web.UI.Page)">
            <summary>
            Closes the dialog box and redirects the browser to the specified url
            without posting back or firing the Submit event of the <see cref="T:VC3.Web.UI.DialogButton"/>
            </summary>
            <param name="url">Url to redirect to</param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.GetCloseDialogAndRefreshScript">
            <summary>
            Gets a javascript statement that can be used to close the dialog
            and refresh the underlying page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.GetCloseDialogScript(System.String)">
            <summary>
            Gets a javascript statement that can be used to close the dialog
            while returning no value.
            </summary>
            <param name="returnValue">String value to return to opener</param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.GetCloseDialogScript">
            <summary>
            Gets a javascript statement that can be used to close the dialog
            while returning no value.  Useful for canceling.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.GetCloseDialogScript(System.String,System.String)">
            <summary>
            Utility method for generating a client script statement to close the dialog box
            </summary>
            <param name="returnExpr"></param>
            <param name="typeExpr"></param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.IsInDialog(System.Web.UI.Page)">
            <summary>
            Tests to see if a page is being hosted by the dialog box.
            </summary>
            <remarks>
            Sometimes pages want to ensure they are not hosted in a dialog box.
            This is common for login pages that might be opened in a dialog if the
            user's ticket expires and they click a link that opens the dialog.
            </remarks>
            <param name="page">Page to prevent from being in the dialog</param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.EnsureNotInDialog(System.Web.UI.Page,System.String)">
            <summary>
            Tests to see if a page is being hosted by the dialog box.
            If the page is opened in a dialog, the browser window that opened
            the dialog will be redirected to the page that was opened.
            </summary>
            <remarks>
            Sometimes pages want to ensure they are not hosted in a dialog box.
            This is common for login pages that might be opened in a dialog if the
            user's ticket expires and they click a link that opens the dialog.
            </remarks>
            <param name="page">Page to prevent from being in the dialog</param>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.UrlFor(System.String)">
            <summary>
            Gets a url that can be used to display a dialog box.
            </summary>
            <param name="dialogBoxUrl">Page to display in the dialog box</param>
            <returns>The url</returns>
        </member>
        <member name="M:VC3.Web.UI.BaseDialogPage.UrlFor(System.String,System.String)">
            <summary>
            Gets a url that can be used to display a dialog box.
            </summary>
            <param name="dialogBoxUrl">Page to display in the dialog box</param>
            <param name="dialogBoxTitle">Title to display in the dialog box</param>
            <returns>The url</returns>
        </member>
        <member name="P:VC3.Web.UI.BaseDialogPage.DialogHostUrl">
            <summary>
            Dialog boxes must be hosted by a frameset page to prevent
            form posts from targeting a new window. This is the url to the
            frameset page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BaseDialogPage.DialogFormUrl">
            <summary>
            Dialog box pages must be hosted by a frame page to prevent
            form posts from targeting a new window. This is the url to the
            frame page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BaseDialogPage.DialogArgument">
            <summary>
            Gets the arguments that were passed to the dialog box
            when it was opened.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.CalculateEventArgs">
            <summary>
            Class that contains the data for 
            the Calculate event. Derives from System.EventArgs.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Aggregate">
            <summary>
            Summary description for Aggregate.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Navigation.GetProperty(System.String)">
            <summary>
            Gets a custom property value for the current page or parent pages, or
            nothing if the property is undefined.
            </summary>
            <param name="propertyName">The property value to retrieve</param>
            <returns>The requested property value if available, or nothing if not</returns>
        </member>
        <member name="M:VC3.Web.UI.Navigation.GetProperty(System.String,System.String)">
            <summary>
            Gets a custom property value for the current page or parent pages, or
            returns the default value.
            </summary>
            <param name="propertyName">The property value to retrieve</param>
            <param name="defaultValue">The default value to return if the property is not defined</param>
            <returns>The requested property value if available, or the default value if not</returns>
        </member>
        <member name="M:VC3.Web.UI.Navigation.GetProperty(System.String,System.String,System.Boolean)">
            <summary>
            Gets a custom property value for the current page or parent pages, or
            returns the default value.
            </summary>
            <param name="propertyName">The property value to retrieve</param>
            <param name="defaultValue">The default value to return if the property is not defined</param>
            <param name="inherit">Indicates whether to inherit property values from parent pages</param>
            <returns>The requested property value if available, or the default value if not</returns>
        </member>
        <member name="M:VC3.Web.UI.Navigation.ChangeProvider(System.String,VC3.Web.UI.INavigationProvider)">
            <summary>
            Changes the current cached provider to the new provider
            </summary>
            <param name="newProvider">The new provider to be changed to.</param>
        </member>
        <member name="M:VC3.Web.UI.FrontPageNavigationProvider.VC3#Web#UI#INavigationProvider#LoadNavigation">
            <summary>
            Loads the site navigation by merging information from the file system and the FrontPage structure.cnf file.
            </summary>
            <returns>The site navigation as xml.</returns>
        </member>
        <member name="M:VC3.Web.UI.FrontPageNavigationProvider.LoadDirectory(System.String,VC3.Web.UI.INavItem,System.String)">
            <summary>
            Recursively loads navigation information from file system directories.
            </summary>
            <param name="directory">The current directory file path.</param>
            <param name="item">The current navigation container.</param>
            <param name="relativeUrl">The virtual path for the current directory.</param>
        </member>
        <member name="M:VC3.Web.UI.FrontPageNavigationProvider.LoadPage(System.String,VC3.Web.UI.INavItem)">
            <summary>
            Create, initialize, and append page elements to the current navigation container.
            </summary>
            <param name="url">The virtual path of the page.</param>
            <param name="item">The current navigation container.</param>
            <returns>The new page element.</returns>
        </member>
        <member name="M:VC3.Web.UI.FrontPageNavigationProvider.CalculateLevels(VC3.Web.UI.INavItem,System.Int32)">
            <summary>
            Recursively update the level attribute of all navigation page elements.
            </summary>
            <param name="item">The current navigational element.</param>
            <param name="level">The current navigation level.</param>
        </member>
        <member name="M:VC3.Web.UI.FrontPageNavigationProvider.GetDirectoryDependencies(System.String,System.Int32,System.Collections.ArrayList)">
            <summary>
            Recursively creates a list of all directories in the current site not prefixed by '_'.
            </summary>
            <param name="path">The current directory path.</param>
            <param name="offset">The physical path offset to the root of the site.</param>
            <param name="dependencies">The list of directory dependencies being populated.</param>
        </member>
        <member name="M:VC3.Web.UI.CsvNavigationProvider.LoadPage(System.String,VC3.Web.UI.INavItem)">
            <summary>
            Create, initialize, and append page elements to the current navigation container.
            </summary>
            <param name="url">The virtual path of the page.</param>
            <param name="parent">The current navigation container.</param>
            <returns>The new page element.</returns>
        </member>
        <member name="T:VC3.Web.UI.INavItem">
            <summary>
            Defines an abstract hierarchy of navigation information that is generated by
            navigation providers to populate navigation web controls.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SimpleNavItem">
            <summary>
            Provides a simple read/write implementation of the INavItem interface for
            exposing navigation information from a navigation provider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SimpleNavItem.AllowedRoles">
            <summary>
            Gets or sets the AllowedRoles property for the NavItem.
            </summary>
            <remarks>
            If the specified item does not have an explicity specified set of AllowedRoles,
            inherit the AllowedRoles property from the item's parent.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SimpleNavItem.DeniedRoles">
            <summary>
            Gets or sets the DeniedRoles property for the NavItem.
            </summary>
            <remarks>
            If the specified item does not have an explicity specified set of DeniedRoles,
            inherit the DeniedRoles property from the item's parent.
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.SiteMapNodeNavItem">
            <summary>
            Provides a simple read/write implementation of the INavItem interface for
            exposing navigation information from a navigation provider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SiteMapNodeNavItem.AllowedRoles">
            <summary>
            Gets or sets the AllowedRoles property for the NavItem.
            </summary>
            <remarks>
            If the specified item does not have an explicity specified set of AllowedRoles,
            inherit the AllowedRoles property from the item's parent.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.SiteMapNodeNavItem.DeniedRoles">
            <summary>
            Gets or sets the DeniedRoles property for the NavItem.
            </summary>
            <remarks>
            If the specified item does not have an explicity specified set of DeniedRoles,
            inherit the DeniedRoles property from the item's parent.
            </remarks>
        </member>
        <member name="T:VC3.Web.UI.Nav">
            <summary>
            Enables navigation elements to be dynamically rendered based on templates and navigation structure. 
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Nav.OnInit(System.EventArgs)">
            <summary>
            Overridden to enforce page-level security
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Nav.CreateChildControls">
            <summary>
            Dynamically creates navigation elements based on navigation information and templates.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Nav.ApplyLevel(System.Int32,System.Collections.Generic.List{VC3.Web.UI.INavItem})">
            <summary>
            Returns a generic INavItem list that consists of the original navItems list, beginning at the zero based level
            specified in the start parameter
            </summary>
            <param name="start"></param>
            <param name="navItems"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Nav.ApplyOffset(System.Int32,VC3.Web.UI.INavItem)">
            <summary>
            Removes the child NavItems of the navItem past the level specifed by depth 
            </summary>
            <param name="depth"></param>
            <param name="navItem"></param>
        </member>
        <member name="P:VC3.Web.UI.Nav.Level">
            <summary>
            The level of navigation to render:
            0 = Global, 1 = Primary, 2 = Secondary, etc..
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.Offset">
            <summary>
            The offset from the current page level of navigation to render:
            -2 = Grandparents, -1 = Parents, 0 = Siblings, 1 = Children, etc..
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.Type">
            <summary>
            Specifies the type of navigation to render:
            Section (default), Global, or Breadcrumb
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.HeaderTemplate">
            <summary>
            Optional template that is included first if any navigation elements exist.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.ItemTemplate">
            <summary>
            Required navigation template used by default for all navigation items.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.AlternatingTemplate">
            <summary>
            Optional navigation template used for every other navigation item.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.SelectedTemplate">
            <summary>
            Optional navigation template used for selected navigation items.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.FooterTemplate">
            <summary>
            Optional template that is included last if any navigation elements exist.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.SeparatorTemplate">
            <summary>
            Optional template that is included between navigation items.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Nav.UnknownPageTemplate">
            <summary>
            Optional template that is included if the current page
            does not exist in the navigation hierarchy.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.NavItem">
            <summary>
            Exposes navigation url and title infomation for use in databinding.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.NavItem.#ctor(VC3.Web.UI.INavItem)">
            <summary>
            Constructs a new navigation item with the specified url and title.
            </summary>
            <param name="item">The title of the navigation item.</param>
        </member>
        <member name="P:VC3.Web.UI.NavItem.Url">
            <summary>
            The url of the navigation item.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.Target">
            <summary>
            The target of the navigation item.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.IsVisible">
            <summary>
            A flag indicating whether the navigation item should appear in the navigation.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.IsDisabled">
            <summary>
            A flag indicating whether the navigation item should be disabled in the navigation.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.IsGlobal">
            <summary>
            A flag indicating whether the navigation item should appear in the global navigation.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.Label">
            <summary>
            The label of the navigation item.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.NavItem.Description">
            <summary>
            The description of the navigation item.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.LengthValidator">
            <summary>
            Summary description for LengthValidator.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Breadcrumb">
            <summary>
            Summary description for Breadcrumb.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.CreateChildControls">
            <summary>
            Dynamically creates navigation elements based on navigation information and templates.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.RegisterPage(System.String)">
            <summary>
            Registers the current page.  Attempts to use
            <see cref="M:VC3.Web.UI.BasePage.UrlFor"/> as the page url.
            </summary>
            <param name="title">The title of the page to diplay in the breadcrumb trail.</param>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.RegisterPage(System.String,System.String)">
            <summary>
            Registers the current page using the specific url.
            </summary>
            <param name="title">The title of the page to diplay in the breadcrumb trail.</param>
            <param name="url">The url of the current page.</param>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.RestartTrail">
            <summary>
            Restarts the breadcrumb by removing all crumbs.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.SetParameter(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Sets a value associated with the breadcrumb used to access the
            current page.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Breadcrumb.GetParameter(System.Web.UI.Control,System.String)">
            <summary>
            Retrieves a value associated with the breadcrumb used to access the
            current page.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.RootTitle">
            <summary>
            Gets or sets the title of the root page in the breadcrumb trail.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.RootUrl">
            <summary>
            Gets or sets the url of the root page in the breadcrumb trail.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.ShowRoot">
            <summary>
            Indicates whether to show the root page in the breadcrumb trail.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.ItemTemplate">
            <summary>
            Required navigation template used by default for all navigation items.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.SelectedTemplate">
            <summary>
            Optional navigation template used for selected navigation items.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.Breadcrumb.SeparatorTemplate">
            <summary>
            Optional template that is included between navigation items.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SourceManager">
            <summary>
            Enables controls to easily implement <see cref="T:VC3.Web.UI.ISourceProvider"/>,
            <see cref="T:VC3.Web.UI.ISourceConsumer"/>, <see cref="T:VC3.ComponentModel.ICommittable"/>, and 
            <see cref="T:VC3.ComponentModel.IDeletable"/> by tracking source provider and consumer
            informtion on behalf of the owner control.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.#ctor(System.Web.UI.Control)">
            <summary>
            Creates a new instance of <see cref="T:VC3.Web.UI.SourceManager"/> to manage
            the datasource information for the specified <see cref="T:System.Web.UI.Control"/>
            </summary>
            <param name="owner">The <see cref="T:System.Web.UI.Control"/> requesting management of source data</param>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.ClearCache">
            <summary>
            Clears all internal caches
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.GetInheritedTemplate(System.Web.UI.Control)">
            <summary>
            Returns a <see cref="P:VC3.Web.UI.SourceManager.ConfigurationTemplate"/> associated with <see cref="T:System.Web.UI.Control"/>
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.VC3#Web#UI#ISourceProvider#GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.UpdateSource">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.CommitChanges">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> on the <see cref="P:VC3.Web.UI.SourceManager.Instance"/>
            property if the instance implements <see cref="T:VC3.ComponentModel.ICommittable"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.Delete">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.IDeletable.Delete"/> on the <see cref="P:VC3.Web.UI.SourceManager.Instance"/>
            property if the instance implements <see cref="T:VC3.ComponentModel.IDeletable"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.SourceManager.owner_Init(System.Object,System.EventArgs)">
            <summary>
            Registers the manager with parent provider if one exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Root">
            <summary>
            Gets the root instance from which to evaluate the source path.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.RootType">
            <summary>
            Gets the root type from which to evaluate the source path.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.IsValid">
            <summary>
            Indicates whether the current property source is valid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.ReasonInvalid">
            <summary>
            Gets the reason that the data source is not valid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Property">
            <summary>
            Gets or sets a <see cref="T:VC3.ComponentModel.PropertyReflector"/> instance for the
            property referred to by the <see cref="P:VC3.Web.UI.SourceManager.Source"/> property.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Provider">
            <summary>
            Gets the first parent control that implements
            <see cref="T:VC3.Web.UI.ISourceProvider"/>, or null if no parent
            provider could be found.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Consumers">
            <summary>
            Gets the source consumers registered with the manager.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Instance">
            <summary>
            Gets the instance specified by the <see cref="P:VC3.Web.UI.SourceManager.Source"/> property
            by retrieving the value from a parent control that implements
            <see cref="T:VC3.Web.UI.ISourceProvider"/>, or from the underlying page if no
            parent provider exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Value">
            <summary>
            Gets the value specified by the <see cref="P:VC3.Web.UI.SourceManager.Source"/> property
            by retrieving the value from a parent control that implements
            <see cref="T:VC3.Web.UI.ISourceProvider"/>, or from the underlying page if no
            parent provider exists.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.Source">
            <summary>
            Gets or sets the property name or source path to the data for
            the owner control.  The referenced property may be on the
            underlying page or exposed by a parent control implementing
            <see cref="T:VC3.Web.UI.ISourceProvider"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.SourceManager.SourceType"/>
             is a list type, or <see cref="P:VC3.Web.UI.SourceManager.SourceType"/> itself if it is not a list.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.VC3#Web#UI#ISourceConsumer#NamingContainer">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.ISourceConsumer.NamingContainer"/> of the owner control.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.HasConsumers">
            <summary>
            Indicates whether one or more <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances
            have been registered with the <see cref="T:VC3.Web.UI.SourceManager"/>.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.ConfigurationTemplate">
            <summary>
            Gets or sets the <see cref="P:VC3.Web.UI.SourceManager.ConfigurationTemplate"/> for
            the source provider or consumer.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.SourceManager.CanDelete">
            <summary>
            Returns <see cref="P:VC3.ComponentModel.IDeletable.CanDelete"/> on the <see cref="P:VC3.Web.UI.SourceManager.Instance"/>
            property if the instance implements <see cref="T:VC3.ComponentModel.IDeletable"/>.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.SourceRootAttribute">
            <summary>
            Marks a <see cref="T:System.Web.UI.Control"/> subclass as being the root
            for source data instead of the underlying page.
            
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DataContainerUserControl">
            <summary>
            If subclassed. allows a user control to be the Root at which
            all Source expressions in the control are evaluated. User controls are nested within a control that
            implements ISourceProvider (such as the DataGrid control) will have their source
            expression evaluated against the object that the DataGrid provides and not the user
            control itself. This class allows user control to be the Root even if they are hosted
            within an a Control that implements <see cref="T:VC3.Web.UI.ISourceProvider"/>
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataContainerUserControl.Source">
            <summary>
            Gets or sets the property name or source path to data for the field.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataContainerUserControl.SourceValue">
            <summary>
            Gets or sets the value of the source property
            represented by the field.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.BinaryField">
            <summary>
            BinaryField is the base class for controls that handle binary input/display such as images and binary files
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BinaryField.CreateChildControls">
            <summary>
            Creates the child controls associated with the binary data
            </summary>
        </member>
        <member name="M:VC3.Web.UI.BinaryField.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:VC3.Web.UI.BinaryField.CheckFileSize">
            <summary>
            Checks fileSize to insure that it
            </summary>
            <returns>False if uploaded file exceeds MaxBytes value</returns>
        </member>
        <member name="M:VC3.Web.UI.BinaryField.CheckFileExtension">
            <summary>
            Checks file extension to insure it is one of the allowed extensions.
            If AllowedExtensions is not set, then any extension is allowed.
            </summary>
            <returns>False if the extension is not in the list of allowed extensions</returns>
        </member>
        <member name="M:VC3.Web.UI.BinaryField.OnLoad(System.EventArgs)">
            <summary>
            Handles the OnLoad event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.FileUpload">
            <summary>
            Gets or Sets the FileUpload control
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.CheckBox">
            <summary>
            Gets or Sets the CheckBox control
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.Bytes">
            <summary>
            Gets or sets the Bytes byte array value, which is the binary data
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.MaxBytes">
            <summary>
            Gets or sets the maximum file size
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.HideRemoveCheckbox">
            <summary>
            Gets or sets the HideRemoveCheckbox. If set to true, the Remove checkbox will be hidden.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.RemoveLabel">
            <summary>
            Gets or sets the Remove checkbox label.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.AllowedExtensions">
            <summary>
            Gets or sets the a comma separted list of allowed extensions. Example: 'pdf,doc'
            </summary>
        </member>
        <member name="P:VC3.Web.UI.BinaryField.FileName">
            <summary>
            Gets or sets the name of the uploaded file.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.Image">
            <summary>
            Image provides edit functionality for images
            </summary>
        </member>
        <member name="M:VC3.Web.UI.Image.GetImageUrl(VC3.Web.UI.FieldValue,VC3.Web.UI.FieldMap,System.Object)">
            <summary>
            Gets an image URL for the specified FieldValue, FieldMap and Value.
            </summary>
            <param name="fieldValue"></param>
            <param name="fieldMap"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VC3.Web.UI.Image.OnLoad(System.EventArgs)">
            <summary>
            Handles the OnLoad event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.Image.RemoveImageFromCache(System.Byte[])">
            <summary>
            Removes the image from the HttpCache
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:VC3.Web.UI.Image.AddImageToCache(System.Byte[])">
            <summary>
            Adds the image to the HttpCache
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:VC3.Web.UI.Image.Bytes">
            <summary>
            Gets or sets the Bytes byte array value, which is the image data
            </summary>
        </member>
        <member name="T:VC3.Web.UI.FileDocument">
            <summary>
            Image provides edit functionality for documents such as .doc, .pdf, etc. To provide rendering capabilities, you
            must implement a domain specific HttpHandler or page that can render the document in question. See ImageHandler as an example.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.FileDocument.OnLoad(System.EventArgs)">
            <summary>
            Handles the OnLoad event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:VC3.Web.UI.FileDocument.Bytes">
            <summary>
            Gets or sets the Bytes byte array value, which is the image data
            </summary>
        </member>
        <member name="T:VC3.Web.UI.ImageHandler">
            <summary>
            ImageHandler provides browser rendering of binary data (i.e. images). A custom ImageHandler can be implemented for
            a given domain and specified in the control mapping of the web.config file.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.ImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the HttpContext for the ashx request.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:VC3.Web.UI.ImageHandler.IsReusable">
            <summary>
            Gets the IsReusable property (true)
            </summary>
        </member>
        <member name="T:VC3.Web.UI.DataGrid">
            <summary>
            Provides extended functionality over the core <see cref="T:System.Web.UI.WebControls.DataGrid"/>
            class by implementing <see cref="T:VC3.Web.UI.ISourceProvider"/> and <see cref="T:VC3.Web.UI.ISourceConsumer"/> to
            expose data to child controls, such as <see cref="T:VC3.Web.UI.PropertyColumn"/> or <see cref="T:VC3.Web.UI.Field"/>
            instances.
            
            Also allows default formatting and settings to be specified in the Web.config file.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:VC3.Web.UI.DataGrid"/> and initializes
            <see cref="T:VC3.Web.UI.SourceManager"/> to track source information for the grid.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.MergeWith(VC3.Web.UI.DataGrid)">
            <summary>
            Copy settings from the specified <see cref="T:VC3.Web.UI.DataGrid"/> template.
            </summary>
            <param name="template">The <see cref="T:VC3.Web.UI.DataGrid"/> to copy settings from</param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.OnInit(System.EventArgs)">
            <summary>
            Merges settings with the current <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> and
            hooks up the sort event handler.
            </summary>
            <param name="e">The Init event args</param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.DataBind">
            <summary>
            Automatically sorts the datasource when <see cref="P:VC3.Web.UI.DataGrid.AutoSort"/> is true.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.ProcessGroupColumns">
            <summary>
            Iterates over the group column in the data grid and
            dynamically add/removes them to enable 
            column grouping
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.OnPreRender(System.EventArgs)">
            <summary>
            Overriden to save changes to the state of the grid.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.SaveState">
            <summary>
            Updates the state of the grid when <see cref="P:VC3.Web.UI.DataGrid.StatePreservation"/> is enabled.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.RestoreState">
            <summary>
            Updates the state of the grid when <see cref="P:VC3.Web.UI.DataGrid.StatePreservation"/> is enabled.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.VC3#Web#UI#ISourceProvider#RegisterConsumer(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Registers an <see cref="T:VC3.Web.UI.ISourceConsumer"/> with the provider.
            </summary>
            <param name="consumer">The <see cref="T:VC3.Web.UI.ISourceConsumer"/> to register</param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.VC3#Web#UI#ISourceProvider#GetInstance(VC3.Web.UI.ISourceConsumer)">
            <summary>
            Returns the source instance for the specified consumer.
            </summary>
            <param name="consumer">The consumer to retrieve the instance for</param>
            <returns>The requested source instance</returns>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.UpdateSource">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.UpdateSource(System.Boolean)">
            <summary>
            Calls <see cref="M:VC3.Web.UI.ISourceConsumer.UpdateSource(System.Boolean)"/> on all <see cref="T:VC3.Web.UI.ISourceConsumer"/>
            instances contained by the provider, and optionally ignores exceptions
            when updating source information for each consumer managed by the current
            provider.
            </summary>
            <param name="ignoreExceptions">Indicates whether exceptions should be ignored</param>
            <remarks>
            This mechanism is useful when persisting temporary changes when it is not possible
            to catch the errors before performing a postback.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.CommitChanges">
            <summary>
            Calls <see cref="M:VC3.ComponentModel.ICommittable.CommitChanges"/> on the <see cref="P:VC3.Web.UI.DataGrid.DataSource"/>
            property if the instance implements <see cref="T:VC3.ComponentModel.ICommittable"/>.
            </summary>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.DataGrid_SortCommand(System.Object,System.Web.UI.WebControls.DataGridSortCommandEventArgs)">
            <summary>
            Automatically sorts the datagrid if <see cref="P:VC3.Web.UI.DataGrid.AutoSort"/> is true.
            </summary>
            <param name="source">The source of the sort event</param>
            <param name="e">The sort command arguments</param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.DataGrid_ItemCreated(System.Object,System.Web.UI.WebControls.DataGridItemEventArgs)">
            <summary>
            Automatically creates group column headers if the grid contains one
            or more instances of <see cref="T:VC3.Web.UI.GroupColumn"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:VC3.Web.UI.DataGrid.DataGrid_PageIndexChanged(System.Object,System.Web.UI.WebControls.DataGridPageChangedEventArgs)">
            <summary>
            Enables the grid to track changes to the page index when <see cref="P:VC3.Web.UI.DataGrid.StatePreservation"/> is true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.Template">
            <summary>
            The name of the configuration template to use to customize
            the appearance and behavior of the data grid and child controls.
            </summary>
            <remarks>
            If no template is specified, the default template will be used.
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.DataSource">
            <summary>
            Exposes the data identified by the <see cref="P:VC3.Web.UI.DataGrid.Source"/> property
            if a datasource is not explicitly assigned.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.Source">
            <summary>
            The property name or source path to data for the grid.
            The referenced property may be on the underlying page or exposed
            by a parent control implementing ISourceProvider.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.IsReadOnly">
            <summary>
            Returns true if the <see cref="T:VC3.Web.UI.ISourceProvider"/> is read-only
            and notifies child <see cref="T:VC3.Web.UI.ISourceConsumer"/> instances that
            data editing is not allowed.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.AutoPage">
            <summary>
            Gets or sets whether the <see cref="T:VC3.Web.UI.DataGrid"/> automatically
            pages the underlying datasource.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.AutoSort">
            <summary>
            Gets or sets whether the <see cref="T:VC3.Web.UI.DataGrid"/> automatically
            sorts the underlying datasource when sortable column headers
            are clicked.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.AutoScroll">
            <summary>
            Gets or sets whether the <see cref="T:VC3.Web.UI.DataGrid"/> automatically
            scrolls the contents of the grid while locking the header and footer rows.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.AutoDataBindArea">
            <summary>
            Indicates the area of the page that should be databound when
            the control is auto databinding (such as when its auto sorting).
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.StatePreservation">
            <summary>
            Gets or sets the <see cref="T:VC3.Web.UI.StatePreservationMode"/> to use to
            preserve the sorting and paging state for a user.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.MaxSortCriteria">
            <summary>
            Gets or sets the maximum nuber of sort criteria that will be tracked.
            If the initial sort criterial for the grid is larger than this number,
            it will be incremented so that the sort criteria is not lost.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.SortCriteria">
            <summary>
            Gets the <see cref="P:VC3.Web.UI.DataGrid.SortCriteria"/> tied to the grid.
            </summary>
            <remarks>
            <para>
            The <see cref="P:VC3.Web.UI.DataGrid.SortCriteria"/> instance tracks the sort state for
            the grid, including the sort order and direction for one or more
            columns up to the limit defined by the <see cref="P:VC3.Web.UI.DataGrid.MaxSortCriteria"/>
            property.
            </para>
            <para>
            The sort criteria for a new grid will automatically default to sort
            ascending on the first column.  However, this may be overriden by
            assigning values to the <see cref="P:VC3.Web.UI.PropertyColumn.SortOrder"/> and
            <see cref="P:VC3.Web.UI.PropertyColumn.SortDirection"/> properties on 
            <see cref="T:VC3.Web.UI.PropertyColumn"/> instances contained by the grid.
            </para>
            </remarks>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.GroupColumns">
            <summary>
            Gets the groups column in this data grid
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.NoItemsTemplate">
            <summary>
            Optional template rendered by the grid when no items exist in the datasource.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.Manager">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.SourceManager"/> that tracks source
            property information for the data grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.VC3#Web#UI#ITemplateProvider#ConfigurationTemplate">
            <summary>
            Gets the <see cref="T:VC3.Web.UI.ConfigurationTemplate"/> for the data grid.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.VC3#Web#UI#ISourceProvider#SourceType">
            <summary>
            Gets the type of the property exposed by the <see cref="T:VC3.Web.UI.ISourceProvider"/>
            instance for the current source.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.DataGrid.VC3#Web#UI#ISourceProvider#ItemType">
            <summary>
            Gets the type of item contained in the list if the <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/>
             is a list type, or <see cref="P:VC3.Web.UI.ISourceProvider.SourceType"/> itself if it is not a list.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.GroupColumn">
            <summary>
            Works in conjunction with <see cref="T:VC3.Web.UI.DataGrid"/> to group together
            related columns and provide a shared header cell above the group.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.GroupColumn.Columns">
            <summary>
            The collection of grouped columns.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.AutoDataBindArea">
            <summary>
            Affects the scope of automatic data binding
            </summary>
        </member>
        <member name="T:VC3.Web.UI.InlineEdit">
            <summary>
            Web control for client-side, inline editing
            </summary>
            <remarks>
            When <see cref="P:VC3.Web.UI.InlineEdit.AllowEdit"/> is false, the control's ViewState
            will be disabled in order to minimize download time.
            </remarks>
        </member>
        <member name="M:VC3.Web.UI.InlineEdit.FindControl(System.String,System.Int32)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.FindControl(System.String)"/> to locate a control
            contained by any InlineEdit control within this InlineEdit edit
            group, starting with the current control.
            </summary>
            <param name="id">Id of the control to locate.</param>
            <returns>The control or null if the control is not found.</returns>
        </member>
        <member name="M:VC3.Web.UI.InlineEdit.FindEditGroupControls(System.Web.UI.Control,System.Collections.ArrayList)">
            <summary>
            Finds all InlineEdit controls in the same group as this one.
            </summary>
            <param name="c"></param>
            <param name="foundControls"></param>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.ItemTemplate">
            <summary>
            Template for the item in view mode
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.EditItemTemplate">
            <summary>
            Template for the item in edit mode
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.DataSource">
            <summary>
            The id of the object, used to scope the editor
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.EditGroup">
            <summary>
            Used to group a set of <see cref="T:VC3.Web.UI.InlineEdit"/> controls together
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.AllowEdit">
            <summary>
            Specifies whether or not the edit controls should be enabled.
            Default is true. Setting this property to false will also
            set the <see cref="P:VC3.Web.UI.InlineEdit.ShowEditLink"/> property to false.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.ShowEditLink">
            <summary>
            If true, a link will be placed around the view template that,
            when clicked, will cause the edit group to enter edit mode. The
            default is true. Set to false when the <see cref="P:VC3.Web.UI.InlineEdit.ItemTemplate"/> 
            contains a link.  This property can only be true when <see cref="P:VC3.Web.UI.InlineEdit.AllowEdit"/> is
            also true.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.EditGroupCode">
            <summary>
            Used to group a set of <see cref="T:VC3.Web.UI.InlineEdit"/> controls together. A shorter version of the
            EditGroup property.  Persisted between postbacks.
            </summary>
        </member>
        <member name="P:VC3.Web.UI.InlineEdit.ControlsInEditGroup">
            <summary>
            All InlineEdit controls in the same edit group as this one.
            </summary>
        </member>
        <member name="T:VC3.Web.UI.InlineEdit.ItemContainer">
            <summary>
            Container for the ItemTemplate instance
            </summary>
        </member>
        <member name="T:VC3.Web.UI.InlineEdit.EditItemContainer">
            <summary>
            Container for the EditItemTemplate instance
            </summary>
        </member>
        <member name="T:VC3.Web.UI.CancelInlineEditButton">
            <summary>
            Button to cancel an InlineEdit
            </summary>
        </member>
    </members>
</doc>
